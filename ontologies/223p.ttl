@prefix ns1: <http://qudt.org/schema/qudt/> .
@prefix ns2: <http://sample.org/doc#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix s223: <http://data.ashrae.org/standard223#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

s223:Class a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Class"^^xsd:string ;
    rdfs:comment "This is a modeling construct. All classes defined in the 223 standard are instances of `s223:Class`."^^xsd:string ;
    rdfs:subClassOf rdfs:Class .

s223:SymmetricRelation a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Symmetric relation"^^xsd:string ;
    rdfs:comment "A `SymmetricRelation` is modeling construct used to define symmetric behavior for certain relations in the standard such as `cnx` and `connected`."^^xsd:string ;
    rdfs:subClassOf rdf:Property .

<http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterCoil> a s223:Class,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "ChilledWaterCoil"^^xsd:string ;
    rdfs:comment "A cooling element made of pipe or tube that may or may not be finned and formed into helical or serpentine shape."^^xsd:string ;
    rdfs:subClassOf s223:CoolingCoil ;
    sh:property [ rdfs:comment "The ChilledWaterCoil shall be connected to a ChilledWaterValve using the relation connectedTo."^^xsd:string ;
            sh:path s223:connectedTo ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class <http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterValve> ] ] .

<http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterValve> a s223:Class,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Valve"^^xsd:string ;
    rdfs:comment "A device to regulate or stop the flow of cold fluid in a pipe or a duct by throttling."^^xsd:string ;
    rdfs:subClassOf s223:Valve .

<http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterValveOrShape1> a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Valve Or Shape 1"^^xsd:string ;
    rdfs:comment "A ChilledWaterValve shall have at least one analog valve command property or at least two binary valve command properties using the relation hasProperty."^^xsd:string ;
    sh:message "g36: A ChilledWaterValve shall have at least one analog valve command property or at least two binary valve command properties using the relation hasProperty."^^xsd:string ;
    sh:or ( [ sh:property [ rdfs:comment "A ChilledWaterValve shall have at least one analog valve command property or at least two binary valve command properties using the relation hasProperty."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasProperty ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:QuantifiableActuatableProperty ;
                                sh:node [ sh:property [ sh:hasValue s223:Binary-Position ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path s223:hasAspect ],
                                            [ sh:hasValue <http://qudt.org/vocab/quantitykind/DimensionlessRatio> ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path ns1:hasQuantityKind ] ] ] ] ] [ sh:property [ rdfs:comment "A ChilledWaterValve shall have at least one analog valve command property or at least two binary valve command properties using the relation hasProperty."^^xsd:string ;
                        sh:minCount 2 ;
                        sh:path s223:hasProperty ;
                        sh:qualifiedMinCount 2 ;
                        sh:qualifiedValueShape [ sh:class s223:EnumeratedActuatableProperty ;
                                sh:node [ sh:property [ sh:hasValue s223:EnumerationKind-Binary ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path s223:hasEnumerationKind ],
                                            [ sh:hasValue s223:Binary-Position ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path s223:hasAspect ] ] ] ] ] ) ;
    sh:targetClass <http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterValve> .

<http://data.ashrae.org/standard223/1.0/extensions/g36#Damper> a s223:Class,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Damper"^^xsd:string ;
    rdfs:comment "An element inserted into an air-distribution system or element of an air-distribution system permitting modification of the air resistance of the system and consequently changing the airflow rate or shutting off the airflow."^^xsd:string ;
    rdfs:subClassOf s223:Damper .

<http://data.ashrae.org/standard223/1.0/extensions/g36#DamperOrShape1> a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Damper Or Shape 1"^^xsd:string ;
    rdfs:comment "A damper shall have at least one analog damper command property or at least two binary damper command properties using the relation hasProperty."^^xsd:string ;
    sh:message "g36: A damper shall have at least one analog damper command property or at least two binary damper command properties using the relation hasProperty."^^xsd:string ;
    sh:or ( [ sh:property [ rdfs:comment "A damper shall have at least one analog damper command property or at least two binary damper command properties using the relation hasProperty."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasProperty ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:QuantifiableActuatableProperty ;
                                sh:node [ sh:property [ sh:hasValue s223:Binary-Position ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path s223:hasAspect ],
                                            [ sh:hasValue <http://qudt.org/vocab/quantitykind/DimensionlessRatio> ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path ns1:hasQuantityKind ] ] ] ] ] [ sh:property [ rdfs:comment "A damper shall have at least one analog damper command property or at least two binary damper command properties using the relation hasProperty."^^xsd:string ;
                        sh:minCount 2 ;
                        sh:path s223:hasProperty ;
                        sh:qualifiedMinCount 2 ;
                        sh:qualifiedValueShape [ sh:class s223:EnumeratedActuatableProperty ;
                                sh:node [ sh:property [ sh:hasValue s223:EnumerationKind-Binary ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path s223:hasEnumerationKind ],
                                            [ sh:hasValue s223:Binary-Position ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path s223:hasAspect ] ] ] ] ] ) ;
    sh:targetClass <http://data.ashrae.org/standard223/1.0/extensions/g36#Damper> .

<http://data.ashrae.org/standard223/1.0/extensions/g36#ElectricHeatingCoil> a s223:Class,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Electric Heating Coil"^^xsd:string ;
    rdfs:comment "A heating element that forms into a helical or serpentine shape and uses electricity to perform heating."^^xsd:string ;
    rdfs:subClassOf s223:ElectricResistanceElement ;
    sh:property [ rdfs:comment "An electric heating coil shall have at least one analog heating command property using a relation hasProperty."^^xsd:string ;
            sh:message "g36: An electric heating coil shall have at least one analog heating command property using a relation hasProperty."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasProperty ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:QuantifiableActuatableProperty ;
                    sh:node [ sh:property [ sh:hasValue <http://qudt.org/vocab/quantitykind/DimensionlessRatio> ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path ns1:hasQuantityKind ] ] ] ] .

<http://data.ashrae.org/standard223/1.0/extensions/g36#Fan> a s223:Class,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Fan"^^xsd:string ;
    rdfs:comment "A machine used to create flow within a gas such as air."^^xsd:string ;
    rdfs:subClassOf s223:Fan ;
    sh:property [ rdfs:comment "A Fan shall have at least one Start/Stop command using the relation hasProperty."^^xsd:string ;
            sh:message "g36: A Fan shall have at least one Start/Stop command using the relation hasProperty."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasProperty ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:EnumeratedActuatableProperty ;
                    sh:node [ sh:property [ sh:class s223:Binary-OnOff ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path s223:hasEnumerationKind ] ] ] ] .

<http://data.ashrae.org/standard223/1.0/extensions/g36#FanWithVFD> a s223:Class,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "FanWithVFD"^^xsd:string ;
    rdfs:comment "A machine used to create flow within a gas such as air. This machine can be controlled to vary in speed."^^xsd:string ;
    rdfs:subClassOf <http://data.ashrae.org/standard223/1.0/extensions/g36#Fan> ;
    sh:property [ rdfs:comment "A fan with VFD shall have at least one fan speed command using the relation hasProperty."^^xsd:string ;
            sh:message "g36: A fan with VFD shall have at least one fan speed command using the relation hasProperty."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasProperty ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:QuantifiableActuatableProperty ;
                    sh:node [ sh:property [ sh:hasValue s223:Aspect-Speed ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path s223:hasAspect ],
                                [ sh:hasValue <http://qudt.org/vocab/quantitykind/DimensionlessRatio> ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path ns1:hasQuantityKind ] ] ] ] .

<http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterCoil> a s223:Class,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "HotWater/ReheatCoil"^^xsd:string ;
    rdfs:comment "A heating element made of pipe or tube that may or may not be finned and formed into helical or serpentine shape."^^xsd:string ;
    rdfs:subClassOf s223:HeatingCoil ;
    sh:property [ rdfs:comment "The HotWaterCoil shall be connected to a HotWaterValve using the relation connectedTo."^^xsd:string ;
            sh:message "g36: The HotWaterCoil shall be connected to a HotWaterValve using the relation connectedTo."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:connectedTo ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class <http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterValve> ] ] .

<http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterValve> a s223:Class,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Valve"^^xsd:string ;
    rdfs:comment "A device to regulate or stop the flow of hot fluid in a pipe or a duct by throttling."^^xsd:string ;
    rdfs:subClassOf s223:Valve .

<http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterValveOrShape1> a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Valve Or Shape 1"^^xsd:string ;
    rdfs:comment "A HotWaterValve shall have at least one analog valve command property or at least two binary valve command properties using the relation hasProperty."^^xsd:string ;
    sh:message "g36: A HotWaterValve shall have at least one analog valve command property or at least two binary valve command properties using the relation hasProperty."^^xsd:string ;
    sh:or ( [ sh:property [ rdfs:comment "A HotWaterValve shall have at least one analog valve command property or at least two binary valve command properties using the relation hasProperty."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasProperty ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:QuantifiableActuatableProperty ;
                                sh:node [ sh:property [ sh:hasValue s223:Binary-Position ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path s223:hasAspect ],
                                            [ sh:hasValue <http://qudt.org/vocab/quantitykind/DimensionlessRatio> ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path ns1:hasQuantityKind ] ] ] ] ] [ sh:property [ rdfs:comment "A HotWaterValve shall have at least one analog valve command property or at least two binary valve command properties using the relation hasProperty."^^xsd:string ;
                        sh:minCount 2 ;
                        sh:path s223:hasProperty ;
                        sh:qualifiedMinCount 2 ;
                        sh:qualifiedValueShape [ sh:class s223:EnumeratedActuatableProperty ;
                                sh:node [ sh:property [ sh:hasValue s223:Binary-Position ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path s223:hasAspect ],
                                            [ sh:hasValue s223:EnumerationKind-Binary ;
                                                sh:maxCount 1 ;
                                                sh:minCount 1 ;
                                                sh:path s223:hasEnumerationKind ] ] ] ] ] ) ;
    sh:targetClass <http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterValve> .

<http://data.ashrae.org/standard223/1.0/extensions/g36#TwoPositionDamper> a s223:Class,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Two Position Damper"^^xsd:string ;
    rdfs:comment "An element inserted into an air-distribution system or element of an air-distribution system permitting modification of the air resistance of the system and consequently changing the airflow rate or shutting off the airflow. This element only has two positions: fully open and fully closed."^^xsd:string ;
    rdfs:subClassOf s223:Damper ;
    sh:property [ rdfs:comment "A Two Position Damper shall have at least one open-and-close damper command property using the relation hasProperty."^^xsd:string ;
            sh:message "g36: A Two Position Damper shall have at least one open-and-close damper command property using the relation hasProperty."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasProperty ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:EnumeratedActuatableProperty ;
                    sh:node [ sh:property [ sh:class s223:EnumerationKind-Binary ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path s223:hasEnumerationKind ],
                                [ sh:hasValue s223:Binary-Position ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path s223:hasAspect ] ] ] ] .

<http://data.ashrae.org/standard223/1.0/extensions/g36#Zone> a s223:Class,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Zone"^^xsd:string ;
    rdfs:comment "A Zone is a generic thermal zone, with the points required for Guideline 36 controls. It is a collection of s223:DomainSpace instances."^^xsd:string ;
    rdfs:subClassOf s223:Zone ;
    sh:property [ rdfs:comment "A Zone shall have at least one binary zone occupancy property using the relation hasProperty"^^xsd:string ;
            sh:message "g36: A Zone shall have at least one binary zone occupancy property using the relation hasProperty"^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasProperty ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:EnumeratedObservableProperty ;
                    sh:node [ sh:property [ sh:class s223:EnumerationKind-Occupancy ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path s223:hasEnumerationKind ] ] ] ;
            sh:severity sh:Info ],
        [ rdfs:comment "A Zone shall have at least one Domain-HVAC using the relation hasDomain. "^^xsd:string ;
            sh:hasValue s223:Domain-HVAC ;
            sh:message "g36: A Zone shall have at least one Domain-HVAC using the relation hasDomain. "^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasDomain ],
        [ rdfs:comment "A Zone shall have a zone temperature setpoint adjustment property using the relation hasProperty, if applicable."^^xsd:string ;
            sh:message "g36: A Zone shall have a zone temperature setpoint adjustment property using the relation hasProperty, if applicable."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasProperty ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:QuantifiableObservableProperty ;
                    sh:node [ sh:property [ sh:hasValue s223:Dimensioned-Delta ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path s223:hasAspect ],
                                [ sh:hasValue <http://qudt.org/vocab/quantitykind/Temperature> ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path ns1:hasQuantityKind ] ] ] ;
            sh:qualifiedValueShapesDisjoint true ;
            sh:severity sh:Info ],
        [ rdfs:comment "A Zone shall have at least a zone CO2 concentration property using the relation hasProperty, if applicable control is used."^^xsd:string ;
            sh:message "g36: A Zone shall have at least a zone CO2 concentration property using the relation hasProperty, if applicable control is used."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasProperty ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:QuantifiableObservableProperty ;
                    sh:node [ sh:property [ sh:hasValue <http://qudt.org/vocab/quantitykind/DimensionlessRatio> ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path ns1:hasQuantityKind ],
                                [ sh:hasValue s223:Constituent-CO2 ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path s223:ofConstituent ] ] ] ;
            sh:severity sh:Info ],
        [ rdfs:comment "A Zone shall have at least one window switch on-off property using the relation hasProperty."^^xsd:string ;
            sh:message "g36: A Zone shall have at least one window switch on-off property using the relation hasProperty."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasProperty ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:EnumeratedObservableProperty ;
                    sh:node [ sh:property [ sh:class s223:Binary-OnOff ;
                                    sh:maxCount 1 ;
                                    sh:minCount 1 ;
                                    sh:path s223:hasEnumerationKind ],
                                [ rdfs:comment "Property shall be measured at a window."^^xsd:string ;
                                    sh:class s223:Window ;
                                    sh:path [ sh:alternativePath ( ( [ sh:inversePath s223:observes ] s223:hasObservationLocation ) [ sh:inversePath s223:hasProperty ] ) ] ] ] ] ;
            sh:severity sh:Info ] .

<http://data.ashrae.org/standard223/1.0/extensions/g36#ZoneGroup> a s223:Class,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Zone Group"^^xsd:string ;
    rdfs:comment "A ZoneGroup is a grouping of zones that may be scheduled together. Zone groupings must be assigned based on rules in section 3.1.3 of Guideline 36."^^xsd:string ;
    rdfs:subClassOf s223:ZoneGroup ;
    sh:property [ rdfs:comment "A ZoneGroup shall contain at least one Zone using the relation contains."^^xsd:string ;
            sh:class <http://data.ashrae.org/standard223/1.0/extensions/g36#Zone> ;
            sh:message "g36: A ZoneGroup shall contain at least one Zone using the relation contains."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:contains ],
        [ rdfs:comment "A ZoneGroup shall have the Domain HVAC using the relation hasDomain."^^xsd:string ;
            sh:hasValue s223:Domain-HVAC ;
            sh:message "g36: A ZoneGroup shall have the Domain HVAC using the relation hasDomain."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasDomain ] .

s223:Actuator a s223:Class,
        sh:NodeShape ;
    rdfs:label "Actuator"^^xsd:string ;
    rdfs:comment """
Actuators are physical entities that receive control signals and actuate equipment.

A piece of equipment, either electrically, pneumatically, or hydraulically
operated, that makes a change in the physical world, such as the position of a
valve or damper.
"""^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "If the relation `actuates` is present it must associate the `Actuator` with a `Equipment`."^^xsd:string ;
            sh:class s223:Equipment ;
            sh:message "s223: If the relation `actuates` is present it must associate the `Actuator` with a `Equipment`."^^xsd:string ;
            sh:path s223:actuates ],
        [ rdfs:comment "An `Actuator` must be associated with at least one `ActuatableProperty` using the relation `actuatedByProperty`."^^xsd:string ;
            sh:class s223:ActuatableProperty ;
            sh:message "s223: An `Actuator` must be associated with at least one `ActuatableProperty` using the relation `actuatedByProperty`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:actuatedByProperty ] .

s223:AirHandlingUnit a s223:Class,
        sh:NodeShape ;
    rdfs:label "Air handling unit"^^xsd:string ;
    rdfs:comment "An assembly consisting of a fan or fans and other necessary equipment to perform one or more of the following functions: circulating, filtration, heating, cooling, heat recovery, humidifying, dehumidifying, and mixing of air."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "An `AirHandlingUnit` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:message "s223: An `AirHandlingUnit` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "An `AirHandlingUnit` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:message "s223: An `AirHandlingUnit` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:AirToAirHeatPump a s223:Class,
        sh:NodeShape ;
    rdfs:label "Air to air heat pump"^^xsd:string ;
    rdfs:comment "A subclass of `HeatPump` that can heat or cool by transferring thermal energy between two bodies of air."^^xsd:string ;
    rdfs:subClassOf s223:HeatPump ;
    sh:property [ rdfs:comment "An `AirToAirHeatPump` shall have at least two outlets using the medium `Fluid-Air`."^^xsd:string ;
            sh:message "s223: An `AirToAirHeatPump` shall have at least two outlets using the medium `Fluid-Air`."^^xsd:string ;
            sh:minCount 2 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "An `AirToAirHeatPump` shall have at least two inlets using the medium `Fluid-Air`."^^xsd:string ;
            sh:message "s223: An `AirToAirHeatPump` shall have at least two inlets using the medium `Fluid-Air`."^^xsd:string ;
            sh:minCount 2 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:BACnetExternalReference a s223:Class,
        sh:NodeShape ;
    rdfs:label "BACnetExternalReference"^^xsd:string ;
    rdfs:comment "`BACnetExternalReference` is a subclass of `ExternalReference` that contains BACnet protocol parameter values necessary to associate a `Property` with a value."^^xsd:string ;
    rdfs:subClassOf s223:ExternalReference ;
    sh:property [ a sh:PropertyShape ;
            rdfs:comment "If the relation `device-identifier` is present it associates the external reference with a BACnet device having the specific device identifier."^^xsd:string ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path <http://data.ashrae.org/bacnet/2020#device-identifier> ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$"^^xsd:string ],
        [ a sh:PropertyShape ;
            rdfs:comment "If the relation `object-name` is present it associates the external reference with the BACnet object having the specific object name."^^xsd:string ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path <http://data.ashrae.org/bacnet/2020#object-name> ],
        [ a sh:PropertyShape ;
            rdfs:comment "If the relation `priority-for-writing` is present it provides the priority for writing values to the object."^^xsd:string ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path <http://data.ashrae.org/bacnet/2020#priority-for-writing> ],
        [ a sh:PropertyShape ;
            rdfs:comment "If the relation `device-name` is present it associates the external reference with a BACnet device having the specific device name."^^xsd:string ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path <http://data.ashrae.org/bacnet/2020#device-name> ],
        [ a sh:PropertyShape ;
            rdfs:comment "If the relation `property-identifier` is present it is either a decimal number or exactly equal to the ASHRAE 135-2020 Clause 21 identifier text of BACnetPropertyIdentifier. If it is omitted, it defaults to \"present-value\" except for BACnet File objects, where absence of `property-identifier` refers to the entire content of the file accessed with Stream Access."^^xsd:string ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path <http://data.ashrae.org/bacnet/2020#property-identifier> ],
        [ a sh:PropertyShape ;
            rdfs:comment "If the relation `property-array-index` is present it provides the index for reading items from a property that is an array."^^xsd:string ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path <http://data.ashrae.org/bacnet/2020#property-array-index> ],
        [ a sh:PropertyShape ;
            rdfs:comment "If the relation `object-identifier` is present it associates the external reference with the BACnet object having the specific object identifier."^^xsd:string ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path <http://data.ashrae.org/bacnet/2020#object-identifier> ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$"^^xsd:string ] .

s223:BatteryCPShape a sh:NodeShape ;
    rdfs:label "Battery CP Shape"^^xsd:string ;
    rdfs:comment "A `Battery` shall have at least one outlet or bidirectional `ConnectionPoint` using the medium Electricity."^^xsd:string ;
    sh:message "s223: A `Battery` shall have at least one outlet or bidirectional `ConnectionPoint` using the medium Electricity."^^xsd:string ;
    sh:or ( [ sh:property [ rdfs:comment "A `Battery` shall have at least one outlet or bidirectional `ConnectionPoint` using the medium Electricity."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                                sh:path s223:hasMedium ] ] ] ] ] [ sh:property [ rdfs:comment "A `Battery` shall have at least one outlet or bidirectional `ConnectionPoint` using the medium Electricity."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                                sh:path s223:hasMedium ] ] ] ] ] ) ;
    sh:severity sh:Warning ;
    sh:targetClass s223:Battery .

s223:Boiler a s223:Class,
        sh:NodeShape ;
    rdfs:label "Boiler"^^xsd:string ;
    rdfs:comment "A closed, pressure vessel that uses fuel or electricity for heating water or other fluids to supply steam or hot water for heating, humidification, or other applications."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Boiler` shall have at least one inlet using the medium Water."^^xsd:string ;
            sh:message "s223: A `Boiler` shall have at least one inlet using the medium Water."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `Boiler` shall have at least one outlet using the medium Water."^^xsd:string ;
            sh:message "s223: A `Boiler` shall have at least one outlet using the medium Water."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:Chiller a s223:Class,
        sh:NodeShape ;
    rdfs:label "Chiller"^^xsd:string ;
    rdfs:comment "A refrigerating machine used to transfer heat from fluids."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Chiller` shall have at least one inlet using the medium Water."^^xsd:string ;
            sh:message "s223: A `Chiller` shall have at least one inlet using the medium Water."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `Chiller` shall have at least one outlet using the medium Water."^^xsd:string ;
            sh:message "s223: A `Chiller` shall have at least one outlet using the medium Water."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:ClosedWorldShape a sh:NodeShape ;
    rdfs:label "Closed World Shape"^^xsd:string ;
    rdfs:comment "Ensure that all instances of an s223 class use only the relations defined for that class. Note that this only applies to s223 and QUDT relations."^^xsd:string ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment """Ensure that all instances of an s223 class use only the relations defined for that class. Note that
relations from other namespaces are not checked by this validation."""^^xsd:string ;
            sh:message "s223: Predicate {?p} is not defined for instance {$this}."^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
SELECT $this ?p ?o
WHERE {
$this ?p ?o .
FILTER(STRSTARTS (str(?p), "http://data.ashrae.org/standard223#") || STRSTARTS (str(?p), "http://qudt.org/schema/qudt"))
FILTER NOT EXISTS {$this a sh:NodeShape}
FILTER NOT EXISTS {$this a/rdfs:subClassOf* ?class .
			?class sh:property/sh:path ?p .
}
FILTER NOT EXISTS {$this a/rdfs:subClassOf* ?class .
?class sh:xone/rdf:rest*/rdf:first/sh:property/sh:path ?p .
}
FILTER NOT EXISTS {$this a/rdfs:subClassOf* ?class .
?class sh:or/rdf:rest*/rdf:first/sh:property/sh:path ?p .
}
}
"""^^xsd:string ] ;
    sh:targetClass s223:Concept .

s223:Compressor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Compressor"^^xsd:string ;
    rdfs:comment "A device for mechanically increasing the pressure of a gas."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Compressor` shall have at least one outlet."^^xsd:string ;
            sh:message "s223: A `Compressor` shall have at least one outlet."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ] ],
        [ rdfs:comment "A `Compressor` shall have at least one inlet."^^xsd:string ;
            sh:message "s223: A `Compressor` shall have at least one inlet."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ] ] .

s223:ConcentrationSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Concentration sensor"^^xsd:string ;
    rdfs:comment """A `ConcentrationSensor` is a specialization of a `Sensor` that `observes` a `QuantifiableObservableProperty` 
that represents the concentration of a miscible constituent in a medium, in contrast to a `ParticulateSensor` that `observes` the amount of a particulate in a medium 
(see {s223:ParticulateSensor}). The 223 standard does not constrain the `Unit` or `QuantityKind` reported by a `ConcentrationSensor`, but possible 
`QuantityKind`s include `Concentration` (moles per volume), `Density` (mass per volume), `MoleFraction`, and `VolumeFraction`."""^^xsd:string ;
    rdfs:subClassOf s223:Sensor .

s223:Conductor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Conductor"^^xsd:string ;
    rdfs:comment """A `Conductor` is a subclass of `Connection`. It is an abstraction that represents one or more wires used to convey electricity, 
  with the electricity conceptualized as flowing through a `Conductor` like water through a pipe. Each instance of `Conductor` applies to no more than one circuit."""^^xsd:string ;
    rdfs:subClassOf s223:Connection ;
    sh:property [ rdfs:comment "Ensure the electrical phase is the same as all connected `ConnectionPoint`s"^^xsd:string ;
            sh:path s223:hasElectricalPhase ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Ensure the electrical phase is the same as all connected `ConnectionPoint`s"^^xsd:string ;
                    sh:message "s223: {$this} has an electrical phase of {?myphase} which is different from {?cpPhase} for `ConnectionPoint` {?cp}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
    SELECT $this ?myphase ?cp ?cpPhase
    WHERE {
        $this s223:hasElectricalPhase ?myphase .
        $this s223:connectsAt ?cp .
        ?cp s223:hasElectricalPhase ?cpPhase .
        FILTER (?myphase != ?cpPhase) .
        }
        """^^xsd:string ] ],
        [ rdfs:comment "If the relation `hasElectricalPhase` is present it must associate the `Conductor` with a single ElectricalPhaseIdentifier or ElectricalVoltagePhases value."^^xsd:string ;
            sh:maxCount 1 ;
            sh:message "s223: If the relation `hasElectricalPhase` is present it must associate the `Conductor` with a single ElectricalPhaseIdentifier or ElectricalVoltagePhases value."^^xsd:string ;
            sh:or ( [ sh:class s223:EnumerationKind-ElectricalPhaseIdentifier ] [ sh:class s223:EnumerationKind-ElectricalVoltagePhases ] ) ;
            sh:path s223:hasElectricalPhase ],
        [ rdfs:comment "A `Conductor` must be associated with exactly one `Constituent-Electricity` using the relation `hasMedium`."^^xsd:string ;
            sh:class s223:Constituent-Electricity ;
            sh:maxCount 1 ;
            sh:message "s223: A `Conductor` must be associated with exactly one `Constituent-Electricity` using the relation `hasMedium`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasMedium ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Infer the `hasElectricalPhase` value from any connected `ConnectionPoint`s."^^xsd:string ;
            sh:object [ sh:path ( s223:cnx s223:hasElectricalPhase ) ] ;
            sh:predicate s223:hasElectricalPhase ;
            sh:subject sh:this ] .

s223:ConnectionCnxShape a sh:NodeShape ;
    rdfs:label "ConnectionCnxShape"^^xsd:string ;
    rdfs:comment "You need either an InletCP and an OutletCP, or at least one BidirectionalCP and another CP of any type."^^xsd:string ;
    sh:message "s223: You need either an InletCP and an OutletCP, or at least one BidirectionalCP and another CP of any type."^^xsd:string ;
    sh:or ( [ sh:property [ rdfs:comment "A `Connection` shall have at least two `connectsAt` relations allowing flow in and out of the `Connection`."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:connectsAt ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ] ;
                        sh:qualifiedValueShapesDisjoint true ;
                        sh:severity sh:Warning ],
                    [ rdfs:comment "A `Connection` shall have at least two `connectsAt` relations allowing flow in and out of the `Connection`."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:connectsAt ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ] ;
                        sh:qualifiedValueShapesDisjoint true ;
                        sh:severity sh:Warning ] ] [ sh:property [ rdfs:comment "A `Connection` shall have at least two `connectsAt` relations allowing flow in and out of the `Connection`."^^xsd:string ;
                        sh:minCount 2 ;
                        sh:path s223:connectsAt ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ] ;
                        sh:qualifiedValueShapesDisjoint true ;
                        sh:severity sh:Warning ] ] ) ;
    sh:severity sh:Warning ;
    sh:targetClass s223:Connection .

s223:Controller a s223:Class,
        sh:NodeShape ;
    rdfs:label "Controller"^^xsd:string ;
    rdfs:comment "A device for regulation of a system or component in normal operation, which executes one or more `Function`."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "If the relation `executes` is present it must associate the `Controller` with a `Function`."^^xsd:string ;
            sh:class s223:Function ;
            sh:message "s223: If the relation `executes` is present it must associate the `Controller` with a `Function`."^^xsd:string ;
            sh:path s223:executes ] .

s223:CoolingTower a s223:Class,
        sh:NodeShape ;
    rdfs:label "Cooling tower"^^xsd:string ;
    rdfs:comment "A heat transfer device in which atmospheric air cools warm water, generally by direct contact via evaporation."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `CoolingTower` shall have at least one outlet using the medium Water."^^xsd:string ;
            sh:message "s223: A `CoolingTower` shall have at least one outlet using the medium Water."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `CoolingTower` shall have at least one inlet using the medium Water."^^xsd:string ;
            sh:message "s223: A `CoolingTower` shall have at least one inlet using the medium Water."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:CorrelatedColorTemperatureSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Correlated color temperature sensor"^^xsd:string ;
    rdfs:comment "A subclass of `LightSensor` that `observes` the correlated color temperature (CCT) of a light source, defined as the absolute temperature of a blackbody whose chromaticity most nearly resembles that of the light source."^^xsd:string ;
    rdfs:subClassOf s223:LightSensor ;
    sh:property [ rdfs:comment "A `CorrelatedColorTemperatureSensor` must always observe a `Property` that has a `QuantityKind` of `ThermodynamicTemperature`."^^xsd:string ;
            sh:message "s223: A `CorrelatedColorTemperatureSensor` must always observe a `Property` that has a `QuantityKind` of `ThermodynamicTemperature`."^^xsd:string ;
            sh:path s223:observes ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Property ;
                    sh:node [ sh:property [ sh:hasValue <http://qudt.org/vocab/quantitykind/ThermodynamicTemperature> ;
                                    sh:path ns1:hasQuantityKind ] ] ] ] .

s223:Door a s223:Class,
        sh:NodeShape ;
    rdfs:label "Door"^^xsd:string ;
    rdfs:comment "A hinged, sliding, or revolving barrier at the entrance to a building or room."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Door` shall have at least two bidirectional connection points using the medium Air."^^xsd:string ;
            sh:message "s223: A `Door` shall have at least two bidirectional connection points using the medium Air."^^xsd:string ;
            sh:minCount 2 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:DualDuctTerminal a s223:Class,
        sh:NodeShape ;
    rdfs:label "Dual duct air terminal."^^xsd:string ;
    rdfs:comment "A dual duct air terminal mixes two independent sources of primary air."^^xsd:string ;
    rdfs:seeAlso s223:TerminalUnit ;
    rdfs:subClassOf s223:TerminalUnit ;
    sh:property [ rdfs:comment "A `DualDuctTerminal` shall have at least two inlets using the medium Air."^^xsd:string ;
            sh:message "s223: A `DualDuctTerminal` shall have at least two inlets using the medium Air."^^xsd:string ;
            sh:minCount 2 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:Duct a s223:Class,
        sh:NodeShape ;
    rdfs:label "Duct"^^xsd:string ;
    rdfs:comment "A `Duct` is a subclass of `Connection` that is used to transport air such as supply, return, and exhaust in HVAC (Heating, Ventilation, and Air Conditioning) systems."^^xsd:string ;
    rdfs:subClassOf s223:Connection .

s223:DuvSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Duv sensor"^^xsd:string ;
    rdfs:comment "A subclass of `LightSensor` that `observes` Duv of a light source, defined as the distance between the chromaticity of the light source and a blackbody radiator of equal correlated color temperature (CCT)."^^xsd:string ;
    rdfs:subClassOf s223:LightSensor ;
    sh:property [ rdfs:comment "A `DuvSensor` must always observe a `Property` that has a `QuantityKind` of `Duv`."^^xsd:string ;
            sh:message "s223: A `DuvSensor` must always observe a `Property` that has a `QuantityKind` of `Duv`."^^xsd:string ;
            sh:path s223:observes ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Property ;
                    sh:node [ sh:property [ sh:hasValue <http://qudt.org/vocab/quantitykind/Duv> ;
                                    sh:path ns1:hasQuantityKind ] ] ] ] .

s223:ElectricBreaker a s223:Class,
        sh:NodeShape ;
    rdfs:label "Electric breaker"^^xsd:string ;
    rdfs:comment "A piece of equipment designed to open the circuit automatically at a predetermined overcurrent without damage to itself (when properly applied within its rating)."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "An `ElectricBreaker` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:message "s223: An `ElectricBreaker` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:ElectricEnergyDCDCConverter a s223:Class,
        sh:NodeShape ;
    rdfs:label "Electric energy DC-DC Converter"^^xsd:string ;
    rdfs:comment "An Electric Energy Converter that transforms direct current (DC) electric power from one voltage to another voltage."^^xsd:string ;
    rdfs:subClassOf s223:ElectricEnergyConverter ;
    sh:property [ rdfs:comment "An `ElectricEnergyDCDCConverter` shall have at least two connection points that use the medium Electricity-DC."^^xsd:string ;
            sh:message "s223: An `ElectricEnergyDCDCConverter` shall have at least two connection points that use the medium Electricity-DC."^^xsd:string ;
            sh:minCount 2 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:ConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Electricity-DC ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:ElectricEnergyInverter a s223:Class,
        sh:NodeShape ;
    rdfs:label "ElectricEnergyInverter"^^xsd:string ;
    rdfs:comment "An Electric Energy Converter that tranforms direct current (DC) electric power to alternating current (AC) electric power, or vice versa."^^xsd:string ;
    rdfs:subClassOf s223:ElectricEnergyConverter ;
    sh:property [ rdfs:comment "An `ElectricEnergyInverter` shall have at least one connection point that uses the medium `Electricity-DC`."^^xsd:string ;
            sh:message "s223: An `ElectricEnergyInverter` shall have at least one connection point that uses the medium `Electricity-DC`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:ConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Electricity-DC ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "An `ElectricEnergyInverter` shall have at least one connection point that uses the medium `Electricity-AC`."^^xsd:string ;
            sh:message "s223: An `ElectricEnergyInverter` shall have at least one connection point that uses the medium `Electricity-AC`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:ConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Electricity-AC ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:ElectricEnergyTransformer a s223:Class,
        sh:NodeShape ;
    rdfs:label "Electric energy transformer"^^xsd:string ;
    rdfs:comment "An Electric Energy Converter that transforms alternating current (AC) electric power from one voltage to another voltage."^^xsd:string ;
    rdfs:subClassOf s223:ElectricEnergyConverter ;
    sh:property [ rdfs:comment "An `ElectricEnergyTransformer` shall have at least two connection points that use the medium Electricity-AC."^^xsd:string ;
            sh:message "s223: An `ElectricEnergyTransformer` shall have at least two connection points that use the medium Electricity-AC."^^xsd:string ;
            sh:minCount 2 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:ConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Electricity-AC ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:ElectricMeter a s223:Class,
        sh:NodeShape ;
    rdfs:label "Electric meter"^^xsd:string ;
    rdfs:comment "A device that measures the properties of electric energy."^^xsd:string ;
    rdfs:subClassOf s223:Equipment .

s223:ElectricOutlet a s223:Class,
        sh:NodeShape ;
    rdfs:label "Electric outlet"^^xsd:string ;
    rdfs:comment "A device to which a piece of electrical equipment can be connected in order to provide it with electricity"^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "An `ElectricOutlet` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:message "s223: An `ElectricOutlet` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "An `ElectricOutlet` shall have exactly one inlet using the medium Electricity."^^xsd:string ;
            sh:message "s223: An `ElectricOutlet` shall have exactly one inlet using the medium Electricity."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMaxCount 1 ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:EthernetSwitch a s223:Class,
        sh:NodeShape ;
    rdfs:label "Ethernet switch"^^xsd:string ;
    rdfs:comment """A type of network hardware that connects cabled devices, such as computers and Wi-Fi access points, 
  in an Ethernet LAN so they can communicate with each other and to the internet."""^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "An `EthernetSwitch` shall have at least two `BidirectionalConnectionPoint`s using the medium `Signal-Ethernet`."^^xsd:string ;
            sh:message "s223: An `EthernetSwitch` shall have at least two `BidirectionalConnectionPoint`s using the medium `Signal-Ethernet`."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Signal-Ethernet ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "An `EthernetSwitch` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:message "s223: An `EthernetSwitch` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:FanCoilUnit a s223:Class,
        sh:NodeShape ;
    rdfs:label "Fan coil unit"^^xsd:string ;
    rdfs:comment "A device consisting of a heat exchanger (coil) and a fan to regulate the temperature of one or more spaces."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `FanCoilUnit` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:message "s223: A `FanCoilUnit` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `FanCoilUnit` must at least have the role `Role-Heating` or `Role-Cooling`."^^xsd:string ;
            sh:message "s223: A `FanCoilUnit` must at least have the role `Role-Heating` or `Role-Cooling`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasRole ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:in ( s223:Role-Heating s223:Role-Cooling ) ] ],
        [ rdfs:comment "A `FanCoilUnit` must be associated with at least 1 `Coil` using the relation `contains`."^^xsd:string ;
            sh:message "s223: A `FanCoilUnit` must be associated with at least 1 `Coil` using the relation `contains`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:contains ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Coil ] ],
        [ rdfs:comment "A `FanCoilUnit` must be associated with at least 1 `Fan` using the relation `contains`."^^xsd:string ;
            sh:message "s223: A `FanCoilUnit` must be associated with at least 1 `Fan` using the relation `contains`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:contains ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Fan ] ],
        [ rdfs:comment "A `FanCoilUnit` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:message "s223: A `FanCoilUnit` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:FanPoweredTerminal a s223:Class,
        sh:NodeShape ;
    rdfs:label "Fan Powered Air Terminal"^^xsd:string ;
    rdfs:comment "An air terminal containing a fan. Airflow may pass through or be parallel to the fan. These units may also have supplemental heating or cooling."^^xsd:string ;
    rdfs:subClassOf s223:TerminalUnit ;
    sh:property [ rdfs:comment "A `FanPoweredTerminal` must be associated with at least one `Fan` by using the relation `contains`."^^xsd:string ;
            sh:message "s223: A `FanPoweredTerminal` must be associated with at least one `Fan` by using the relation `contains`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:contains ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Fan ] ] .

s223:Filter a s223:Class,
        sh:NodeShape ;
    rdfs:label "Filter"^^xsd:string ;
    rdfs:comment """A device that removes contaminants from gases or liquids. See {s223:Substance-Medium} for
more details on validating compatible mediums upstream and downstream of a `Filter`."""^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "Incompatible Medium. Case 2: Associated `ConnectionPoint`s, one with a pure medium and one with a medium having constituents.."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 2: A medium with constituents and a pure medium."^^xsd:string ;
                    sh:message "s223: {$this} has an incompatible medium {?m1} with any constituent of {?m2}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m2 ?m1
WHERE {
$this s223:cnx ?cp1, ?cp2 .
?cp1 a/rdfs:subClassOf* s223:ConnectionPoint .
?cp2 a/rdfs:subClassOf* s223:ConnectionPoint .
FILTER (?cp1 != ?cp2) .
?cp1 s223:hasMedium ?m1 .
?cp2 s223:hasMedium ?m2 . 
?m2 s223:composedOf/s223:ofConstituent ?s2 .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {
  ?m2 s223:composedOf/s223:ofConstituent ?s12 .
  {?s12 rdfs:subClassOf* ?m1} UNION {?m1 rdfs:subClassOf* ?s12} .
}
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `Filter` shall have at least one inlet `ConnectionPoint`."^^xsd:string ;
            sh:message "s223: A `Filter` shall have at least one inlet `ConnectionPoint`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ] ],
        [ rdfs:comment "A `Filter` shall have at least one outlet."^^xsd:string ;
            sh:message "s223: A `Filter` shall have at least one outlet."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ] ],
        [ rdfs:comment "Incompatible Medium. Case 1: Associated `ConnectionPoint`s with two pure mediums."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 1: Two pure mediums."^^xsd:string ;
                    sh:message "s223: {$this} with inlet medium {?m2} is incompatible with outlet medium {?m1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m2 ?m1
WHERE {
$this s223:cnx ?cp1, ?cp2 .
?cp1 a/rdfs:subClassOf* s223:ConnectionPoint .
?cp2 a/rdfs:subClassOf* s223:ConnectionPoint .
FILTER (?cp1 != ?cp2) .
?cp1 s223:hasMedium ?m1 .
?cp2 s223:hasMedium ?m2 . 
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {?m2 s223:composedOf ?c2}
FILTER (NOT EXISTS {?m2 rdfs:subClassOf* ?m1}) .
FILTER (NOT EXISTS {?m1 rdfs:subClassOf* ?m2}) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "Incompatible Medium. Case 3: Associated `ConnectionPoint`s with mediums having constituents."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 3: Two mediums with constituents."^^xsd:string ;
                    sh:message "s223: For `Filter` {$this} there is no compatible substance between medium {?m2} and medium {?m1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT ?this ?m2 ?m1
WHERE {
  ?this s223:cnx ?cp1, ?cp2 .
  ?cp1 a/rdfs:subClassOf* s223:ConnectionPoint .
  ?cp2 a/rdfs:subClassOf* s223:ConnectionPoint .
  FILTER (?cp1 != ?cp2) .
  ?cp1 s223:hasMedium ?m1 .
  ?cp2 s223:hasMedium ?m2 .
    ?m1 s223:composedOf/s223:ofConstituent ?s1 .
    ?m2 s223:composedOf/s223:ofConstituent ?s2 .
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s11 .
    ?m2 s223:composedOf/s223:ofConstituent ?s12 .
    FILTER (?s11 = ?s12) .
  }
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s21 .
    ?m2 s223:composedOf/s223:ofConstituent ?s22 .
    {?s22 rdfs:subClassOf* ?s21} UNION {?s21 rdfs:subClassOf* ?s22} .
  }
}
"""^^xsd:string ] ] .

s223:FlowSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Flow sensor"^^xsd:string ;
    rdfs:comment "A `FlowSensor` is a specialization of a `Sensor` that produces an `ObservableProperty` that is quantifiable and represents a flow measurement."^^xsd:string ;
    rdfs:subClassOf s223:Sensor .

s223:FumeHood a s223:Class,
        sh:NodeShape ;
    rdfs:label "Fume hood"^^xsd:string ;
    rdfs:comment "A fume-collection device mounted over a work space, table, or shelf and serving to conduct unwanted gases away from an area."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `FumeHood` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:message "s223: A `FumeHood` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `FumeHood` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:message "s223: A `FumeHood` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:FunctionPropertyShape a sh:NodeShape ;
    rdfs:label "Function Property Shape"^^xsd:string ;
    rdfs:comment "A `Function` must be associated with at least one `Property` using either the relation `hasInput` or `hasOutput`."^^xsd:string ;
    sh:message "s223: A `Function` must be associated with at least one `Property` using either the relation `hasInput` or `hasOutput`."^^xsd:string ;
    sh:or ( [ sh:property [ rdfs:comment "A `Function` must be associated with at least one `Property` using either the relation `hasInput` or `hasOutput`."^^xsd:string ;
                        sh:class s223:Property ;
                        sh:minCount 1 ;
                        sh:path s223:hasInput ] ] [ sh:property [ rdfs:comment "A `Function` must be associated with at least one `Property` using either the relation `hasInput` or `hasOutput`."^^xsd:string ;
                        sh:class s223:Property ;
                        sh:minCount 1 ;
                        sh:path s223:hasOutput ] ] ) ;
    sh:severity sh:Warning ;
    sh:targetClass s223:Function .

s223:Furnace a s223:Class,
        sh:NodeShape ;
    rdfs:label "Furnace"^^xsd:string ;
    rdfs:comment "An enclosed chamber or structure in which heat is produced, as by burning fuel or by converting electrical energy. "^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Furnace` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:message "s223: A `Furnace` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `Furnace` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:message "s223: A `Furnace` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:GaugePressureSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Differential sensor"^^xsd:string ;
    rdfs:comment "A pressure sensor that indicates pressure relative to atmospheric pressure."^^xsd:string ;
    rdfs:subClassOf s223:PressureSensor ;
    sh:property [ rdfs:comment "A `GaugePressureSensor` must always observe a `Property` that has a value of true for qudt:isDeltaQuantity."^^xsd:string ;
            sh:maxCount 1 ;
            sh:message "s223: A `GaugePressureSensor` must always observe a `Property` that has a value of true for qudt:isDeltaQuantity."^^xsd:string ;
            sh:minCount 1 ;
            sh:path ( s223:observes ns1:isDeltaQuantity ) ;
            sh:value true ],
        [ rdfs:comment "A `GaugePressureSensor` must always observe a `Property` that has a `QuantityKind` of GaugePressure."^^xsd:string ;
            sh:message "s223: A `GaugePressureSensor` must always observe a `Property` that has a `QuantityKind` of GaugePressure."^^xsd:string ;
            sh:path ( s223:observes ns1:hasQuantityKind ) ;
            sh:value <http://qudt.org/vocab/quantitykind/GaugePressure> ] .

s223:Generator a s223:Class,
        sh:NodeShape ;
    rdfs:label "Generator"^^xsd:string ;
    rdfs:comment "An energy transducer that transforms non-electric energy into electric energy."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Generator` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:class s223:OutletConnectionPoint ;
            sh:message "s223: A `Generator` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:minCount 1 ;
            sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                            sh:path s223:hasMedium ] ] ;
            sh:path s223:hasConnectionPoint ],
        [ rdfs:comment "A `Generator` must be associated with at least one `ConnectionPoint` using the relation `hasConnectionPoint`."^^xsd:string ;
            sh:message "s223: A `Generator` must be associated with at least one `ConnectionPoint` using the relation `hasConnectionPoint`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ] .

s223:GroundToAirHeatPump a s223:Class,
        sh:NodeShape ;
    rdfs:label "Ground to air heat pump"^^xsd:string ;
    rdfs:comment "A subclass of `HeatPump` that can heat or cool air by transferring thermal energy to and from the ground."^^xsd:string ;
    rdfs:subClassOf s223:HeatPump ;
    sh:property [ rdfs:comment "A `GroundToAirHeatPump` shall have at least one inlet using the medium `Fluid-Air`."^^xsd:string ;
            sh:message "s223: A `GroundToAirHeatPump` shall have at least one inlet using the medium `Fluid-Air`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `GroundToAirHeatPump` shall have at least one outlet using the medium `Fluid-Air`."^^xsd:string ;
            sh:message "s223: A `GroundToAirHeatPump` shall have at least one outlet using the medium `Fluid-Air`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `GroundToAirHeatPump` shall have at least one `BidirectionalConnectionPoint` using `Medium-ThermalContact`."^^xsd:string ;
            sh:class s223:BidirectionalConnectionPoint ;
            sh:message "s223: A `GroundToAirHeatPump` shall have at least one `BidirectionalConnectionPoint` using `Medium-ThermalContact`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Medium-ThermalContact ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:HeatTransferRole sh:rule [ a sh:TripleRule ;
            rdfs:comment "Infer the `hasRole` s223:Role-HeatTransfer relation for every instance of the listed targetClass values."^^xsd:string ;
            sh:object s223:Role-HeatTransfer ;
            sh:predicate s223:hasRole ;
            sh:subject sh:this ] ;
    sh:targetClass s223:AirHeatExchanger,
        s223:ChilledBeam,
        s223:Coil,
        s223:ElectricResistanceElement,
        s223:HydronicHeatExchanger,
        s223:RadiantHeater,
        s223:Radiator .

s223:Humidifier a s223:Class,
        sh:NodeShape ;
    rdfs:label "Humidifier"^^xsd:string ;
    rdfs:comment "A piece of equipment to add moisture to a gas such as air."^^xsd:string ;
    rdfs:subClassOf s223:Equipment .

s223:Humidistat a s223:Class,
        sh:NodeShape ;
    rdfs:label "Humidistat"^^xsd:string ;
    rdfs:comment "An automatic control device used to maintain humidity at a fixed or adjustable setpoint."^^xsd:string ;
    rdfs:subClassOf s223:Equipment .

s223:HumiditySensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Humidity sensor"^^xsd:string ;
    rdfs:comment "A `HumiditySensor` is a specialization of a `Sensor` that `observes` a `QuantifiableObservableProperty` that represents a humidity measurement. "^^xsd:string ;
    rdfs:subClassOf s223:Sensor ;
    sh:property [ rdfs:comment "A `HumiditySensor` must be defined in terms of the `QuantityKind` that is being measured, which must be either RelativeHumidity or AbsoluteHumidity."^^xsd:string ;
            sh:class s223:QuantifiableObservableProperty ;
            sh:message "s223: A `HumiditySensor` must observe a `QuantifiableObservableProperty` that `hasQuantityKind` of either RelativeHumidity or AbsoluteHumidity."^^xsd:string ;
            sh:node [ sh:property [ sh:or ( [ sh:hasValue <http://qudt.org/vocab/quantitykind/RelativeHumidity> ] [ sh:hasValue <http://qudt.org/vocab/quantitykind/AbsoluteHumidity> ] ) ;
                            sh:path ns1:hasQuantityKind ] ] ;
            sh:path s223:observes ] .

s223:IlluminanceSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Illuminance sensor"^^xsd:string ;
    rdfs:comment "A subclass of `LightSensor` that `observes` illuminance, defined as the areal density of the luminous flux incident at a point on a surface."^^xsd:string ;
    rdfs:subClassOf s223:LightSensor ;
    sh:property [ rdfs:comment "An `IlluminanceSensor` must observe a `Property` that has a `QuantityKind` of Illuminance."^^xsd:string ;
            sh:message "s223: An `IlluminanceSensor` must observe a `Property` that has a `QuantityKind` of Illuminance."^^xsd:string ;
            sh:path s223:observes ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Property ;
                    sh:node [ sh:property [ sh:hasValue <http://qudt.org/vocab/quantitykind/Illuminance> ;
                                    sh:path ns1:hasQuantityKind ] ] ] ] .

s223:InverseRelationShape a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            rdfs:comment "Declare the inverse triples for relations that have defined inverse relations"^^xsd:string ;
            sh:construct """
CONSTRUCT {
?o ?invP $this .
}
WHERE {
  $this ?p ?o .
  ?p s223:inverseOf ?invP .
}
			"""^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ] ;
    sh:targetClass s223:Concept .

s223:JunctionCPShape a sh:NodeShape ;
    rdfs:label "JunctionCPShape"^^xsd:string ;
    rdfs:comment "A `Junction` shall have at least two `ConnectionPoint`s including (a) at least one inlet and one outlet, or (b) at least one bidirectional connection point."^^xsd:string ;
    sh:message "s223: A `Junction` shall have at least two `ConnectionPoint`s including (a) at least one inlet and one outlet, or (b) at least one bidirectional connection point."^^xsd:string ;
    sh:or ( [ sh:property [ rdfs:comment "A `Junction` shall have at least two `ConnectionPoint`s including (a) at least one inlet and one outlet, or (b) at least one bidirectional connection point."^^xsd:string ;
                        sh:minCount 2 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ] ;
                        sh:qualifiedValueShapesDisjoint true ],
                    [ rdfs:comment "A `Junction` shall have at least two `ConnectionPoint`s including (a) at least one inlet and one outlet, or (b) at least one bidirectional connection point."^^xsd:string ;
                        sh:minCount 2 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ] ;
                        sh:qualifiedValueShapesDisjoint true ] ] [ sh:property [ rdfs:comment "A `Junction` shall have at least two `ConnectionPoint`s including (a) at least one inlet and one outlet, or (b) at least one bidirectional connection point."^^xsd:string ;
                        sh:minCount 2 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ] ;
                        sh:qualifiedValueShapesDisjoint true ] ] ) ;
    sh:severity sh:Warning ;
    sh:targetClass s223:Junction .

s223:JunctionUsageWarning a sh:NodeShape ;
    rdfs:label "JunctionUsageWarning"^^xsd:string ;
    rdfs:comment "This `Junction` is not used to model significant details of a branching point in a connection, and may not be required."^^xsd:string ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "This `Junction` is not used to model significant details of a branching point in a connection, and may not be required."^^xsd:string ;
            sh:message "This `Junction` {$this} is not used to model significant details of a branching point in a connection, and may not be required."^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
            SELECT $this
            WHERE {
                $this s223:hasConnectionPoint? | s223:connectedThrough? ?junc_cp_conn .

                FILTER NOT EXISTS {
                    # Connection has a relation that is not in the structural or required relationships
                    { ?junc_cp_conn ?p ?o . } UNION {?o ?p ?junc_cp_conn . }
                    FILTER (?p NOT IN (
                        s223:connected, s223:connectedTo, s223:connectedThrough, s223:hasConnectionPoint,
                        s223:connectsAt, s223:isConnectionPointOf, s223:cnx, rdf:type, rdfs:label, rdfs:comment
                    )) 
                } .
            }
        """^^xsd:string ;
            sh:severity sh:Warning ] ;
    sh:targetClass s223:Junction .

s223:Luminaire a s223:Class,
        sh:NodeShape ;
    rdfs:label "Luminaire"^^xsd:string ;
    rdfs:comment "A complete lighting unit consisting of a light source(s) and ballast(s) or driver(s) (when applicable), together with the parts designed to distribute the light, to position and protect the light source(s), and to connect the light source(s) to the power supply. Also known as a light fixture."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Luminaire` shall have at least one outlet using the medium `EM-Light`."^^xsd:string ;
            sh:message "s223: A `Luminaire` shall have at least one outlet using the medium `EM-Light`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:EM-Light ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `Luminaire` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:message "s223: A `Luminaire` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:Motor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Motor"^^xsd:string ;
    rdfs:comment "A machine in which power is applied to do work by the conversion of various forms of energy into mechanical force and motion."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Motor` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:message "s223: A `Motor` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:OccupantCounter a s223:Class,
        sh:NodeShape ;
    rdfs:label "Occupant counter"^^xsd:string ;
    rdfs:comment "A subclass of `OccupancySensor` that counts the population within its sensing region."^^xsd:string ;
    rdfs:subClassOf s223:OccupancySensor ;
    sh:property [ rdfs:comment "An `OccupantCounter` must always observe a `QuantifiableObservableProperty` that has a `QuantityKind` of `Population` and a `Unit` of `NUM`."^^xsd:string ;
            sh:class s223:QuantifiableObservableProperty ;
            sh:message "s223: An `OccupantCounter` must always observe a `QuantifiableObservableProperty` that has a `QuantityKind` of `Population` and a `Unit` of `NUM`."^^xsd:string ;
            sh:minCount 1 ;
            sh:node [ sh:property [ sh:hasValue <http://qudt.org/vocab/quantitykind/Population> ;
                            sh:maxCount 1 ;
                            sh:path ns1:hasQuantityKind ],
                        [ sh:hasValue <http://qudt.org/vocab/unit/NUM> ;
                            sh:maxCount 1 ;
                            sh:path ns1:hasUnit ] ] ;
            sh:path s223:observes ] .

s223:OccupantMotionSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Occupant motion sensor"^^xsd:string ;
    rdfs:comment "A subclass of `OccupancySensor` that observes motion within its sensing region."^^xsd:string ;
    rdfs:subClassOf s223:OccupancySensor ;
    sh:property [ rdfs:comment "An `OccupantMotionSensor` must always observe an `EnumeratedObservableProperty` that has an `EnumerationKind` of `Occupancy-Motion`."^^xsd:string ;
            sh:class s223:EnumeratedObservableProperty ;
            sh:message "s223: An `OccupantMotionSensor` must always observe an `EnumeratedObservableProperty` that has an `EnumerationKind` of `Occupancy-Motion`."^^xsd:string ;
            sh:minCount 1 ;
            sh:node [ sh:property [ sh:class s223:Occupancy-Motion ;
                            sh:maxCount 1 ;
                            sh:path s223:hasEnumerationKind ] ] ;
            sh:path s223:observes ] .

s223:OccupantPresenceSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Occupant presence sensor"^^xsd:string ;
    rdfs:comment "A subclass of `OccupancySensor` that observes presence within its sensing region."^^xsd:string ;
    rdfs:subClassOf s223:OccupancySensor ;
    sh:property [ rdfs:comment "An `OccupantPresenceSensor` must always observe an `EnumeratedObservableProperty` that has an `EnumerationKind` of `Occupancy-Presence`."^^xsd:string ;
            sh:class s223:EnumeratedObservableProperty ;
            sh:message "s223: An `OccupantPresenceSensor` must always observe an `EnumeratedObservableProperty` that has an `EnumerationKind` of `Occupancy-Presence`."^^xsd:string ;
            sh:minCount 1 ;
            sh:node [ sh:property [ sh:class s223:Occupancy-Presence ;
                            sh:maxCount 1 ;
                            sh:path s223:hasEnumerationKind ] ] ;
            sh:path s223:observes ] .

s223:OutdoorPhysicalSpace a s223:Class,
        sh:NodeShape ;
    rdfs:label "Outdoor physical space"^^xsd:string ;
    rdfs:comment "An `OutdoorPhysicalSpace` is a subclass of `PhysicalSpace` to represent any physical spaces outside of a facility where, for example, ambient properties might be measured (within a suitably defined `DomainSpace`)."^^xsd:string ;
    rdfs:subClassOf s223:PhysicalSpace .

s223:ParticulateSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Particulate sensor"^^xsd:string ;
    rdfs:comment """A `ParticulateSensor` is a specialization of a `Sensor` that observes a `QuantifiableObservableProperty` 
that represents the amount of a particulate in a medium, in contrast to a `ConcentrationSensor` that observes the concentration 
of a miscible constituent in a medium (see {s223:ConcentrationSensor}). The 223 standard does not constrain the `Unit` or 
`QuantityKind` reported by a `ParticulateSensor`, but possible `QuantityKind`s include `Density` (mass per volume), 
`ParticleNumberDensity` (count per volume), and `DimensionlessRatio` (with units such as PPM or PPB). Some sensors may claim to report
a raw count of particles, for which a `QuantityKind` of `Count` could be used, but the required context for such a measurement 
should be provided in the sensor's documentation to specify if it in fact measures a count per volume, time, or some other combination. 
Explicitly declaring the `QuantityKind` of a sensor's output is preferable to relying on implicit assumptions.
"""^^xsd:string ;
    rdfs:subClassOf s223:Sensor ;
    sh:property [ rdfs:comment "If the relation `ofSubstance` is present it must associate the `ParticulateSensor` with a `Substance-Particulate`."^^xsd:string ;
            sh:class s223:Substance-Particulate ;
            sh:message "s223: If the relation `ofSubstance` is present it must associate the `ParticulateSensor` with a `Substance-Particulate`."^^xsd:string ;
            sh:path s223:ofSubstance ] .

s223:PhotovoltaicModule a s223:Class,
        sh:NodeShape ;
    rdfs:label "Photovoltaic module"^^xsd:string ;
    rdfs:comment "A piece of equipment that converts sunlight into electricity."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "An `PhotovoltaicModule` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:message "s223: An `PhotovoltaicModule` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "An `PhotovoltaicModule` must have at least one inlet using the medium `EM-Light`."^^xsd:string ;
            sh:message "s223: An `PhotovoltaicModule` must have at least one inlet using the medium `EM-Light`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:EM-Light ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:Pipe a s223:Class,
        sh:NodeShape ;
    rdfs:label "Pipe"^^xsd:string ;
    rdfs:comment "A `Pipe` is a subclass of `Connection` that is used primarily to transport liquids and gases such as water, sewage, natural gas, and compressed air."^^xsd:string ;
    rdfs:subClassOf s223:Connection .

s223:PowerOverEthernetSwitch a s223:Class,
        sh:NodeShape ;
    rdfs:label "Power Over Ethernet Switch"^^xsd:string ;
    rdfs:comment """A type of network hardware that connects and is capable of powering cabled devices, such as computers and Wi-Fi access points, 
  in an Ethernet LAN so they can communicate with each other and to the internet."""^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `PowerOverEthernetSwitch` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:message "s223: A `PowerOverEthernetSwitch` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `PowerOverEthernetSwitch` shall have at least one `BidirectionalConnectionPoint` using the medium `PowerAndSignal-PoE`."^^xsd:string ;
            sh:message "s223: A `PowerOverEthernetSwitch` shall have at least one `BidirectionalConnectionPoint` using the medium `PowerAndSignal-PoE`."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:PowerAndSignal-PoE ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:Pump a s223:Class,
        sh:NodeShape ;
    rdfs:label "Pump"^^xsd:string ;
    rdfs:comment "A machine for imparting energy to a fluid, drawing a fluid into itself through an entrance port, and forcing the fluid out through an exhaust port."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Pump` shall have at least one inlet using the medium Water, Oil or Refrigerant."^^xsd:string ;
            sh:message "s223: A `Pump` shall have at least one inlet using the medium Water, Oil or Refrigerant."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ rdfs:comment "A `Pump` shall have at least one inlet using the medium Water, Oil or Refrigerant."^^xsd:string ;
                            sh:message "s223: A `Pump` shall have at least one inlet using the medium Water, Oil or Refrigerant."^^xsd:string ;
                            sh:or ( [ sh:property [ sh:class s223:Fluid-Water ;
                                                sh:path s223:hasMedium ] ] [ sh:property [ sh:class s223:Fluid-Refrigerant ;
                                                sh:path s223:hasMedium ] ] [ sh:property [ sh:class s223:Fluid-Oil ;
                                                sh:path s223:hasMedium ] ] ) ;
                            sh:severity sh:Warning ] ] ],
        [ rdfs:comment "The non-electrical `ConnectionPoint`s of a `Pump` must have compatible Media."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "The non-electrical `ConnectionPoint`s of a `Pump` must have compatible Media."^^xsd:string ;
                    sh:message "s223: {?cpa} and {?cpb} on the `Pump` {$this} have incompatible Media {$mediuma} and {$mediumb}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?cpa ?cpb ?mediuma ?mediumb
WHERE {
  $this s223:hasConnectionPoint ?cpa .
  $this s223:hasConnectionPoint ?cpb .
  FILTER (?cpa != ?cpb) .
  ?cpa s223:hasMedium ?mediuma .
  FILTER (NOT EXISTS {?mediuma a/rdfs:subClassOf* s223:Constituent-Electricity}) .
  ?cpb s223:hasMedium ?mediumb .
  FILTER (NOT EXISTS {?mediumb a/rdfs:subClassOf* s223:Constituent-Electricity}) .
  FILTER (?mediuma != ?mediumb) .
  FILTER (NOT EXISTS {?mediumb a/rdfs:subClassOf* ?mediuma}) .
  FILTER (NOT EXISTS {?mediuma a/rdfs:subClassOf* ?mediumb}) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `Pump` shall have at least one outlet using the medium Water, Oil or Refrigerant."^^xsd:string ;
            sh:message "s223: A `Pump` shall have at least one outlet using the medium Water, Oil or Refrigerant."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ rdfs:comment "A `Pump` shall have at least one outlet using the medium Water, Oil or Refrigerant."^^xsd:string ;
                            sh:message "s223: A `Pump` shall have at least one outlet using the medium Water, Oil or Refrigerant."^^xsd:string ;
                            sh:or ( [ sh:property [ sh:class s223:Fluid-Water ;
                                                sh:path s223:hasMedium ] ] [ sh:property [ sh:class s223:Fluid-Refrigerant ;
                                                sh:path s223:hasMedium ] ] [ sh:property [ sh:class s223:Fluid-Oil ;
                                                sh:path s223:hasMedium ] ] ) ;
                            sh:severity sh:Warning ] ] ] .

s223:RadiatorInletShape a sh:NodeShape ;
    rdfs:label "Radiator"^^xsd:string ;
    rdfs:comment "A `Radiator` shall have at least one inlet using the medium Electricity or inlet and outlet of Water."^^xsd:string ;
    sh:message "s223: A `Radiator` shall have at least one inlet using the medium Electricity or inlet and outlet of Water."^^xsd:string ;
    sh:severity sh:Warning ;
    sh:targetClass s223:Radiator ;
    sh:xone ( [ sh:property [ rdfs:comment "A `Radiator` shall have at least one inlet using the medium Electricity or inlet and outlet of Water."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                                sh:path s223:hasMedium ] ] ] ] ] [ sh:property [ rdfs:comment "A `Radiator` shall have at least one outlet using the medium Water."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                                sh:path s223:hasMedium ] ] ] ],
                    [ rdfs:comment "A `Radiator` shall have at least one inlet using the medium Electricity or Water."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                                sh:path s223:hasMedium ] ] ] ] ] ) .

s223:RequiredCommentsShape1 a sh:NodeShape ;
    sh:severity sh:Info ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Every SPARQLConstraint must have an rdfs:comment. "^^xsd:string ;
            sh:message "s223: The SPARQLConstraint for path {?path} for Class {$this} must have an rdfs:comment."^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
SELECT $this ?path
WHERE {
$this sh:property ?propshape .
?propshape sh:sparql ?sparqlconstraint .
?propshape sh:path ?path .
FILTER NOT EXISTS {?sparqlconstraint rdfs:comment ?comment} .
}
"""^^xsd:string ] ;
    sh:targetClass s223:Class .

s223:RequiredCommentsShape2 a sh:NodeShape ;
    sh:severity sh:Info ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Every SHACL property shape must have an rdfs:comment. "^^xsd:string ;
            sh:message "s223: The property shape with path {?path} for Class {$this} must have an rdfs:comment."^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
SELECT $this ?path
WHERE {
$this sh:property ?propshape .
?propshape sh:path ?path .
FILTER NOT EXISTS {?propshape rdfs:comment ?comment} .
}
"""^^xsd:string ] ;
    sh:targetClass s223:Class .

s223:RequiredCommentsShape3 a sh:NodeShape ;
    sh:severity sh:Info ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Every SPARQLRule must have an rdfs:comment. "^^xsd:string ;
            sh:message "s223: Every SPARQLRule for Class {$this} must have an rdfs:comment."^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
SELECT $this
WHERE {
$this sh:rule ?rule .
?rule a sh:SPARQLRule .
FILTER NOT EXISTS {?rule rdfs:comment ?comment} .
}
"""^^xsd:string ] ;
    sh:targetClass s223:Class .

s223:RequiredCommentsShape4 a sh:NodeShape ;
    sh:severity sh:Info ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Every TripleRule must have an rdfs:comment. "^^xsd:string ;
            sh:message "s223: The TripleRule inferring {?pred} for Class {$this} must have an rdfs:comment."^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
SELECT $this ?pred
WHERE {
$this sh:rule ?rule .
?rule a sh:TripleRule .
?rule sh:predicate ?pred .
FILTER NOT EXISTS {?rule rdfs:comment ?comment} .
}
"""^^xsd:string ] ;
    sh:targetClass s223:Class .

s223:RequiredCommentsShape5 a sh:NodeShape ;
    sh:severity sh:Info ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Every class of the 223 standard must also be an instance of sh:NodeShape. "^^xsd:string ;
            sh:message "s223: Class {$this} must be declared as an instance of sh:NodeShape."^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
SELECT $this
WHERE {
FILTER NOT EXISTS {$this a sh:NodeShape} .
}
"""^^xsd:string ] ;
    sh:targetClass s223:Class .

s223:RequiredCommentsShape6 a sh:NodeShape ;
    sh:severity sh:Info ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Every class of the 223 standard must be a direct or indirect subclass of s223:Concept. "^^xsd:string ;
            sh:message "s223: Class {$this} must be within the rdfs:subClassOf hierarchy under s223:Concept."^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
SELECT $this
WHERE {
FILTER NOT EXISTS {$this rdfs:subClassOf* rdf:Property} .
FILTER NOT EXISTS {$this rdfs:subClassOf* s223:Concept} .
}
"""^^xsd:string ] ;
    sh:targetClass s223:Class .

s223:RequiredCommentsShape7 a sh:NodeShape ;
    sh:severity sh:Info ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Every class of the 223 standard must have an rdfs:comment. "^^xsd:string ;
            sh:message "s223: Class {$this} must have an rdfs:comment."^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
SELECT $this
WHERE {
FILTER NOT EXISTS {$this rdfs:comment ?comment} .
}
"""^^xsd:string ] ;
    sh:targetClass s223:Class .

s223:SensorObservationLocationShape a sh:NodeShape ;
    rdfs:label "Valve"^^xsd:string ;
    rdfs:comment "A `Sensor` must be associated with exactly 1 of `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasObservationLocation`."^^xsd:string ;
    sh:message "s223: A `Sensor` must be associated with exactly 1 of `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasObservationLocation`."^^xsd:string ;
    sh:targetClass s223:Sensor ;
    sh:xone ( [ sh:property [ rdfs:comment "A `Sensor` must be associated with exactly 1 of `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasObservationLocation`."^^xsd:string ;
                        sh:class s223:Connectable ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path s223:hasObservationLocation ] ] [ sh:property [ rdfs:comment "A `Sensor` must be associated with exactly 1 of `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasObservationLocation`."^^xsd:string ;
                        sh:class s223:Connection ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path s223:hasObservationLocation ] ] [ sh:property [ rdfs:comment "A `Sensor` must be associated with exactly 1 of `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasObservationLocation`."^^xsd:string ;
                        sh:class s223:ConnectionPoint ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path s223:hasObservationLocation ] ] ) .

s223:SensorObservesShape a sh:NodeShape ;
    rdfs:label "Valve"^^xsd:string ;
    rdfs:comment "A `Sensor` must be associated with exactly 1 of `QuantifiableObservableProperty` or `EnumeratedObservableProperty` using the relation `observes`."^^xsd:string ;
    sh:message "s223: A `Sensor` must be associated with exactly 1 of `QuantifiableObservableProperty` or `EnumeratedObservableProperty` using the relation `observes`."^^xsd:string ;
    sh:targetClass s223:Sensor ;
    sh:xone ( [ sh:property [ rdfs:comment "A `Sensor` must be associated with exactly 1 of `QuantifiableObservableProperty` or `EnumeratedObservableProperty` using the relation `observes`."^^xsd:string ;
                        sh:class s223:QuantifiableObservableProperty ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path s223:observes ] ] [ sh:property [ rdfs:comment "A `Sensor` must be associated with exactly 1 of `QuantifiableObservableProperty` or `EnumeratedObservableProperty` using the relation `observes`."^^xsd:string ;
                        sh:class s223:EnumeratedObservableProperty ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path s223:observes ] ] ) .

s223:SensorReferenceLocationShape a sh:NodeShape ;
    rdfs:label "Valve"^^xsd:string ;
    rdfs:comment "A `Sensor` can be associated with a maximum of one `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasReferenceLocation`."^^xsd:string ;
    sh:message "s223: A `Sensor` can be associated with a maximum of one `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasReferenceLocation`."^^xsd:string ;
    sh:or ( [ sh:property [ rdfs:comment "A `Sensor` can be associated with a maximum of one `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasReferenceLocation`."^^xsd:string ;
                        sh:class s223:Connectable ;
                        sh:path s223:hasReferenceLocation ] ] [ sh:property [ rdfs:comment "A `Sensor` can be associated with a maximum of one `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasReferenceLocation`."^^xsd:string ;
                        sh:class s223:Connection ;
                        sh:path s223:hasReferenceLocation ] ] [ sh:property [ rdfs:comment "A `Sensor` can be associated with a maximum of one `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasReferenceLocation`."^^xsd:string ;
                        sh:class s223:ConnectionPoint ;
                        sh:path s223:hasReferenceLocation ] ] ) ;
    sh:property [ rdfs:comment "A `Sensor` can be associated with a maximum of one `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasReferenceLocation`."^^xsd:string ;
            sh:maxCount 1 ;
            sh:path s223:hasReferenceLocation ] ;
    sh:targetClass s223:Sensor .

s223:SingleDuctTerminal a s223:Class,
        sh:NodeShape ;
    rdfs:label "Single Duct Terminal."^^xsd:string ;
    rdfs:comment "An air-terminal unit assembly having one ducted air inlet and a damper for regulating the airflow rate."^^xsd:string ;
    rdfs:subClassOf s223:TerminalUnit ;
    sh:property [ rdfs:comment "A `SingleDuctTerminal` must be associated with at least one `Damper` using the relation `contains`."^^xsd:string ;
            sh:message "s223: A `SingleDuctTerminal` must be associated with at least one `Damper` using the relation `contains`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:contains ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Damper ] ] .

s223:SolarThermalCollector a s223:Class,
        sh:NodeShape ;
    rdfs:label "Solar thermal collector"^^xsd:string ;
    rdfs:comment "A device that converts sunlight into thermal energy."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `SolarThermalCollector` shall have at least one inlet using the medium `EM-Light`."^^xsd:string ;
            sh:message "s223: A `SolarThermalCollector` shall have at least one inlet using the medium `EM-Light`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:EM-Light ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `SolarThermalCollector` shall have at least one outlet using the medium Water."^^xsd:string ;
            sh:message "s223: A `SolarThermalCollector` shall have at least one outlet using the medium Water."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:SymmetricRelationShape a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            rdfs:comment "Declare the inverse triples for symmetric relations"^^xsd:string ;
            sh:construct """
CONSTRUCT {
?o ?p $this .
}
WHERE {
  $this ?p ?o .
  ?p a s223:SymmetricRelation .
}
			"""^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ] ;
    sh:targetClass s223:Concept .

s223:TemperatureSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Temp sensor"^^xsd:string ;
    rdfs:comment "A `TemperatureSensor` is a specialization of a `Sensor` that observes a `QuantifiableObservableProperty` that represents a temperature measurement."^^xsd:string ;
    rdfs:subClassOf s223:Sensor ;
    sh:property [ rdfs:comment "A `TemperatureSensor` must always observe a `Property` that has a `QuantityKind` of `Temperature`."^^xsd:string ;
            sh:message "s223: A `TemperatureSensor` must always observe a `Property` that has a `QuantityKind` of `Temperature`."^^xsd:string ;
            sh:path s223:observes ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Property ;
                    sh:node [ sh:property [ sh:hasValue <http://qudt.org/vocab/quantitykind/Temperature> ;
                                    sh:path ns1:hasQuantityKind ] ] ] ] .

s223:ThermalEnergyStorageUnit a s223:Class,
        sh:NodeShape ;
    rdfs:label "A Thermal Energy Storage System"^^xsd:string ;
    rdfs:comment "A device that stores thermal energy."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A Thermal Energy Storage Unit must have at least two connection points."^^xsd:string ;
            sh:class s223:ConnectionPoint ;
            sh:message "s223: A Thermal Energy Storage Unit must have at least two connection points."^^xsd:string ;
            sh:minCount 2 ;
            sh:path s223:hasConnectionPoint ] .

s223:Thermostat a s223:Class,
        sh:NodeShape ;
    rdfs:label "Thermostat"^^xsd:string ;
    rdfs:comment "An automatic control device used to maintain temperature at a fixed or adjustable setpoint."^^xsd:string ;
    rdfs:subClassOf s223:Equipment .

s223:ThreeWayValve a s223:Class,
        sh:NodeShape ;
    rdfs:label "Three way valve"^^xsd:string ;
    rdfs:comment "A `Valve` that can divert a fluid in one of three directions."^^xsd:string ;
    rdfs:subClassOf s223:Valve ;
    sh:property [ rdfs:comment "A `ThreeWayValve` must have at least three `ConnectionPoint`s using the relation `hasConnectionPoint`."^^xsd:string ;
            sh:message "s223: A `ThreeWayValve` must have at least three `ConnectionPoint`s using the relation `hasConnectionPoint`."^^xsd:string ;
            sh:minCount 3 ;
            sh:path s223:hasConnectionPoint ] .

s223:Turbine a s223:Class,
        sh:NodeShape ;
    rdfs:label "Turbine"^^xsd:string ;
    rdfs:comment "An energy transducer that converts mechanical energy into electric energy."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Turbine` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:class s223:OutletConnectionPoint ;
            sh:message "s223: A `Turbine` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:minCount 1 ;
            sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                            sh:path s223:hasMedium ] ] ;
            sh:path s223:hasConnectionPoint ],
        [ rdfs:comment "A `Turbine` must be associated with at least one `ConnectionPoint` using the relation `hasConnectionPoint`."^^xsd:string ;
            sh:message "s223: A `Turbine` must be associated with at least one `ConnectionPoint` using the relation `hasConnectionPoint`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ] .

s223:TwoWayValve a s223:Class,
        sh:NodeShape ;
    rdfs:label "Two way valve"^^xsd:string ;
    rdfs:comment "A `Valve` that can divert a fluid in one of two directions."^^xsd:string ;
    rdfs:subClassOf s223:Valve ;
    sh:property [ rdfs:comment "A `TwoWayValve` shall have at least one inlet."^^xsd:string ;
            sh:message "s223: A `TwoWayValve` shall have at least one inlet."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ] ],
        [ rdfs:comment "A `TwoWayValve` shall have at least one outlet."^^xsd:string ;
            sh:message "s223: A `TwoWayValve` shall have at least one outlet."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ] ] .

s223:ValveCPShape a sh:NodeShape ;
    rdfs:label "Valve"^^xsd:string ;
    rdfs:comment "A `Valve` shall have at least one inlet and one outlet or two bidirectional connection points."^^xsd:string ;
    sh:message "s223: A `Valve` shall have at least one inlet and one outlet or two bidirectional connection points."^^xsd:string ;
    sh:or ( [ sh:property [ rdfs:comment "A `Valve` shall have at least one inlet and one outlet or two bidirectional connection points."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ] ;
                        sh:qualifiedValueShapesDisjoint true ],
                    [ rdfs:comment "A `Valve` shall have at least one inlet and one outlet or two bidirectional connection points."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ] ;
                        sh:qualifiedValueShapesDisjoint true ] ] [ sh:property [ rdfs:comment "A `Valve` shall have at least one inlet and one outlet or two bidirectional connection points."^^xsd:string ;
                        sh:minCount 2 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 2 ;
                        sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ] ;
                        sh:qualifiedValueShapesDisjoint true ] ] ) ;
    sh:severity sh:Warning ;
    sh:targetClass s223:Valve .

s223:VariableFrequencyDrive a s223:Class,
        sh:NodeShape ;
    rdfs:label "VariableFrequencyDrive"^^xsd:string ;
    rdfs:comment "An electronic device that varies its output frequency to vary the rotating speed of a motor, given a fixed input frequency. Used with fans or pumps to vary the flow in the system as a function of a maintained pressure."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `VariableFrequencyDrive` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:message "s223: A `VariableFrequencyDrive` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ;
            sh:severity sh:Warning ],
        [ rdfs:comment "If the relation `connectedTo` is present it must associate the `VariableFrequencyDrive` with a `Equipment`."^^xsd:string ;
            sh:class s223:Equipment ;
            sh:message "s223: If the relation `connectedTo` is present it must associate the `VariableFrequencyDrive` with a `Equipment`."^^xsd:string ;
            sh:path s223:connectedTo ],
        [ rdfs:comment "A `VariableFrequencyDrive` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:message "s223: A `VariableFrequencyDrive` shall have at least one outlet using the medium Electricity."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:WaterToAirHeatPump a s223:Class,
        sh:NodeShape ;
    rdfs:label "Water to air heat pump"^^xsd:string ;
    rdfs:comment "A subclass of `HeatPump` that can heat or cool air by transferring thermal energy with a body of water."^^xsd:string ;
    rdfs:subClassOf s223:HeatPump ;
    sh:property [ rdfs:comment "A `WaterToAirHeatPump` shall have at least one inlet using the medium `Fluid-Water`."^^xsd:string ;
            sh:message "s223: A `WaterToAirHeatPump` shall have at least one inlet using the medium `Fluid-Water`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `WaterToAirHeatPump` shall have at least one outlet using the medium `Fluid-Air`."^^xsd:string ;
            sh:message "s223: A `WaterToAirHeatPump` shall have at least one outlet using the medium `Fluid-Air`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `WaterToAirHeatPump` shall have at least one inlet using the medium `Fluid-Air`."^^xsd:string ;
            sh:message "s223: A `WaterToAirHeatPump` shall have at least one inlet using the medium `Fluid-Air`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `WaterToAirHeatPump` shall have at least one outlet using the medium `Fluid-Water`"^^xsd:string ;
            sh:message "s223: A `WaterToAirHeatPump` shall have at least one outlet using the medium `Fluid-Water`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:WaterToWaterHeatPump a s223:Class,
        sh:NodeShape ;
    rdfs:label "Water to water heat pump"^^xsd:string ;
    rdfs:comment "A subclass of `HeatPump` that can heat or cool by transferring thermal energy to and from two flows of water."^^xsd:string ;
    rdfs:subClassOf s223:HeatPump ;
    sh:property [ rdfs:comment "A `WaterToWaterHeatPump` shall have at least two outlets using the medium `Fluid-Water`."^^xsd:string ;
            sh:message "s223: A `WaterToWaterHeatPump` shall have at least two outlets using the medium `Fluid-Water`."^^xsd:string ;
            sh:minCount 2 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `WaterToWaterHeatPump` shall have at least two inlets using the medium `Fluid-Water`."^^xsd:string ;
            sh:message "s223: A `WaterToWaterHeatPump` shall have at least two inlets using the medium `Fluid-Water`."^^xsd:string ;
            sh:minCount 2 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:WindowShade a s223:Class,
        sh:NodeShape ;
    rdfs:label "Window shade"^^xsd:string ;
    rdfs:comment "A window covering that can be moved to block out or allow in light. "^^xsd:string ;
    rdfs:subClassOf s223:Equipment .

s223:inverseOf a rdf:Property ;
    rdfs:label "inverse of"^^xsd:string ;
    rdfs:comment "The relation `inverseOf` is a modeling construct to associate relations that are inverses of one another, such as `connectedTo` and `connectedFrom`."^^xsd:string .

<http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterCoilAnnotation> a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of s223:CoolingCoil matches the constraints defined by g36:ChilledWaterCoil, it will be declared as an instance of that class."^^xsd:string ;
            sh:condition <http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterCoil> ;
            sh:object <http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterCoil> ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass s223:CoolingCoil .

<http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterValveAnnotation> a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of s223:Valve matches the constraints defined by g36:ChilledWaterValve, it will be declared as an instance of that class."^^xsd:string ;
            sh:condition <http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterValve>,
                <http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterValveOrShape1> ;
            sh:object <http://data.ashrae.org/standard223/1.0/extensions/g36#ChilledWaterValve> ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass s223:Valve .

<http://data.ashrae.org/standard223/1.0/extensions/g36#DamperAnnotation> a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of s223:Damper matches the constraints defined by g36:Damper, it will be declared as an instance of that class."^^xsd:string ;
            sh:condition <http://data.ashrae.org/standard223/1.0/extensions/g36#Damper>,
                <http://data.ashrae.org/standard223/1.0/extensions/g36#DamperOrShape1> ;
            sh:object <http://data.ashrae.org/standard223/1.0/extensions/g36#Damper> ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass s223:Damper .

<http://data.ashrae.org/standard223/1.0/extensions/g36#ElectricHeatingCoilAnnotation> a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of s223:ElectricResistanceElement matches the constraints defined by g36:ElectricHeatingCoil, it will be declared as an instance of that class."^^xsd:string ;
            sh:condition <http://data.ashrae.org/standard223/1.0/extensions/g36#ElectricHeatingCoil> ;
            sh:object <http://data.ashrae.org/standard223/1.0/extensions/g36#ElectricHeatingCoil> ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass s223:ElectricResistanceElement .

<http://data.ashrae.org/standard223/1.0/extensions/g36#FanAnnotation> a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of s223:Fan matches the constraints defined by g36:Fan, it will be declared as an instance of that class."^^xsd:string ;
            sh:condition <http://data.ashrae.org/standard223/1.0/extensions/g36#Fan> ;
            sh:object <http://data.ashrae.org/standard223/1.0/extensions/g36#Fan> ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass s223:Fan .

<http://data.ashrae.org/standard223/1.0/extensions/g36#FanWithVFDAnnotation> a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of s223:Fan matches the constraints defined by g36:FanWithVFD, it will be declared as an instance of that class."^^xsd:string ;
            sh:condition <http://data.ashrae.org/standard223/1.0/extensions/g36#FanWithVFD> ;
            sh:object <http://data.ashrae.org/standard223/1.0/extensions/g36#FanWithVFD> ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass s223:Fan .

<http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterCoilAnnotation> a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of s223:HeatingCoil matches the constraints defined by g36:HotWaterCoil, it will be declared as an instance of that class."^^xsd:string ;
            sh:condition <http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterCoil> ;
            sh:object <http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterCoil> ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass s223:HeatingCoil .

<http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterValveAnnotation> a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of s223:Valve matches the constraints defined by g36:HotWaterValve, it will be declared as an instance of that class."^^xsd:string ;
            sh:condition <http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterValve>,
                <http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterValveOrShape1> ;
            sh:object <http://data.ashrae.org/standard223/1.0/extensions/g36#HotWaterValve> ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass s223:Valve .

<http://data.ashrae.org/standard223/1.0/extensions/g36#TwoPositionDamperAnnotation> a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of s223:Damper matches the constraints defined by g36:TwoPositionDamper, it will be declared as an instance of that class."^^xsd:string ;
            sh:condition <http://data.ashrae.org/standard223/1.0/extensions/g36#TwoPositionDamper> ;
            sh:object <http://data.ashrae.org/standard223/1.0/extensions/g36#TwoPositionDamper> ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass s223:Damper .

<http://data.ashrae.org/standard223/1.0/extensions/g36#ZoneAnnotation> a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of s223:Zone matches the constraints defined by g36:Zone, it will be declared as an instance of that class."^^xsd:string ;
            sh:condition <http://data.ashrae.org/standard223/1.0/extensions/g36#Zone> ;
            sh:object <http://data.ashrae.org/standard223/1.0/extensions/g36#Zone> ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass s223:Zone .

<http://data.ashrae.org/standard223/1.0/extensions/g36#ZoneGroupAnnotation> a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of s223:ZoneGroup matches the constraints defined by g36:ZoneGroup, it will be declared as an instance of that class."^^xsd:string ;
            sh:condition <http://data.ashrae.org/standard223/1.0/extensions/g36#ZoneGroup> ;
            sh:object <http://data.ashrae.org/standard223/1.0/extensions/g36#ZoneGroup> ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass s223:ZoneGroup .

<http://data.ashrae.org/standard223/1.0/extensions/g36/core> owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

<http://data.ashrae.org/standard223/1.0/extensions/settings> rdfs:comment """This file can be used to control which extensions are to be loaded with the 223 ontology by importing the appropriate graph(s). Options include:
For validation of the schema, model, or data - http://data.ashrae.org/standard223/1.0/validation/schema (or model or data).  
For inferred relations - http://data.ashrae.org/standard223/1.0/inference/model-rules (and/or schema-rules, data-rules).
For G36 extensions - http://data.ashrae.org/standard223/1.0/extensions/g36/core (and/or vav-terminal-unit, multiple-zone-vav-air-handling-unit, etc.)."""^^xsd:string ;
    owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

<http://data.ashrae.org/standard223/1.0/inference/data-rules> owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

<http://data.ashrae.org/standard223/1.0/inference/model-rules> owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

<http://data.ashrae.org/standard223/1.0/inference/owl-subset> owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

<http://data.ashrae.org/standard223/1.0/model/core> owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

<http://data.ashrae.org/standard223/1.0/model/equipment> owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

<http://data.ashrae.org/standard223/1.0/validation/data> owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

<http://data.ashrae.org/standard223/1.0/validation/model> owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

<http://data.ashrae.org/standard223/1.0/validation/schema> owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

<http://data.ashrae.org/standard223/1.0/vocab/enumeration> owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

<http://data.ashrae.org/bacnet/2020#device-identifier> a rdf:Property ;
    rdfs:label "Device Identifier"^^xsd:string ;
    rdfs:comment "The Object_Identifier property of the device object within the BACnet device.  See ASHRAE 135-2020 Clause 12.11.1."^^xsd:string .

<http://data.ashrae.org/bacnet/2020#device-name> a rdf:Property ;
    rdfs:label "Device Name"^^xsd:string ;
    rdfs:comment "The name of the BACnet device being referenced, more formally the Object_Name property of the device object within the BACnet device.  See ASHRAE 135-2020 Clause 12.11.2."^^xsd:string .

<http://data.ashrae.org/bacnet/2020#object-identifier> a rdf:Property ;
    rdfs:label "object-identifier"^^xsd:string ;
    rdfs:comment "The Object_Identifier property of the object being referenced.  For example, for the object identifier of an Analog Value Object, see ASHRAE 135-2020 Clause 12.4.1."^^xsd:string .

<http://data.ashrae.org/bacnet/2020#object-name> a rdf:Property ;
    rdfs:label "Object Name"^^xsd:string ;
    rdfs:comment "The Object_Name property of the object being referenced.  For example, for the object name of an Analog Value Object, see ASHRAE 135-2020 Clause 12.4.2."^^xsd:string .

<http://data.ashrae.org/bacnet/2020#priority-for-writing> a rdf:Property ;
    rdfs:label "Priority for Writing"^^xsd:string ;
    rdfs:comment """This parameter shall be an integer in the range 1..16, which indicates the priority assigned to the WriteProperty service. If an attempt
is made to write to a commandable property without specifying the bacnet:priority-for-writing, a default priority of 16 (the lowest priority) shall
be assumed. If an attempt is made to write to a property that is not commandable with a specified priority, the priority shall be
ignored.  See ASHRAE 135-2020 Clause 15.9.1.1.5."""^^xsd:string .

<http://data.ashrae.org/bacnet/2020#property-array-index> a rdf:Property ;
    rdfs:label "Property Array Index"^^xsd:string ;
    rdfs:comment """If the property identified is of datatype array, this optional property of type Unsigned shall indicate the array index of
the element of the property referenced by the ReadProperty service or the Read Access Specification of the ReadPropertyMultiple service. If the bacnet:property-array-index is omitted, this shall mean that the entire
array shall be referenced.  See ASHRAE 135-2020 Clause 15.5.1.1.3 and Clause 15.7.1.1.1."""^^xsd:string .

<http://data.ashrae.org/bacnet/2020#property-identifier> a rdf:Property ;
    rdfs:label "Property Identifier"^^xsd:string ;
    rdfs:comment "The Object_Identifier property of the object being referenced.  For example, for the object identifier of an Analog Value Object, see ASHRAE 135-2020 Clause 12.4.1."^^xsd:string .

s223:12V-12V-Neg a s223:12V-12V-Neg,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "12V-Neg"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-12.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "12V-Neg"^^xsd:string ;
    rdfs:subClassOf s223:DC-12V .

s223:12V-12V-Pos a s223:12V-12V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "12V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCPositiveVoltage-12.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "12V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-12V .

s223:12V-6V-Neg-6V-Pos a s223:12V-6V-Neg-6V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "6V-Neg-6V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-6.0V,
        s223:DCPositiveVoltage-6.0V ;
    rdfs:comment "6V-Neg-6V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-12V .

s223:24V-12V-Neg-12V-Pos a s223:24V-12V-Neg-12V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "12V-Neg-12V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-12.0V,
        s223:DCPositiveVoltage-12.0V ;
    rdfs:comment "12V-Neg-12V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-24V .

s223:24V-24V-Neg a s223:24V-24V-Neg,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "24V-Neg"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-24.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "24V-Neg"^^xsd:string ;
    rdfs:subClassOf s223:DC-24V .

s223:24V-24V-Pos a s223:24V-24V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "24V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCPositiveVoltage-24.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "24V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-24V .

s223:380V-190V-Neg-190V-Pos a s223:380V-190V-Neg-190V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "190V-Neg-190V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-190.0V,
        s223:DCPositiveVoltage-190.0V ;
    rdfs:comment "190V-Neg-190V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-380V .

s223:380V-380V-Neg a s223:380V-380V-Neg,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "380V-Neg"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-380.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "380V-Neg"^^xsd:string ;
    rdfs:subClassOf s223:DC-380V .

s223:380V-380V-Pos a s223:380V-380V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "380V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCPositiveVoltage-380.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "380V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-380V .

s223:48V-24V-Neg-24V-Pos a s223:48V-24V-Neg-24V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "24V-Neg-24V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-24.0V,
        s223:DCPositiveVoltage-24.0V ;
    rdfs:comment "24V-Neg-24V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-48V .

s223:48V-48V-Neg a s223:48V-48V-Neg,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "48V-Neg"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-48.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "48V-Neg"^^xsd:string ;
    rdfs:subClassOf s223:DC-48V .

s223:48V-48V-Pos a s223:48V-48V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "48V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCPositiveVoltage-48.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "48V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-48V .

s223:5V-2.5V-Neg-2.5V-Pos a s223:5V-2.5V-Neg-2.5V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "2.5V-Neg-2.5V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-2.5V,
        s223:DCPositiveVoltage-2.5V ;
    rdfs:comment "2.5V-Neg-2.5V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-5V .

s223:5V-5V-Neg a s223:5V-5V-Neg,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "5V-Neg"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-5.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "5V-Neg"^^xsd:string ;
    rdfs:subClassOf s223:DC-5V .

s223:5V-5V-Pos a s223:5V-5V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "5V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCPositiveVoltage-5.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "5V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-5V .

s223:6V-3V-Neg-3V-Pos a s223:6V-3V-Neg-3V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "3V-Neg-3V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-3.0V,
        s223:DCPositiveVoltage-3.0V ;
    rdfs:comment "3V-Neg-3V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-6V .

s223:6V-6V-Neg a s223:6V-6V-Neg,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "6V-Neg"^^xsd:string ;
    s223:hasVoltage s223:DCNegativeVoltage-6.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "6V-Neg"^^xsd:string ;
    rdfs:subClassOf s223:DC-6V .

s223:6V-6V-Pos a s223:6V-6V-Pos,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "6V-Pos"^^xsd:string ;
    s223:hasVoltage s223:DCPositiveVoltage-6.0V,
        s223:DCVoltage-DCZeroVoltage ;
    rdfs:comment "6V-Pos"^^xsd:string ;
    rdfs:subClassOf s223:DC-6V .

s223:AC-10000VLL-1Ph-60Hz a s223:AC-10000VLL-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-10000VLL-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-10000V ;
    rdfs:comment "`AC-10000VLL-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-10000VLL-3Ph-60Hz a s223:AC-10000VLL-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-10000VLL-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-10000V ;
    rdfs:comment "`AC-10000VLL-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-10000VLL-5770VLN-1Ph-60Hz a s223:AC-10000VLL-5770VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-10000VLL-5770VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-10000V,
        s223:LineNeutralVoltage-5770V ;
    rdfs:comment "`AC-10000VLL-5770VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-10000VLL-5770VLN-3Ph-60Hz a s223:AC-10000VLL-5770VLN-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-10000VLL-5770VLN-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-10000V,
        s223:LineNeutralVoltage-5770V ;
    rdfs:comment "`AC-10000VLL-5770VLN-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-110VLN-1Ph-50Hz a s223:AC-110VLN-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-110VLN-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-110V ;
    rdfs:comment "`AC-110VLN-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-120VLN-1Ph-60Hz a s223:AC-120VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-120VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-120V ;
    rdfs:comment "`AC-120VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-127VLN-1Ph-50Hz a s223:AC-127VLN-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-127VLN-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-127V ;
    rdfs:comment "`AC-127VLN-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-139VLN-1Ph-50Hz a s223:AC-139VLN-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-139VLN-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-139V ;
    rdfs:comment "`AC-139VLN-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-1730VLN-1Ph-60Hz a s223:AC-1730VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-1730VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-1730V ;
    rdfs:comment "`AC-1730VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-1900VLN-1Ph-60Hz a s223:AC-1900VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-1900VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-1900V ;
    rdfs:comment "`AC-1900VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-190VLL-110VLN-1Ph-50Hz a s223:AC-190VLL-110VLN-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-190VLL-110VLN-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-190V,
        s223:LineNeutralVoltage-110V ;
    rdfs:comment "`AC-190VLL-110VLN-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-190VLL-110VLN-3Ph-50Hz a s223:AC-190VLL-110VLN-3Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-190VLL-110VLN-3Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-190V,
        s223:LineNeutralVoltage-110V ;
    rdfs:comment "`AC-190VLL-110VLN-3Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-190VLL-1Ph-50Hz a s223:AC-190VLL-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-190VLL-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-190V ;
    rdfs:comment "`AC-190VLL-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-190VLL-3Ph-50Hz a s223:AC-190VLL-3Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-190VLL-3Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-190V ;
    rdfs:comment "`AC-190VLL-3Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-208VLL-120VLN-1Ph-60Hz a s223:AC-208VLL-120VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-208VLL-120VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-208V,
        s223:LineNeutralVoltage-120V ;
    rdfs:comment "`AC-208VLL-120VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-208VLL-120VLN-3Ph-60Hz a s223:AC-208VLL-120VLN-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-208VLL-120VLN-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-208V,
        s223:LineNeutralVoltage-120V ;
    rdfs:comment "`AC-208VLL-120VLN-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-208VLL-1Ph-60Hz a s223:AC-208VLL-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-208VLL-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-208V ;
    rdfs:comment "`AC-208VLL-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-208VLL-3Ph-60Hz a s223:AC-208VLL-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-208VLL-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-208V ;
    rdfs:comment "`AC-208VLL-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-208VLN-1Ph-60Hz a s223:AC-208VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-208VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-208V ;
    rdfs:comment "`AC-208VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-219VLN-1Ph-60Hz a s223:AC-219VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-219VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-219V ;
    rdfs:comment "`AC-219VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-220VLL-127VLN-1Ph-50Hz a s223:AC-220VLL-127VLN-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-220VLL-127VLN-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-220V,
        s223:LineNeutralVoltage-127V ;
    rdfs:comment "`AC-220VLL-127VLN-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-220VLL-127VLN-3Ph-50Hz a s223:AC-220VLL-127VLN-3Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-220VLL-127VLN-3Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-220V,
        s223:LineNeutralVoltage-127V ;
    rdfs:comment "`AC-220VLL-127VLN-3Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-220VLL-1Ph-50Hz a s223:AC-220VLL-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-220VLL-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-220V ;
    rdfs:comment "`AC-220VLL-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-220VLL-3Ph-50Hz a s223:AC-220VLL-3Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-220VLL-3Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-220V ;
    rdfs:comment "`AC-220VLL-3Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-231VLN-1Ph-50Hz a s223:AC-231VLN-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-231VLN-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-231V ;
    rdfs:comment "`AC-231VLN-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-2400VLN-1Ph-60Hz a s223:AC-2400VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-2400VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-2400V ;
    rdfs:comment "`AC-2400VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-240VLL-120VLN-1Ph-60Hz a s223:AC-240VLL-120VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-240VLL-120VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-240V,
        s223:LineNeutralVoltage-120V ;
    rdfs:comment "`AC-240VLL-120VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-240VLL-139VLN-1Ph-50Hz a s223:AC-240VLL-139VLN-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-240VLL-139VLN-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-240V,
        s223:LineNeutralVoltage-139V ;
    rdfs:comment "`AC-240VLL-139VLN-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-240VLL-139VLN-3Ph-50Hz a s223:AC-240VLL-139VLN-3Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-240VLL-139VLN-3Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-240V,
        s223:LineNeutralVoltage-139V ;
    rdfs:comment "`AC-240VLL-139VLN-3Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-240VLL-1Ph-50Hz a s223:AC-240VLL-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-240VLL-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-240V ;
    rdfs:comment "`AC-240VLL-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-240VLL-1Ph-60Hz a s223:AC-240VLL-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-240VLL-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-240V ;
    rdfs:comment "`AC-240VLL-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-240VLL-208VLN-120VLN-1Ph-60Hz a s223:AC-240VLL-208VLN-120VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-240VLL-208VLN-120VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-240V,
        s223:LineNeutralVoltage-120V,
        s223:LineNeutralVoltage-208V ;
    rdfs:comment "`AC-240VLL-208VLN-120VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-240VLL-208VLN-120VLN-3Ph-60Hz a s223:AC-240VLL-208VLN-120VLN-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-240VLL-208VLN-120VLN-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-240V,
        s223:LineNeutralVoltage-120V,
        s223:LineNeutralVoltage-208V ;
    rdfs:comment "`AC-240VLL-208VLN-120VLN-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-240VLL-3Ph-50Hz a s223:AC-240VLL-3Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-240VLL-3Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-240V ;
    rdfs:comment "`AC-240VLL-3Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-240VLL-3Ph-60Hz a s223:AC-240VLL-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-240VLL-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-240V ;
    rdfs:comment "`AC-240VLL-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-240VLN-1Ph-50Hz a s223:AC-240VLN-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-240VLN-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-240V ;
    rdfs:comment "`AC-240VLN-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-24VLN-1Ph-50Hz a s223:AC-24VLN-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-24VLN-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-24V ;
    rdfs:comment "`AC-24VLN-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-24VLN-1Ph-60Hz a s223:AC-24VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-24VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-24V ;
    rdfs:comment "`AC-24VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-277VLN-1Ph-60Hz a s223:AC-277VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-277VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-277V ;
    rdfs:comment "`AC-277VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-3000VLL-1730VLN-1Ph-60Hz a s223:AC-3000VLL-1730VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-3000VLL-1730VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-3000V,
        s223:LineNeutralVoltage-1730V ;
    rdfs:comment "`AC-3000VLL-1730VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-3000VLL-1730VLN-3Ph-60Hz a s223:AC-3000VLL-1730VLN-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-3000VLL-1730VLN-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-3000V,
        s223:LineNeutralVoltage-1730V ;
    rdfs:comment "`AC-3000VLL-1730VLN-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-3000VLL-1Ph-60Hz a s223:AC-3000VLL-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-3000VLL-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-3000V ;
    rdfs:comment "`AC-3000VLL-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-3000VLL-3Ph-60Hz a s223:AC-3000VLL-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-3000VLL-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-3000V ;
    rdfs:comment "`AC-3000VLL-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-3300VLL-1900VLN-1Ph-60Hz a s223:AC-3300VLL-1900VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-3300VLL-1900VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-3300V,
        s223:LineNeutralVoltage-1900V ;
    rdfs:comment "`AC-3300VLL-1900VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-3300VLL-1900VLN-3Ph-60Hz a s223:AC-3300VLL-1900VLN-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-3300VLL-1900VLN-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-3300V,
        s223:LineNeutralVoltage-1900V ;
    rdfs:comment "`AC-3300VLL-1900VLN-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-3300VLL-1Ph-60Hz a s223:AC-3300VLL-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-3300VLL-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-3300V ;
    rdfs:comment "`AC-3300VLL-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-3300VLL-3Ph-60Hz a s223:AC-3300VLL-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-3300VLL-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-3300V ;
    rdfs:comment "`AC-3300VLL-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-3460VLN-1Ph-60Hz a s223:AC-3460VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-3460VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-3460V ;
    rdfs:comment "`AC-3460VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-347VLN-1Ph-60Hz a s223:AC-347VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-347VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-347V ;
    rdfs:comment "`AC-347VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-380VLL-1Ph-60Hz a s223:AC-380VLL-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-380VLL-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-380V ;
    rdfs:comment "`AC-380VLL-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-380VLL-219VLN-1Ph-60Hz a s223:AC-380VLL-219VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-380VLL-219VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-380V,
        s223:LineNeutralVoltage-219V ;
    rdfs:comment "`AC-380VLL-219VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-380VLL-219VLN-3Ph-60Hz a s223:AC-380VLL-219VLN-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-380VLL-219VLN-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-380V,
        s223:LineNeutralVoltage-219V ;
    rdfs:comment "`AC-380VLL-219VLN-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-380VLL-3Ph-60Hz a s223:AC-380VLL-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-380VLL-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-380V ;
    rdfs:comment "`AC-380VLL-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-3810VLN-1Ph-60Hz a s223:AC-3810VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-3810VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-3810V ;
    rdfs:comment "`AC-3810VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-400VLL-1Ph-50Hz a s223:AC-400VLL-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-400VLL-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-400V ;
    rdfs:comment "`AC-400VLL-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-400VLL-231VLN-1Ph-50Hz a s223:AC-400VLL-231VLN-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-400VLL-231VLN-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-400V,
        s223:LineNeutralVoltage-231V ;
    rdfs:comment "`AC-400VLL-231VLN-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-400VLL-231VLN-3Ph-50Hz a s223:AC-400VLL-231VLN-3Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-400VLL-231VLN-3Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-400V,
        s223:LineNeutralVoltage-231V ;
    rdfs:comment "`AC-400VLL-231VLN-3Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-400VLL-3Ph-50Hz a s223:AC-400VLL-3Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-400VLL-3Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-400V ;
    rdfs:comment "`AC-400VLL-3Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-415VLL-1Ph-50Hz a s223:AC-415VLL-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-415VLL-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-415V ;
    rdfs:comment "`AC-415VLL-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-415VLL-240VLN-1Ph-50Hz a s223:AC-415VLL-240VLN-1Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-415VLL-240VLN-1Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-415V,
        s223:LineNeutralVoltage-240V ;
    rdfs:comment "`AC-415VLL-240VLN-1Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-415VLL-240VLN-3Ph-50Hz a s223:AC-415VLL-240VLN-3Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-415VLL-240VLN-3Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-415V,
        s223:LineNeutralVoltage-240V ;
    rdfs:comment "`AC-415VLL-240VLN-3Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-415VLL-3Ph-50Hz a s223:AC-415VLL-3Ph-50Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-415VLL-3Ph-50Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-50Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-415V ;
    rdfs:comment "`AC-415VLL-3Ph-50Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-4160VLL-1Ph-60Hz a s223:AC-4160VLL-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-4160VLL-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-4160V ;
    rdfs:comment "`AC-4160VLL-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-4160VLL-2400VLN-1Ph-60Hz a s223:AC-4160VLL-2400VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-4160VLL-2400VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-4160V,
        s223:LineNeutralVoltage-2400V ;
    rdfs:comment "`AC-4160VLL-2400VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-4160VLL-2400VLN-3Ph-60Hz a s223:AC-4160VLL-2400VLN-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-4160VLL-2400VLN-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-4160V,
        s223:LineNeutralVoltage-2400V ;
    rdfs:comment "`AC-4160VLL-2400VLN-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-4160VLL-3Ph-60Hz a s223:AC-4160VLL-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-4160VLL-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-4160V ;
    rdfs:comment "`AC-4160VLL-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-480VLL-1Ph-60Hz a s223:AC-480VLL-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-480VLL-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-480V ;
    rdfs:comment "`AC-480VLL-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-480VLL-277VLN-1Ph-60Hz a s223:AC-480VLL-277VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-480VLL-277VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-480V,
        s223:LineNeutralVoltage-277V ;
    rdfs:comment "`AC-480VLL-277VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-480VLL-277VLN-3Ph-60Hz a s223:AC-480VLL-277VLN-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-480VLL-277VLN-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-480V,
        s223:LineNeutralVoltage-277V ;
    rdfs:comment "`AC-480VLL-277VLN-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-480VLL-3Ph-60Hz a s223:AC-480VLL-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-480VLL-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-480V ;
    rdfs:comment "`AC-480VLL-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-5770VLN-1Ph-60Hz a s223:AC-5770VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-5770VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineNeutralVoltage-5770V ;
    rdfs:comment "`AC-5770VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-6000VLL-1Ph-60Hz a s223:AC-6000VLL-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-6000VLL-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-6000V ;
    rdfs:comment "`AC-6000VLL-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-6000VLL-3460VLN-1Ph-60Hz a s223:AC-6000VLL-3460VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-6000VLL-3460VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-6000V,
        s223:LineNeutralVoltage-3460V ;
    rdfs:comment "`AC-6000VLL-3460VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-6000VLL-3460VLN-3Ph-60Hz a s223:AC-6000VLL-3460VLN-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-6000VLL-3460VLN-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-6000V,
        s223:LineNeutralVoltage-3460V ;
    rdfs:comment "`AC-6000VLL-3460VLN-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-6000VLL-3Ph-60Hz a s223:AC-6000VLL-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-6000VLL-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-6000V ;
    rdfs:comment "`AC-6000VLL-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-600VLL-1Ph-60Hz a s223:AC-600VLL-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-600VLL-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-600V ;
    rdfs:comment "`AC-600VLL-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-600VLL-347VLN-1Ph-60Hz a s223:AC-600VLL-347VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-600VLL-347VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-600V,
        s223:LineNeutralVoltage-347V ;
    rdfs:comment "`AC-600VLL-347VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-600VLL-347VLN-3Ph-60Hz a s223:AC-600VLL-347VLN-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-600VLL-347VLN-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-600V,
        s223:LineNeutralVoltage-347V ;
    rdfs:comment "`AC-600VLL-347VLN-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-600VLL-3Ph-60Hz a s223:AC-600VLL-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-600VLL-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-600V ;
    rdfs:comment "`AC-600VLL-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-6600VLL-1Ph-60Hz a s223:AC-6600VLL-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-6600VLL-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-6600V ;
    rdfs:comment "`AC-6600VLL-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-6600VLL-3810VLN-1Ph-60Hz a s223:AC-6600VLL-3810VLN-1Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-6600VLL-3810VLN-1Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-SinglePhase ;
    s223:hasVoltage s223:LineLineVoltage-6600V,
        s223:LineNeutralVoltage-3810V ;
    rdfs:comment "`AC-6600VLL-3810VLN-1Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-6600VLL-3810VLN-3Ph-60Hz a s223:AC-6600VLL-3810VLN-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-6600VLL-3810VLN-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-6600V,
        s223:LineNeutralVoltage-3810V ;
    rdfs:comment "`AC-6600VLL-3810VLN-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AC-6600VLL-3Ph-60Hz a s223:AC-6600VLL-3Ph-60Hz,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "AC-6600VLL-3Ph-60Hz"^^xsd:string ;
    s223:hasFrequency s223:Frequency-60Hz ;
    s223:hasNumberOfElectricalPhases s223:NumberOfElectricalPhases-ThreePhase ;
    s223:hasVoltage s223:LineLineVoltage-6600V ;
    rdfs:comment "`AC-6600VLL-3Ph-60Hz`"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-AC .

s223:AirHeatExchanger a s223:Class,
        sh:NodeShape ;
    rdfs:label "Air heat exchanger"^^xsd:string ;
    rdfs:comment """A component intended to transfer heat from one air stream to another while keeping the two media separate. The
  `AirHeatExchanger` class does not represent the physical characteristics of a heat exchanger design. It represents only the heat
  transfer functionality."""^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "An `AirHeatExchanger` shall have no `BidirectionalConnectionPoint`s."^^xsd:string ;
            sh:message "s223: An `AirHeatExchanger` shall have no `BidirectionalConnectionPoint`s."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                    sh:message "s223: An `AirHeatExchanger` shall have no `BidirectionalConnectionPoint`s."^^xsd:string ;
                    sh:qualifiedMaxCount 0 ] ],
        [ rdfs:comment "An `AirHeatExchanger` shall have at least two air inlets, each paired with an outlet."^^xsd:string ;
            sh:message "s223: An `AirHeatExchanger` shall have at least two air inlets, each paired with an outlet."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:OutletConnectionPoint ;
                                    sh:minCount 1 ;
                                    sh:path s223:pairedConnectionPoint ],
                                [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "An `AirHeatExchanger` shall have at least two air outlets, each paired with an inlet."^^xsd:string ;
            sh:message "s223: An `AirHeatExchanger` shall have at least two air outlets, each paired with an inlet."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ],
                                [ sh:class s223:InletConnectionPoint ;
                                    sh:minCount 1 ;
                                    sh:path s223:pairedConnectionPoint ] ] ] ] .

s223:Aspect-Alarm a s223:Aspect-Alarm,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Alarm"^^xsd:string ;
    rdfs:comment "The property value indicates whether an alarm condition is active or provides details about an active alarm."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-CatalogNumber a s223:Aspect-CatalogNumber,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-CatalogNumber"^^xsd:string ;
    rdfs:comment "The property value is a name or other identifier of the product's manufacturer."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-Deadband a s223:Aspect-Deadband,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Deadband"^^xsd:string ;
    rdfs:comment "The property value is a range around a setpoint where no action is taken to avoid unnecessary corrections."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-Delta a s223:Aspect-Delta,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Delta"^^xsd:string ;
    rdfs:comment "The property value is a differential value (e.g., pressure difference) instead of an absolute value."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-Fault a s223:Aspect-Fault,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Fault"^^xsd:string ;
    rdfs:comment "The property value is a fault indicator or code that signals a malfunction or issue with the system or equipment."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-HighLimit a s223:Aspect-HighLimit,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-High limit"^^xsd:string ;
    rdfs:comment "The property value is an upper threshold used in a control or alarm detection algorithm."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-LowLimit a s223:Aspect-LowLimit,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Low limit"^^xsd:string ;
    rdfs:comment "The property value is a lower threshold used in a control or alarm detection algorithm."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-Manufacturer a s223:Aspect-Manufacturer,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Manufacturer"^^xsd:string ;
    rdfs:comment "The property value is a name or other identifier of the product’s manufacturer."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-Maximum a s223:Aspect-Maximum,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Maximum"^^xsd:string ;
    rdfs:comment "The property value is a highest specified or observed value. (Examples: upper limit of the specified operating voltage range; maximum measured temperature.)"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-Minimum a s223:Aspect-Minimum,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Minimum"^^xsd:string ;
    rdfs:comment "The property value is a lowest specified or observed value. (Examples: lower limit of the specified operating voltage range; minimum measured temperature.)"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-Model a s223:Aspect-Model,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Model"^^xsd:string ;
    rdfs:comment "The property value is a model identifier of the product."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-Nominal a s223:Aspect-Nominal,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Nominal"^^xsd:string ;
    rdfs:comment "The property value is a value that is expected or desired under normal operating conditions, but may not reflect the actual value at all times. (Example: nominal voltage.)"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-OperatingMode a s223:Aspect-OperatingMode,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-OperatingMode"^^xsd:string ;
    rdfs:comment "The property value is the current intended mode of operation, such as 'Automatic', 'On', or 'Off'."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-OperatingStatus a s223:Aspect-OperatingStatus,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-OperatingStatus"^^xsd:string ;
    rdfs:comment "The property value is the current operational status of the system or equipment, such as 'Running,' 'Stopped,' or 'Maintenance Mode.'"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-Rated a s223:Aspect-Rated,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Rated"^^xsd:string ;
    rdfs:comment "The property value indicates a limit for continuous safe operation, but may not reflect the actual value at all times (Example: rated voltage)"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-SerialNumber a s223:Aspect-SerialNumber,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-SerialNumber"^^xsd:string ;
    rdfs:comment "The property value is the serial number assigned by the manufacturer to the system or equipment."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-Setpoint a s223:Aspect-Setpoint,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Setpoint"^^xsd:string ;
    rdfs:comment "The property value is a target value for a control algorithm."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Aspect-Threshold a s223:Aspect-Threshold,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Aspect-Threshold"^^xsd:string ;
    rdfs:comment "The property value is a threshold used in a control algorithm."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Aspect .

s223:Battery a s223:Class,
        sh:NodeShape ;
    rdfs:label "Battery"^^xsd:string ;
    rdfs:comment "A container consisting of one or more cells, in which chemical energy is converted into electricity and used as a source of power."^^xsd:string ;
    rdfs:subClassOf s223:Equipment .

s223:ChilledBeam a s223:Class,
        sh:NodeShape ;
    rdfs:label "Chilled beam"^^xsd:string ;
    rdfs:comment "A structure with a colder surface temperature where air passes through, and air movement is induced in the room to achieve cooling. Cooling medium is generally water."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `ChilledBeam` shall have at least one inlet using the medium Water."^^xsd:string ;
            sh:message "s223: A `ChilledBeam` shall have at least one inlet using the medium Water."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `ChilledBeam` must be associated with the `Role-Cooling` using the relation `hasRole`"^^xsd:string ;
            sh:message "s223: A `ChilledBeam` must be associated with the `Role-Cooling` using the relation `hasRole`"^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasRole ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Role-Cooling ] ],
        [ rdfs:comment "A `ChilledBeam` shall have at least one outlet using the medium Water."^^xsd:string ;
            sh:message "s223: A `ChilledBeam` shall have at least one outlet using the medium Water."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `ChilledBeam` shall have at least one bidirectional connection point using the medium Air."^^xsd:string ;
            sh:message "s223: A `ChilledBeam` shall have at least one bidirectional connection point using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "A Chilled Beam must always have the role `Role-Cooling`"^^xsd:string ;
            sh:object s223:Role-Cooling ;
            sh:predicate s223:hasRole ;
            sh:subject sh:this ] .

s223:Constituent-CO a s223:Class,
        s223:Constituent-CO,
        sh:NodeShape ;
    rdfs:label "Constituent-CO"^^xsd:string ;
    rdfs:comment "`Constituent-CO`"^^xsd:string ;
    rdfs:subClassOf s223:Medium-Constituent .

s223:Domain-ConveyanceSystems a s223:Class,
        s223:Domain-ConveyanceSystems,
        sh:NodeShape ;
    rdfs:label "Domain-ConveyanceSystems"^^xsd:string ;
    rdfs:comment "The domain ConveyanceSystems represents equipment used to move people or things from one place in a building to another. Example equipment that might fall within a ConveyanceSystems domain include elevators, escalators, and conveyer belts."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Domain .

s223:Domain-Electrical a s223:Class,
        s223:Domain-Electrical,
        sh:NodeShape ;
    rdfs:label "Domain-Electrical"^^xsd:string ;
    rdfs:comment "The domain Electrical represents equipment used to provide electrical power within a building. Example equipment that might fall within an Electrical domain include breaker panels, switchgear, photovoltaic panels, and generators. "^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Domain .

s223:Domain-FireProtection a s223:Class,
        s223:Domain-FireProtection,
        sh:NodeShape ;
    rdfs:label "Domain-Fire"^^xsd:string ;
    rdfs:comment "The domain FireProtection represents equipment used to provide fire detection and protection within a building. Example equipment that might be fall within a Fire domain include smoke detectors, alarm annunciators, and emergency public address systems. "^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Domain .

s223:Domain-Lighting a s223:Class,
        s223:Domain-Lighting,
        sh:NodeShape ;
    rdfs:label "Domain-Lighting"^^xsd:string ;
    rdfs:comment "The domain Lighting represents equipment used to provide illumination within or outside a building. Example equipment that might fall within a Lighting domain includes luminaires, daylight sensors, and movable sun shades."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Domain .

s223:Domain-Networking a s223:Class,
        s223:Domain-Networking,
        sh:NodeShape ;
    rdfs:label "Domain-Networking"^^xsd:string ;
    rdfs:comment "The domain Networking represents equipment used to provide information technology communication for a building."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Domain .

s223:Domain-Occupancy a s223:Class,
        s223:Domain-Occupancy,
        sh:NodeShape ;
    rdfs:label "Domain-Occupancy"^^xsd:string ;
    rdfs:comment "The domain Occupancy represents equipment used to determine if people are present in a space or count the number of people in a space."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Domain .

s223:Domain-PhysicalSecurity a s223:Class,
        s223:Domain-PhysicalSecurity,
        sh:NodeShape ;
    rdfs:label "Domain-PhysicalSecurity"^^xsd:string ;
    rdfs:comment "The domain Security represents equipment that provides physical access control within or outside a building. Example equipment that might fall within a PhysicalSecurity domain include cameras, keycard sensors, and biometric scanners."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Domain .

s223:Domain-Plumbing a s223:Class,
        s223:Domain-Plumbing,
        sh:NodeShape ;
    rdfs:label "Domain-Plumbing"^^xsd:string ;
    rdfs:comment "The domain Plumbing represents equipment used to provide domestic water within or outside a building. Example equipment that might fall within a Plumbing domain includes water meters, domestic hot water tanks, and sinks."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Domain .

s223:Domain-Refrigeration a s223:Class,
        s223:Domain-Refrigeration,
        sh:NodeShape ;
    rdfs:label "Domain-Refrigeration"^^xsd:string ;
    rdfs:comment "The domain Refrigeration represents equipment used to provide cooling for a purpose other than space conditioning in a building."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Domain .

s223:EM-Microwave a s223:Class,
        s223:EM-Microwave,
        sh:NodeShape ;
    rdfs:label "EM-Microwave"^^xsd:string ;
    rdfs:comment "`EM-Microwave`"^^xsd:string ;
    rdfs:subClassOf s223:Constituent-EM .

s223:EM-RF a s223:Class,
        s223:EM-RF,
        sh:NodeShape ;
    rdfs:label "EM-RF"^^xsd:string ;
    rdfs:comment "`EM-RF`"^^xsd:string ;
    rdfs:subClassOf s223:Constituent-EM .

s223:ElectricalPhaseIdentifier-A a s223:Class,
        s223:ElectricalPhaseIdentifier-A,
        sh:NodeShape ;
    rdfs:label "Electrical Phase Identifier A"^^xsd:string ;
    rdfs:comment "The value of the associated `Property` identifies the electrical phase A of the `Connection`."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalPhaseIdentifier .

s223:ElectricalPhaseIdentifier-AB a s223:Class,
        s223:ElectricalPhaseIdentifier-AB,
        sh:NodeShape ;
    rdfs:label "Electrical Phase Identifier AB"^^xsd:string ;
    rdfs:comment "The value of the associated `Property` identifies the electrical phase AB of the `Connection`."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalPhaseIdentifier .

s223:ElectricalPhaseIdentifier-ABC a s223:Class,
        s223:ElectricalPhaseIdentifier-ABC,
        sh:NodeShape ;
    rdfs:label "Electrical Phase Identifier ABC"^^xsd:string ;
    rdfs:comment "The value of the associated `Property` identifies the electrical phase ABC of the `Connection`."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalPhaseIdentifier .

s223:ElectricalPhaseIdentifier-B a s223:Class,
        s223:ElectricalPhaseIdentifier-B,
        sh:NodeShape ;
    rdfs:label "Electrical Phase Identifier B"^^xsd:string ;
    rdfs:comment "The value of the associated `Property` identifies the electrical phase B of the `Connection`."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalPhaseIdentifier .

s223:ElectricalPhaseIdentifier-BC a s223:Class,
        s223:ElectricalPhaseIdentifier-BC,
        sh:NodeShape ;
    rdfs:label "Electrical Phase Identifier BC"^^xsd:string ;
    rdfs:comment "The value of the associated `Property` identifies the electrical phase BC of the `Connection`."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalPhaseIdentifier .

s223:ElectricalPhaseIdentifier-C a s223:Class,
        s223:ElectricalPhaseIdentifier-C,
        sh:NodeShape ;
    rdfs:label "Electrical Phase Identifier C"^^xsd:string ;
    rdfs:comment "The value of the associated `Property` identifies the electrical phase C of the `Connection`."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalPhaseIdentifier .

s223:ElectricalPhaseIdentifier-CA a s223:Class,
        s223:ElectricalPhaseIdentifier-CA,
        sh:NodeShape ;
    rdfs:label "Electrical Phase Identifier CA"^^xsd:string ;
    rdfs:comment "The value of the associated `Property` identifies the electrical phase CA of the `Connection`."^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalPhaseIdentifier .

s223:ElectricalVoltagePhases-ABLineLineVoltage a s223:Class,
        s223:ElectricalVoltagePhases-ABLineLineVoltage,
        sh:NodeShape ;
    rdfs:label "ElectricalVoltagePhases-ABLineLineVoltage"^^xsd:string ;
    rdfs:comment "Identifies the Line-to-line voltage is between phases A and B"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalVoltagePhases .

s223:ElectricalVoltagePhases-ANLineNeutralVoltage a s223:Class,
        s223:ElectricalVoltagePhases-ANLineNeutralVoltage,
        sh:NodeShape ;
    rdfs:label "ElectricalVoltagePhases-ANLineNeutralVoltage"^^xsd:string ;
    rdfs:comment "Identifies the Line-to-neutral voltage is between phases A and N"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalVoltagePhases .

s223:ElectricalVoltagePhases-BCLineLineVoltage a s223:Class,
        s223:ElectricalVoltagePhases-BCLineLineVoltage,
        sh:NodeShape ;
    rdfs:label "ElectricalVoltagePhases-BCLineLineVoltage"^^xsd:string ;
    rdfs:comment "Identifies the Line-to-line voltage is between phases B and C"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalVoltagePhases .

s223:ElectricalVoltagePhases-BNLineNeutralVoltage a s223:Class,
        s223:ElectricalVoltagePhases-BNLineNeutralVoltage,
        sh:NodeShape ;
    rdfs:label "ElectricalVoltagePhases-BNLineNeutralVoltage"^^xsd:string ;
    rdfs:comment "Identifies the Line-to-neutral voltage is between phases B and N"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalVoltagePhases .

s223:ElectricalVoltagePhases-CALineLineVoltage a s223:Class,
        s223:ElectricalVoltagePhases-CALineLineVoltage,
        sh:NodeShape ;
    rdfs:label "ElectricalVoltagePhases-CALineLineVoltage"^^xsd:string ;
    rdfs:comment "Identifies the Line-to-line voltage is between phases C and A"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalVoltagePhases .

s223:ElectricalVoltagePhases-CNLineNeutralVoltage a s223:Class,
        s223:ElectricalVoltagePhases-CNLineNeutralVoltage,
        sh:NodeShape ;
    rdfs:label "ElectricalVoltagePhases-CNLineNeutralVoltage"^^xsd:string ;
    rdfs:comment "Identifies the Line-to-neutral voltage is between phases C and N"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ElectricalVoltagePhases .

s223:Electricity-Earth a s223:Class,
        s223:Electricity-Earth,
        sh:NodeShape ;
    rdfs:label "Electricity-Earth"^^xsd:string ;
    rdfs:comment "`Electricity-Earth`"^^xsd:string ;
    rdfs:subClassOf s223:Constituent-Electricity .

s223:Electricity-Neutral a s223:Class,
        s223:Electricity-Neutral,
        sh:NodeShape ;
    rdfs:label "Electricity-Neutral"^^xsd:string ;
    rdfs:comment "`Electricity-Neutral`"^^xsd:string ;
    rdfs:subClassOf s223:Constituent-Electricity .

s223:EnumerationKind-RunStatus a s223:Class,
        s223:EnumerationKind-RunStatus,
        sh:NodeShape ;
    rdfs:label "EnumerationKind RunStatus"^^xsd:string ;
    rdfs:comment """
: Run Status Enumerations

| Enumeration |
|:-----------|
| `RunStatus-Off` |
| `RunStatus-On` |
| `RunStatus-Unknown` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

s223:Ethernet-Cat1 a s223:Class,
        s223:Ethernet-Cat1,
        sh:NodeShape ;
    rdfs:label "Ethernet Cat1"^^xsd:string ;
    rdfs:comment "Ethernet Cat1"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-Cat2 a s223:Class,
        s223:Ethernet-Cat2,
        sh:NodeShape ;
    rdfs:label "Ethernet Cat2"^^xsd:string ;
    rdfs:comment "Ethernet Cat2"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-Cat3 a s223:Class,
        s223:Ethernet-Cat3,
        sh:NodeShape ;
    rdfs:label "Ethernet Cat3"^^xsd:string ;
    rdfs:comment "Ethernet Cat3"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-Cat4 a s223:Class,
        s223:Ethernet-Cat4,
        sh:NodeShape ;
    rdfs:label "Ethernet Cat4"^^xsd:string ;
    rdfs:comment "Ethernet Cat4"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-Cat5 a s223:Class,
        s223:Ethernet-Cat5,
        sh:NodeShape ;
    rdfs:label "Ethernet Cat5"^^xsd:string ;
    rdfs:comment "Ethernet Cat5"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-Cat5e a s223:Class,
        s223:Ethernet-Cat5e,
        sh:NodeShape ;
    rdfs:label "Ethernet Cat5e"^^xsd:string ;
    rdfs:comment "Ethernet Cat5e"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-Cat6 a s223:Class,
        s223:Ethernet-Cat6,
        sh:NodeShape ;
    rdfs:label "Ethernet Cat6"^^xsd:string ;
    rdfs:comment "Ethernet Cat6"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-Cat6a a s223:Class,
        s223:Ethernet-Cat6a,
        sh:NodeShape ;
    rdfs:label "Ethernet Cat6a"^^xsd:string ;
    rdfs:comment "Ethernet Cat6a"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-Cat7 a s223:Class,
        s223:Ethernet-Cat7,
        sh:NodeShape ;
    rdfs:label "Ethernet Cat7"^^xsd:string ;
    rdfs:comment "Ethernet Cat7"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-Cat7a a s223:Class,
        s223:Ethernet-Cat7a,
        sh:NodeShape ;
    rdfs:label "Ethernet Cat7a"^^xsd:string ;
    rdfs:comment "Ethernet Cat7a"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-Cat8 a s223:Class,
        s223:Ethernet-Cat8,
        sh:NodeShape ;
    rdfs:label "Ethernet Cat8"^^xsd:string ;
    rdfs:comment "Ethernet Cat8"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-FiberOM1 a s223:Class,
        s223:Ethernet-FiberOM1,
        sh:NodeShape ;
    rdfs:label "Ethernet FiberOM1"^^xsd:string ;
    rdfs:comment "Ethernet FiberOM1"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-FiberOM2 a s223:Class,
        s223:Ethernet-FiberOM2,
        sh:NodeShape ;
    rdfs:label "Ethernet FiberOM2"^^xsd:string ;
    rdfs:comment "Ethernet FiberOM2"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-FiberOM3 a s223:Class,
        s223:Ethernet-FiberOM3,
        sh:NodeShape ;
    rdfs:label "Ethernet FiberOM3"^^xsd:string ;
    rdfs:comment "Ethernet FiberOM3"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-FiberOM4 a s223:Class,
        s223:Ethernet-FiberOM4,
        sh:NodeShape ;
    rdfs:label "Ethernet FiberOM4"^^xsd:string ;
    rdfs:comment "Ethernet FiberOM4"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-FiberOM5 a s223:Class,
        s223:Ethernet-FiberOM5,
        sh:NodeShape ;
    rdfs:label "Ethernet FiberOM5"^^xsd:string ;
    rdfs:comment "Ethernet FiberOM5"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-FiberOS1 a s223:Class,
        s223:Ethernet-FiberOS1,
        sh:NodeShape ;
    rdfs:label "Ethernet FiberOS1"^^xsd:string ;
    rdfs:comment "Ethernet FiberOS1"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Ethernet-FiberOS2 a s223:Class,
        s223:Ethernet-FiberOS2,
        sh:NodeShape ;
    rdfs:label "Ethernet FiberOS2"^^xsd:string ;
    rdfs:comment "Ethernet FiberOS2"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Ethernet .

s223:Gas-SuperHeated a s223:Class,
        s223:Gas-SuperHeated,
        sh:NodeShape ;
    rdfs:label "Gas-Super heated"^^xsd:string ;
    rdfs:comment "Gas-Super heated"^^xsd:string ;
    rdfs:subClassOf s223:ThermodynamicPhase-Gas .

s223:GlycolSolution-15Percent a s223:Class,
        s223:GlycolSolution-15Percent,
        sh:NodeShape ;
    rdfs:label "GlycolSolution-15Percent"^^xsd:string ;
    s223:composedOf [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:hasValue 85.0 ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Glycol conc"^^xsd:string ;
            s223:hasValue 15.0 ;
            s223:ofConstituent s223:Constituent-Glycol ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:hasValue 85.0 ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Glycol conc"^^xsd:string ;
            s223:hasValue 15.0 ;
            s223:ofConstituent s223:Constituent-Glycol ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ] ;
    s223:hasFreezingPoint [ a s223:QuantifiableProperty ;
            rdfs:label "Freezing point"^^xsd:string ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Temperature> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Freezing point"^^xsd:string ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Temperature> ] ;
    rdfs:comment "`GlycolSolution-15Percent`"^^xsd:string ;
    rdfs:subClassOf s223:Water-GlycolSolution .

s223:GlycolSolution-30Percent a s223:Class,
        s223:GlycolSolution-30Percent,
        sh:NodeShape ;
    rdfs:label "GlycolSolution-30Percent"^^xsd:string ;
    s223:composedOf [ a s223:QuantifiableProperty ;
            rdfs:label "Glycol conc"^^xsd:string ;
            s223:hasValue 30.0 ;
            s223:ofConstituent s223:Constituent-Glycol ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:hasValue 70.0 ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Glycol conc"^^xsd:string ;
            s223:hasValue 30.0 ;
            s223:ofConstituent s223:Constituent-Glycol ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:hasValue 70.0 ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ] ;
    s223:hasFreezingPoint [ a s223:QuantifiableProperty ;
            rdfs:label "Freezing point"^^xsd:string ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Temperature> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Freezing point"^^xsd:string ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Temperature> ] ;
    rdfs:comment "`GlycolSolution-30Percent`"^^xsd:string ;
    rdfs:subClassOf s223:Water-GlycolSolution .

s223:HydronicHeatExchanger a s223:Class,
        sh:NodeShape ;
    rdfs:label "Hydronic heat exchanger"^^xsd:string ;
    rdfs:comment """A component intended to transfer heat from one liquid stream to another while keeping the two media separate. The
  `HydronicHeatExchanger` class does not represent the physical characteristics of a hydronic heat exchanger design. It represents only the heat
  transfer functionality."""^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `HydronicHeatExchanger` shall have at least two liquid inlets, each paired with an outlet."^^xsd:string ;
            sh:message "s223: A `HydronicHeatExchanger` shall have at least two liquid inlets, each paired with an outlet."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:OutletConnectionPoint ;
                                    sh:minCount 1 ;
                                    sh:path s223:pairedConnectionPoint ],
                                [ sh:class s223:Mix-Fluid ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `HydronicHeatExchanger` shall have no `ConnectionPoint`s using the medium Air."^^xsd:string ;
            sh:class s223:ConnectionPoint ;
            sh:message "s223: A `HydronicHeatExchanger` shall have no `ConnectionPoint`s using the medium Air."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMaxCount 0 ;
            sh:qualifiedValueShape [ sh:property [ sh:class s223:Fluid-Air ;
                            sh:path s223:hasMedium ] ] ],
        [ rdfs:comment "A `HydronicHeatExchanger` shall have at least two liquid outlets, each paired with an inlet."^^xsd:string ;
            sh:message "s223: A `HydronicHeatExchanger` shall have at least two liquid outlets, each paired with an inlet."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:InletConnectionPoint ;
                                    sh:minCount 1 ;
                                    sh:path s223:pairedConnectionPoint ],
                                [ sh:class s223:Mix-Fluid ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `HydronicHeatExchanger` shall have no `BidirectionalConnectionPoint`s."^^xsd:string ;
            sh:message "s223: A `HydronicHeatExchanger` shall have no `BidirectionalConnectionPoint`s."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                    sh:message "s223: A `HydronicHeatExchanger` shall have no `BidirectionalConnectionPoint`s."^^xsd:string ;
                    sh:qualifiedMaxCount 0 ] ] .

s223:Light-Ultraviolet a s223:Class,
        s223:Light-Ultraviolet,
        sh:NodeShape ;
    rdfs:label "Light-Ultraviolet"^^xsd:string ;
    rdfs:comment "`Light-Ultraviolet`"^^xsd:string ;
    rdfs:subClassOf s223:EM-Light .

s223:Light-Visible a s223:Class,
        s223:Light-Visible,
        sh:NodeShape ;
    rdfs:label "Light-Visible"^^xsd:string ;
    rdfs:comment "`Light-Visible`"^^xsd:string ;
    rdfs:subClassOf s223:EM-Light .

s223:Liquid-SubCooled a s223:Class,
        s223:Liquid-SubCooled,
        sh:NodeShape ;
    rdfs:label "Liquid-Sub cooled"^^xsd:string ;
    rdfs:comment "Liquid-Sub cooled"^^xsd:string ;
    rdfs:subClassOf s223:ThermodynamicPhase-Liquid .

s223:Logical-False a s223:Class,
        s223:Logical-False,
        sh:NodeShape ;
    rdfs:label "Logical False"^^xsd:string ;
    rdfs:comment "Logical False"^^xsd:string ;
    rdfs:subClassOf s223:Binary-Logical .

s223:Logical-True a s223:Class,
        s223:Logical-True,
        sh:NodeShape ;
    rdfs:label "Logical True"^^xsd:string ;
    rdfs:comment "Logical True"^^xsd:string ;
    rdfs:subClassOf s223:Binary-Logical .

s223:Modulated-0-10V a s223:Class,
        s223:Modulated-0-10V,
        sh:NodeShape ;
    rdfs:label "Modulated 0-10V"^^xsd:string ;
    rdfs:comment "Modulated 0-10V"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Modulated .

s223:Modulated-4-20mA a s223:Class,
        s223:Modulated-4-20mA,
        sh:NodeShape ;
    rdfs:label "Modulated 4-20mA"^^xsd:string ;
    rdfs:comment "Modulated 4-20mA"^^xsd:string ;
    rdfs:subClassOf s223:Signal-Modulated .

s223:Motion-False a s223:Class,
        s223:Motion-False,
        sh:NodeShape ;
    rdfs:label "Motion-False"^^xsd:string ;
    rdfs:comment "`Motion-False`"^^xsd:string ;
    rdfs:subClassOf s223:Occupancy-Motion .

s223:Motion-True a s223:Class,
        s223:Motion-True,
        sh:NodeShape ;
    rdfs:label "Motion-True"^^xsd:string ;
    rdfs:comment "`Motion-True`"^^xsd:string ;
    rdfs:subClassOf s223:Occupancy-Motion .

s223:Occupancy-Occupied a s223:Class,
        s223:Occupancy-Occupied,
        sh:NodeShape ;
    rdfs:label "Occupied"^^xsd:string ;
    rdfs:comment "Occupied"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Occupancy .

s223:Occupancy-Unoccupied a s223:Class,
        s223:Occupancy-Unoccupied,
        sh:NodeShape ;
    rdfs:label "Unoccupied"^^xsd:string ;
    rdfs:comment "Unoccupied"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Occupancy .

s223:OnOff-Off a s223:Class,
        s223:OnOff-Off,
        sh:NodeShape ;
    rdfs:label "Off"^^xsd:string ;
    rdfs:comment "Off"^^xsd:string ;
    rdfs:subClassOf s223:Binary-OnOff .

s223:OnOff-On a s223:Class,
        s223:OnOff-On,
        sh:NodeShape ;
    rdfs:label "On"^^xsd:string ;
    rdfs:comment "On"^^xsd:string ;
    rdfs:subClassOf s223:Binary-OnOff .

s223:Particulate-PM1.0 a s223:Class,
        s223:Particulate-PM1.0,
        sh:NodeShape ;
    rdfs:label "Particulate-PM1.0"^^xsd:string ;
    rdfs:comment "Particulate-PM1.0"^^xsd:string ;
    rdfs:subClassOf s223:Substance-Particulate .

s223:Particulate-PM10.0 a s223:Class,
        s223:Particulate-PM10.0,
        sh:NodeShape ;
    rdfs:label "Particulate-PM10.0"^^xsd:string ;
    rdfs:comment "Particulate-PM10.0"^^xsd:string ;
    rdfs:subClassOf s223:Substance-Particulate .

s223:Particulate-PM2.5 a s223:Class,
        s223:Particulate-PM2.5,
        sh:NodeShape ;
    rdfs:label "Particulate-PM2.5"^^xsd:string ;
    rdfs:comment "Particulate-PM2.5"^^xsd:string ;
    rdfs:subClassOf s223:Substance-Particulate .

s223:PoE-802.3af-1 a s223:Class,
        s223:PoE-802.3af-1,
        sh:NodeShape ;
    rdfs:label "PoE-802.3af-1"^^xsd:string ;
    s223:hasVoltage s223:DCPositiveVoltage-PoE ;
    rdfs:comment "PoE-802.3af-1"^^xsd:string ;
    rdfs:subClassOf s223:DC-PoE .

s223:PoE-802.3at-2 a s223:Class,
        s223:PoE-802.3at-2,
        sh:NodeShape ;
    rdfs:label "PoE-802.3at-2"^^xsd:string ;
    s223:hasVoltage s223:DCPositiveVoltage-PoE ;
    rdfs:comment "PoE-802.3at-2"^^xsd:string ;
    rdfs:subClassOf s223:DC-PoE .

s223:PoE-802.3bt-3 a s223:Class,
        s223:PoE-802.3bt-3,
        sh:NodeShape ;
    rdfs:label "PoE-802.3bt-3"^^xsd:string ;
    s223:hasVoltage s223:DCPositiveVoltage-PoE ;
    rdfs:comment "PoE-802.3bt-3"^^xsd:string ;
    rdfs:subClassOf s223:DC-PoE .

s223:PoE-802.3bt-4 a s223:Class,
        s223:PoE-802.3bt-4,
        sh:NodeShape ;
    rdfs:label "PoE-802.3bt-4"^^xsd:string ;
    s223:hasVoltage s223:DCPositiveVoltage-PoE ;
    rdfs:comment "PoE-802.3bt-4"^^xsd:string ;
    rdfs:subClassOf s223:DC-PoE .

s223:Position-Closed a s223:Class,
        s223:Position-Closed,
        sh:NodeShape ;
    rdfs:label "Closed"^^xsd:string ;
    rdfs:comment "Closed"^^xsd:string ;
    rdfs:subClassOf s223:Binary-Position .

s223:Position-Open a s223:Class,
        s223:Position-Open,
        sh:NodeShape ;
    rdfs:label "Open"^^xsd:string ;
    rdfs:comment "Open"^^xsd:string ;
    rdfs:subClassOf s223:Binary-Position .

s223:Presence-False a s223:Class,
        s223:Presence-False,
        sh:NodeShape ;
    rdfs:label "Presence-False"^^xsd:string ;
    rdfs:comment "`Presence-False`"^^xsd:string ;
    rdfs:subClassOf s223:Occupancy-Presence .

s223:Presence-True a s223:Class,
        s223:Presence-True,
        sh:NodeShape ;
    rdfs:label "Presence-True"^^xsd:string ;
    rdfs:comment "`Presence-True`"^^xsd:string ;
    rdfs:subClassOf s223:Occupancy-Presence .

s223:PressureSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Pressure sensor"^^xsd:string ;
    rdfs:comment """
A `PressureSensor` is a specialization of a `Sensor` that observes a `QuantifiableObservableProperty` that represents a pressure measurement.

There are three primary use cases for measuring pressure in building environments.

* **Absolute pressure**, essential in applications like weather stations where
  atmospheric pressure readings are required.

```
@prefix : <http://example.com/> .

:case1 a s223:PressureSensor ;
    s223:hasObservationLocation :location1 ;
    qudt:hasQuantityKind quantitykind:Pressure ;
.
```

* **Differential pressure**, where it's necessary to measure the pressure drop
  across filters in ducts or compare the pressure between different rooms and
  hallways to ensure proper airflow and contamination control.

```
@prefix : <http://example.com/> .

:case2 a s223:PressureSensor ;
    s223:hasObservationLocation :location2 ;
    s223:hasReferenceLocation :other-location ;
    qudt:hasQuantityKind quantitykind:Pressure ;
    qudt:isDeltaQuantity true ;
.
```

* **Gauge pressure**, which indicates pressure relative to atmospheric pressure.
  This is commonly used in applications such as monitoring compressed gas
  cylinders. In this scenario, a gauge reading of zero signifies that the
  measured pressure is equal to the atmospheric pressure, not a vacuum.

```
@prefix : <http://example.com/> .

:case3 a s223:PressureSensor ;
    s223:hasObservationLocation :location3 ;
    s223:hasReferenceLocation :ambient-location ;
    qudt:hasQuantityKind quantitykind:GaugePressure ;
    qudt:isDeltaQuantity true ;
.
```
"""^^xsd:string ;
    rdfs:subClassOf s223:Sensor .

s223:RadiantHeater a s223:Class,
        sh:NodeShape ;
    rdfs:label "Radiant heater"^^xsd:string ;
    rdfs:comment """A heating or cooling surface that delivers 50% or more of its heat transfer by radiation.
  A `RadiantHeater` must:
- Have the role `Role-Heating`.
- Have at least one outlet connection point using the medium `Light-Infrared`.
- Conform to exactly one of the following patterns:
  **Pattern 1:**
  - Exactly one inlet connection point using the medium `Constituent-Electricity` or `Fluid-NaturalGas`.
  **Pattern 2:**
  - Exactly one inlet connection point using the medium `Fluid-Water`.
  - Exactly one outlet connection point using the medium Fluid-Water.
  """^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A radiant heater must `hasRole` `Role-Heating`."^^xsd:string ;
            sh:message "s223: A radiant heater must `hasRole` `Role-Heating`."^^xsd:string ;
            sh:path s223:hasRole ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Role-Heating ] ],
        [ rdfs:comment "A `RadiantHeater` shall have at least one outlet connection point using the medium Infrared."^^xsd:string ;
            sh:message "s223: A `RadiantHeater` shall have at least one outlet connection point using the medium Infrared."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Light-Infrared ;
                                    sh:path s223:hasMedium ] ] ] ] ;
    sh:xone ( [ sh:property [ rdfs:comment "Pattern 1: A radiant heater shall have at least one inlet using the medium Electricity or NaturalGas."^^xsd:string ;
                        sh:message "s223: Pattern 1: A radiant heater shall have at least one inlet using the medium Electricity or NaturalGas."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                                sh:node [ sh:property [ sh:or ( [ sh:class s223:Constituent-Electricity ] [ sh:class s223:Fluid-NaturalGas ] ) ;
                                                sh:path s223:hasMedium ] ] ] ] ] [ sh:property [ rdfs:comment "Pattern 2: A radiant heater shall have an inlet of Water."^^xsd:string ;
                        sh:message "s223: Pattern 2: A radiant heater shall have an inlet of Water."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                                sh:path s223:hasMedium ] ] ] ],
                    [ rdfs:comment "Pattern 2: A radiant heater shall have an outlet of Water."^^xsd:string ;
                        sh:message "s223: Pattern 2: A radiant heater shall have an outlet of Water."^^xsd:string ;
                        sh:minCount 1 ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Fluid-Water ;
                                                sh:path s223:hasMedium ] ] ] ] ] ) .

s223:Refrigerant-R-22 a s223:Class,
        s223:Refrigerant-R-22,
        sh:NodeShape ;
    rdfs:label "Refrigerant-R-22"^^xsd:string ;
    rdfs:comment "`Refrigerant-R-22`"^^xsd:string ;
    rdfs:subClassOf s223:Fluid-Refrigerant .

s223:Refrigerant-R-410A a s223:Class,
        s223:Refrigerant-R-410A,
        sh:NodeShape ;
    rdfs:label "Refrigerant-R-410A"^^xsd:string ;
    rdfs:comment "`Refrigerant-R-410A`"^^xsd:string ;
    rdfs:subClassOf s223:Fluid-Refrigerant .

s223:Role-Condenser a s223:Class,
        s223:Role-Condenser,
        sh:NodeShape ;
    rdfs:label "Role-Condenser"^^xsd:string ;
    rdfs:comment "`Role-Condenser`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Dehumidifying a s223:Class,
        s223:Role-Dehumidifying,
        sh:NodeShape ;
    rdfs:label "Role-Dehumidifying"^^xsd:string ;
    rdfs:comment "`Role-Dehumidifying`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Discharge a s223:Class,
        s223:Role-Discharge,
        sh:NodeShape ;
    rdfs:label "Role-Discharge"^^xsd:string ;
    rdfs:comment "`Role-Discharge`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Economizer a s223:Class,
        s223:Role-Economizer,
        sh:NodeShape ;
    rdfs:label "Role-Economizer"^^xsd:string ;
    rdfs:comment "`Role-Economizer`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Evaporator a s223:Class,
        s223:Role-Evaporator,
        sh:NodeShape ;
    rdfs:label "Role-Evaporator"^^xsd:string ;
    rdfs:comment "`Role-Evaporator`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Exhaust a s223:Class,
        s223:Role-Exhaust,
        sh:NodeShape ;
    rdfs:label "Role-Exhaust"^^xsd:string ;
    rdfs:comment "`Role-Exhaust`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Expansion a s223:Class,
        s223:Role-Expansion,
        sh:NodeShape ;
    rdfs:label "Role-Expansion"^^xsd:string ;
    rdfs:comment "`Role-Expansion`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Generator a s223:Class,
        s223:Role-Generator,
        sh:NodeShape ;
    rdfs:label "Role-Generator"^^xsd:string ;
    rdfs:comment "`Role-Generator`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-HeatRecovery a s223:Class,
        s223:Role-HeatRecovery,
        sh:NodeShape ;
    rdfs:label "Heat Recovery"^^xsd:string ;
    rdfs:comment "Heat Recovery"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Load a s223:Class,
        s223:Role-Load,
        sh:NodeShape ;
    rdfs:label "Role-Load"^^xsd:string ;
    rdfs:comment "`Role-Load`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-OutdoorAirIntake a s223:Class,
        s223:Role-OutdoorAirIntake,
        sh:NodeShape ;
    rdfs:label "Role-OutdoorAirIntake"^^xsd:string ;
    rdfs:comment "`Role-OutdoorAirIntake`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role ;
    sh:property [ rdfs:comment "`Role-OutdoorAirIntake` should only be associated with a `Connectable` directly connecting to Outdoor Air."^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:severity sh:Warning ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Ensure that `Role-OutdoorAirIntake` is associated with a `Connectable` directly connecting to Outdoor Air."^^xsd:string ;
                    sh:message "{?this} is associated with {$entity}, which does not directly connect to outdoor air."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?entity
WHERE {
?entity (s223:hasRole | (s223:hasProperty/s223:hasAspect)) $this .
?outdoorSpace a/rdfs:subClassOf* s223:OutdoorPhysicalSpace .
?outdoorSpace s223:encloses ?outdoorAir  .
?outdoorAir s223:hasDomain s223:Domain-HVAC .
FILTER NOT EXISTS {?entity s223:connectedFrom ?outdoorAir} .
}
"""^^xsd:string ] ] .

s223:Role-Primary a s223:Class,
        s223:Role-Primary,
        sh:NodeShape ;
    rdfs:label "Role-Primary"^^xsd:string ;
    rdfs:comment "`Role-Primary`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Recirculating a s223:Class,
        s223:Role-Recirculating,
        sh:NodeShape ;
    rdfs:label "Role-Recirculating"^^xsd:string ;
    rdfs:comment "`Role-Recirculating`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Relief a s223:Class,
        s223:Role-Relief,
        sh:NodeShape ;
    rdfs:label "Role-Relief"^^xsd:string ;
    rdfs:comment "`Role-Relief`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Return a s223:Class,
        s223:Role-Return,
        sh:NodeShape ;
    rdfs:label "Role-Return"^^xsd:string ;
    rdfs:comment "`Role-Return`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Secondary a s223:Class,
        s223:Role-Secondary,
        sh:NodeShape ;
    rdfs:label "Role-Secondary"^^xsd:string ;
    rdfs:comment "`Role-Secondary`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Supply a s223:Class,
        s223:Role-Supply,
        sh:NodeShape ;
    rdfs:label "Role-Supply"^^xsd:string ;
    rdfs:comment "`Role-Supply`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Role-Ventilating a s223:Class,
        s223:Role-Ventilating,
        sh:NodeShape ;
    rdfs:label "Role-Ventilating"^^xsd:string ;
    rdfs:comment "`Role-Ventilating`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Signal-EIA485 a s223:Class,
        s223:Signal-EIA485,
        sh:NodeShape ;
    rdfs:label "Signal EIA485"^^xsd:string ;
    rdfs:comment "Signal EIA485"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-Signal .

s223:Signal-IEC14908 a s223:Class,
        s223:Signal-IEC14908,
        sh:NodeShape ;
    rdfs:label "Signal IEC14908"^^xsd:string ;
    rdfs:comment "Signal IEC14908"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-Signal .

s223:Signal-USB a s223:Class,
        s223:Signal-USB,
        sh:NodeShape ;
    rdfs:label "Signal USB"^^xsd:string ;
    rdfs:comment "Signal USB"^^xsd:string ;
    rdfs:subClassOf s223:Electricity-Signal .

s223:Substance-Soot a s223:Class,
        s223:Substance-Soot,
        sh:NodeShape ;
    rdfs:label "Substance-Soot"^^xsd:string ;
    rdfs:comment "`Substance-Soot`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Substance .

s223:System a s223:Class,
        sh:NodeShape ;
    rdfs:label "System"^^xsd:string ;
    rdfs:comment "A `System` is a logical grouping of one or more `Equipment`  or other Systems for some functional purpose."^^xsd:string ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ rdfs:comment "If the relation `hasRole` is present, it must associate the `System` with an `EnumerationKind-Role`."^^xsd:string ;
            sh:class s223:EnumerationKind-Role ;
            sh:message "s223: If the relation `hasRole` is present, it must associate the `System` with an `EnumerationKind-Role`."^^xsd:string ;
            sh:path s223:hasRole ],
        [ rdfs:comment "A `System` may be defined with a number of connection points that are the \"boundary\" of the equipment. The `hasOptionalConnectionPoint` relation is used to reference those connection points of its equipment that may not be `connected`, the \"dangling connection point\" should not generate a validation error."^^xsd:string ;
            sh:class s223:ConnectionPoint ;
            sh:message "s223: A `System` may be defined with a number of connection points that are the \"boundary\" of the equipment. The `hasOptionalConnectionPoint` relation is used to reference those connection points of its equipment that may not be connected, the \"dangling connection point\" should not generate a validation error."^^xsd:string ;
            sh:path s223:hasOptionalConnectionPoint ],
        [ rdfs:comment "A `System` may be defined with a number of connection points that are the \"boundary\" of the equipment. The `hasBoundaryConnectionPoint` relation is used to reference those connection points of its equipment that must be `connected`, but in the context of validating the a model with the system by itself, the \"dangling connection point\" should not generate a validation error."^^xsd:string ;
            sh:class s223:ConnectionPoint ;
            sh:message "s223: A `System` may be defined with a number of connection points that are the \"boundary\" of the equipment. The `hasBoundaryConnectionPoint` relation is used to reference those connection points of its equipment that must be `connected`, but in the context of validating the a model with the system by itself, the \"dangling connection point\" should not generate a validation error."^^xsd:string ;
            sh:path s223:hasBoundaryConnectionPoint ],
        [ a sh:PropertyShape ;
            rdfs:comment "A `System` should be associated with at least one instance of `Equipment` or `System` using the relation `hasMember`."^^xsd:string ;
            sh:message "s223: A `System` must be associated with at least one instance of `Equipment` or `System` using the relation `hasMember`."^^xsd:string ;
            sh:minCount 1 ;
            sh:or ( [ sh:class s223:Equipment ] [ sh:class s223:System ] ) ;
            sh:path s223:hasMember ;
            sh:severity sh:Warning ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Infer the `hasBoundaryConnectionPoint` relation using `hasOptionalConnectionPoint`."^^xsd:string ;
            sh:name "InferredSystemToBoundaryConnectionPointFromOptional"^^xsd:string ;
            sh:object [ sh:path s223:hasOptionalConnectionPoint ] ;
            sh:predicate s223:hasBoundaryConnectionPoint ;
            sh:subject sh:this ] ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Ensure that the Boundary CPs of a `System` belong to only members of that `System`"^^xsd:string ;
            sh:message "s223: `System` {$this} `hasBoundaryConnectionPoint` {?cp}, belonging to {?con} that is not a member of {?this}."^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
SELECT $this ?cp ?con
WHERE {
$this s223:hasBoundaryConnectionPoint ?cp .
?cp s223:isConnectionPointOf ?con .
FILTER NOT EXISTS {$this s223:hasMember+ ?con}
}
"""^^xsd:string ] .

s223:ThermodynamicPhase-Solid a s223:Class,
        s223:ThermodynamicPhase-Solid,
        sh:NodeShape ;
    rdfs:label "ThermodynamicPhase-Solid"^^xsd:string ;
    rdfs:comment "`ThermodynamicPhase-Solid`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ThermodynamicPhase .

s223:ThermodynamicPhase-Vapor a s223:Class,
        s223:ThermodynamicPhase-Vapor,
        sh:NodeShape ;
    rdfs:label "ThermodynamicPhase-Vapor"^^xsd:string ;
    rdfs:comment "`ThermodynamicPhase-Vapor`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ThermodynamicPhase .

s223:Water-ChilledWater a s223:Class,
        s223:Water-ChilledWater,
        sh:NodeShape ;
    rdfs:label "Water-Chilled water"^^xsd:string ;
    s223:composedOf [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ] ;
    rdfs:comment "Water-Chilled water"^^xsd:string ;
    rdfs:subClassOf s223:Fluid-Water .

s223:Water-HotWater a s223:Class,
        s223:Water-HotWater,
        sh:NodeShape ;
    rdfs:label "Water-Hot water"^^xsd:string ;
    s223:composedOf [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ] ;
    rdfs:comment "Water-Hot water"^^xsd:string ;
    rdfs:subClassOf s223:Fluid-Water .

s223:Water-Steam a s223:Class,
        s223:Water-Steam,
        sh:NodeShape ;
    rdfs:label "Steam"^^xsd:string ;
    s223:composedOf [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ] ;
    rdfs:comment "Steam"^^xsd:string ;
    rdfs:subClassOf s223:Fluid-Water .

s223:Weekday-Friday a s223:Class,
        s223:Weekday-Friday,
        sh:NodeShape ;
    rdfs:label "Friday"^^xsd:string ;
    rdfs:comment "Friday"^^xsd:string ;
    rdfs:subClassOf s223:DayOfWeek-Weekday .

s223:Weekday-Monday a s223:Class,
        s223:Weekday-Monday,
        sh:NodeShape ;
    rdfs:label "Monday"^^xsd:string ;
    rdfs:comment "Monday"^^xsd:string ;
    rdfs:subClassOf s223:DayOfWeek-Weekday .

s223:Weekday-Thursday a s223:Class,
        s223:Weekday-Thursday,
        sh:NodeShape ;
    rdfs:label "Thursday"^^xsd:string ;
    rdfs:comment "Thursday"^^xsd:string ;
    rdfs:subClassOf s223:DayOfWeek-Weekday .

s223:Weekday-Tuesday a s223:Class,
        s223:Weekday-Tuesday,
        sh:NodeShape ;
    rdfs:label "Tuesday"^^xsd:string ;
    rdfs:comment "Tuesday"^^xsd:string ;
    rdfs:subClassOf s223:DayOfWeek-Weekday .

s223:Weekday-Wednesday a s223:Class,
        s223:Weekday-Wednesday,
        sh:NodeShape ;
    rdfs:label "Wednesday"^^xsd:string ;
    rdfs:comment "Wednesday"^^xsd:string ;
    rdfs:subClassOf s223:DayOfWeek-Weekday .

s223:Weekend-Saturday a s223:Class,
        s223:Weekend-Saturday,
        sh:NodeShape ;
    rdfs:label "Saturday"^^xsd:string ;
    rdfs:comment "Saturday"^^xsd:string ;
    rdfs:subClassOf s223:DayOfWeek-Weekend .

s223:Weekend-Sunday a s223:Class,
        s223:Weekend-Sunday,
        sh:NodeShape ;
    rdfs:label "Sunday"^^xsd:string ;
    rdfs:comment "Sunday"^^xsd:string ;
    rdfs:subClassOf s223:DayOfWeek-Weekend .

s223:Window a s223:Class,
        sh:NodeShape ;
    rdfs:label "Window"^^xsd:string ;
    rdfs:comment "A daylight opening on a vertical or nearly vertical area of a room envelope."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Window` shall have at least one inlet using the medium Light."^^xsd:string ;
            sh:message "s223: A `Window` shall have at least one inlet using the medium Light."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:EM-Light ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `Window` shall have at least one outlet using the medium Light."^^xsd:string ;
            sh:message "s223: A `Window` shall have at least one outlet using the medium Light."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:EM-Light ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:abstract a rdf:Property ;
    rdfs:label "abstract"^^xsd:string ;
    rdfs:comment """If the relation `abstract` has a value of `true`, any instance of the associated class must also be 
  an instance of a subclass of that class where the relation `abstract` does not have a value of `true`. """^^xsd:string ;
    rdfs:range xsd:boolean .

s223:actuates a rdf:Property ;
    rdfs:label "actuates"^^xsd:string ;
    rdfs:comment "The relation `actuates` binds an `Actuator` to the `Equipment` that it actuates."^^xsd:string .

s223:connectsFrom a rdf:Property ;
    rdfs:label "connects from"^^xsd:string ;
    rdfs:comment "The relation `connectsFrom` binds a `Connectable` thing to a `Connection` with an implied directionality. B `connectsFrom` A indicates a flow from A to B."^^xsd:string .

s223:connectsTo a rdf:Property ;
    rdfs:label "connects to"^^xsd:string ;
    rdfs:comment "The relation `connectsTo` binds a `Connection` to a `Connectable` thing with an implied directionality. A `connectsTo` B indicates a flow from A to B."^^xsd:string .

s223:hasDeadband a rdf:Property ;
    rdfs:label "has deadband"^^xsd:string ;
    rdfs:comment "This relation binds a control setpoint to the `QuantifiableProperty` indicating the range of values within which a sensed variable can vary without indictating a condition has changed."^^xsd:string .

s223:hasExternalReference a rdf:Property ;
    rdfs:label "has external reference"^^xsd:string ;
    rdfs:comment "The relation `hasExternalReference` is used to relate a `Property` to an external telemetry source."^^xsd:string .

s223:hasMeasurementResolution a rdf:Property ;
    rdfs:label "has measurement resolution"^^xsd:string ;
    rdfs:comment "The `hasMeasurementResolution` relation is used to link to a numerical `Property` whose value indicates the smallest recognizable change in engineering units that the sensor is able to indicate. "^^xsd:string .

s223:hasMember a rdf:Property ;
    rdfs:label "has member"^^xsd:string ;
    rdfs:comment "The relation `hasMember` is used to associate a `System` with its component `Equipment` and/or Systems."^^xsd:string .

s223:hasNumberOfElectricalPhases a rdf:Property ;
    rdfs:label "has number of electrical phases"^^xsd:string ;
    rdfs:comment "The relation `hasNumberOfElectricalPhases` is used to identify the number of electrical phases in an AC electricity enumeration kind. "^^xsd:string .

s223:hasPhysicalLocation a rdf:Property ;
    rdfs:label "has Physical Location"^^xsd:string ;
    rdfs:comment "The relation `hasPhysicalLocation` is used to indicate the `PhysicalSpace` (see {s223:PhysicalSpace}) where a piece of `Equipment` (see {s223:Equipment}) is located. The physical location of a piece of equipment is not necessarily the same as the location affected by the operation of the equipment. For example, an air handler may physically be on the roof, but its effect is to provide conditioned air to a `Zone` or `DomainSpace` within the building. By following the path of connections, it can be determined what other equipment or spaces are possibly impacted by the equipment."^^xsd:string .

s223:hasThreshold a rdf:Property ;
    rdfs:label "has threshold"^^xsd:string ;
    rdfs:comment "This relation binds a threshold to the `QuantifiableProperty` indicating a specific value at which an action may be taken, distinguished from an offset or a range."^^xsd:string .

s223:ofMedium a rdf:Property ;
    rdfs:label "of medium"^^xsd:string ;
    rdfs:comment "The relation `ofMedium` is used to associate a `Property` with the specific Medium it describes. A `Property` corresponding to the temperature of a medium would be associated with this medium using the relation `ofMedium`."^^xsd:string .

<pub:ControlParameters> rdfs:label "EnumerationKind Aspect"^^xsd:string ;
    ns2:title "Control Parameters"^^xsd:string ;
    rdfs:comment """

These aspects are used on properties that define the limits for control and 
alarm algorithms. These aspects are used on properties of type `QuantifiableActuatableProperty`.

: Aspect Control Parameters Enumerations

| Enumeration | Description |
|:-----------|:-------------|
| `Aspect-Deadband` | {s223:Aspect-Deadband/rdfs:comment} |
| `Aspect-HighLimit` | {s223:Aspect-HighLimit/rdfs:comment} |
| `Aspect-LowLimit` | {s223:Aspect-LowLimit/rdfs:comment} |
| `Aspect-Setpoint` | {s223:Aspect-Setpoint/rdfs:comment} |
| `Aspect-Threshold` | {s223:Aspect-Threshold/rdfs:comment} |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

<pub:DeltaQuantities> rdfs:label "EnumerationKind Aspect"^^xsd:string ;
    ns2:title "Delta Quantities"^^xsd:string ;
    rdfs:comment """

These aspects are used on properties to modify the quantity kind. These 
aspects are used on properties of type `QuantifiableProperty` and subtypes thereof.

: Aspect Delta Enumerations

| Enumeration | Description |
|:-----------|:-------------|
| `Aspect-Delta` | {s223:Aspect-Delta/rdfs:comment} |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

<pub:EquipmentInformation> rdfs:label "EnumerationKind Aspect"^^xsd:string ;
    ns2:title "Equipment Information"^^xsd:string ;
    rdfs:comment """

These aspects are used on properties that provide static information about a System, 
Equipment, etc.. These aspects are typically used on properties of type `Property`. 
The property value is usually stored as a string.

: Aspect Equipment Information Enumerations

| Enumeration | Description |
|:-----------|:-------------|
| `Aspect-CatalogNumber` | {s223:Aspect-CatalogNumber/rdfs:comment} |
| `Aspect-Manufacturer` | {s223:Aspect-Manufacturer/rdfs:comment} |
| `Aspect-SerialNumber` | {s223:Aspect-SerialNumber/rdfs:comment} |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

<pub:EquipmentOperation> rdfs:label "EnumerationKind Aspect"^^xsd:string ;
    ns2:title "Equipment Operation"^^xsd:string ;
    rdfs:comment """

These aspects are used on properties that provide status information about a System, 
Equipment, etc.. These aspects are typically used on properties of type 
`EnumeratedProperty` and subtypes thereof.

: Aspect Equipment Operation Enumerations

| Enumeration | Description |
|:-----------|:-------------|
| `Aspect-Alarm` | {s223:Aspect-Alarm/rdfs:comment} |
| `Aspect-Fault` | {s223:Aspect-Fault/rdfs:comment} |
| `Aspect-OperatingMode` | {s223:Aspect-OperatingMode/rdfs:comment} |
| `Aspect-OperatingStatus` | {s223:Aspect-OperatingStatus/rdfs:comment} |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

<pub:OperationalLimits> rdfs:label "EnumerationKind Aspect"^^xsd:string ;
    ns2:title "Operational Limits"^^xsd:string ;
    rdfs:comment """

These aspects are used on properties that define the range of another property. 
These aspects are used on properties of type `QuantifiableObservableProperty`.

: Aspect Operational Limits Enumerations

| Enumeration | Description |
|:-----------|:-------------|
| `Aspect-Maximum` | {s223:Aspect-Maximum/rdfs:comment} |
| `Aspect-Minimum` | {s223:Aspect-Minimum/rdfs:comment} |
| `Aspect-Nominal` | {s223:Aspect-Nominal/rdfs:comment} |
| `Aspect-Rated` | {s223:Aspect-Rated/rdfs:comment} |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

s223:Constituent-CO2 a s223:Class,
        s223:Constituent-CO2,
        sh:NodeShape ;
    rdfs:label "Constituent-CO2"^^xsd:string ;
    rdfs:comment "`Constituent-CO2`"^^xsd:string ;
    rdfs:subClassOf s223:Medium-Constituent .

s223:CoolingCoil a s223:Class,
        sh:NodeShape ;
    rdfs:label "Cooling coil"^^xsd:string ;
    rdfs:comment "A subclass of `Coil` that is specifically used for coolinig air. "^^xsd:string ;
    rdfs:subClassOf s223:Coil ;
    sh:property [ rdfs:comment "A cooling coil must be related to the role '`Role-Cooling`' using the relation '`hasRole`'."^^xsd:string ;
            sh:hasValue s223:Role-Cooling ;
            sh:message "s223: A cooling coil must be related to the role '`Role-Cooling`' using the relation '`hasRole`'."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasRole ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Cooling coils must always have the role `Role-Cooling`"^^xsd:string ;
            sh:object s223:Role-Cooling ;
            sh:predicate s223:hasRole ;
            sh:subject sh:this ] .

s223:DCNegativeVoltage-190.0V a s223:Class,
        s223:DCNegativeVoltage-190.0V,
        sh:NodeShape ;
    rdfs:label "DCNegativeVoltage-190.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-190V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCNegativeVoltage-190.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCNegativeVoltage .

s223:DCNegativeVoltage-2.5V a s223:Class,
        s223:DCNegativeVoltage-2.5V,
        sh:NodeShape ;
    rdfs:label "DCNegativeVoltage-2.5V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-2V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCNegativeVoltage-2.5V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCNegativeVoltage .

s223:DCNegativeVoltage-3.0V a s223:Class,
        s223:DCNegativeVoltage-3.0V,
        sh:NodeShape ;
    rdfs:label "DCNegativeVoltage-3.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-3V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCNegativeVoltage-3.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCNegativeVoltage .

s223:DCNegativeVoltage-380.0V a s223:Class,
        s223:DCNegativeVoltage-380.0V,
        sh:NodeShape ;
    rdfs:label "DCNegativeVoltage-380.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-380V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCNegativeVoltage-380.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCNegativeVoltage .

s223:DCNegativeVoltage-48.0V a s223:Class,
        s223:DCNegativeVoltage-48.0V,
        sh:NodeShape ;
    rdfs:label "DCNegativeVoltage-48.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-48V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCNegativeVoltage-48.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCNegativeVoltage .

s223:DCNegativeVoltage-5.0V a s223:Class,
        s223:DCNegativeVoltage-5.0V,
        sh:NodeShape ;
    rdfs:label "DCNegativeVoltage-5.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-5V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCNegativeVoltage-5.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCNegativeVoltage .

s223:DCPositiveVoltage-190.0V a s223:Class,
        s223:DCPositiveVoltage-190.0V,
        sh:NodeShape ;
    rdfs:label "DCPositiveVoltage-190.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-190V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCPositiveVoltage-190.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCPositiveVoltage .

s223:DCPositiveVoltage-2.5V a s223:Class,
        s223:DCPositiveVoltage-2.5V,
        sh:NodeShape ;
    rdfs:label "DCPositiveVoltage-2.5V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-2V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCPositiveVoltage-2.5V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCPositiveVoltage .

s223:DCPositiveVoltage-3.0V a s223:Class,
        s223:DCPositiveVoltage-3.0V,
        sh:NodeShape ;
    rdfs:label "DCPositiveVoltage-3.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-3V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCPositiveVoltage-3.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCPositiveVoltage .

s223:DCPositiveVoltage-380.0V a s223:Class,
        s223:DCPositiveVoltage-380.0V,
        sh:NodeShape ;
    rdfs:label "DCPositiveVoltage-380.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-380V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCPositiveVoltage-380.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCPositiveVoltage .

s223:DCPositiveVoltage-48.0V a s223:Class,
        s223:DCPositiveVoltage-48.0V,
        sh:NodeShape ;
    rdfs:label "DCPositiveVoltage-48.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-48V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCPositiveVoltage-48.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCPositiveVoltage .

s223:DCPositiveVoltage-5.0V a s223:Class,
        s223:DCPositiveVoltage-5.0V,
        sh:NodeShape ;
    rdfs:label "DCPositiveVoltage-5.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-5V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCPositiveVoltage-5.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCPositiveVoltage .

s223:DomainSpace a s223:Class,
        sh:NodeShape ;
    rdfs:label "Domain Space"^^xsd:string ;
    rdfs:comment "A `DomainSpace` represents some portion of a `PhysicalSpace` that is affected by a building service associated with a Domain. DomainSpaces may represent an entire `PhysicalSpace` or any portion of a `PhysicalSpace`. Multiple DomainSpaces of the same Domain may overlap, and DomainSpaces of different Domains may also overlap. DomainSpaces may be grouped into Zones using the relation `hasDomainSpace` (see {s223:hasDomainSpace})."^^xsd:string ;
    rdfs:subClassOf s223:Connectable ;
    sh:property [ rdfs:comment "A `DomainSpace` must be enclosed by a `PhysicalSpace`."^^xsd:string ;
            sh:message "s223: A `DomainSpace` must be enclosed by a `PhysicalSpace`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path [ sh:inversePath s223:encloses ] ;
            sh:severity sh:Info ],
        [ rdfs:comment "A `DomainSpace` must be associated with exactly one `EnumerationKind-Domain` using the relation `hasDomain`."^^xsd:string ;
            sh:class s223:EnumerationKind-Domain ;
            sh:maxCount 1 ;
            sh:message "s223: A `DomainSpace` must be associated with exactly one `EnumerationKind-Domain` using the relation `hasDomain`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasDomain ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Infer a `hasDomain` relation by checking any enclosing `Zone` to determine the domain."^^xsd:string ;
            sh:object [ sh:path ( [ sh:inversePath s223:hasDomainSpace ] s223:hasDomain ) ] ;
            sh:predicate s223:hasDomain ;
            sh:subject sh:this ] .

s223:EnumerableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Enumerable Property"^^xsd:string ;
    rdfs:comment "An `EnumerableProperty` is a `Property` with an enumerated (fixed) set of possible values."^^xsd:string ;
    rdfs:subClassOf s223:Property ;
    sh:property [ rdfs:comment "An `EnumerableProperty` must be associated with exactly one `EnumerationKind` using the relation `hasEnumerationKind`."^^xsd:string ;
            sh:class s223:EnumerationKind ;
            sh:maxCount 1 ;
            sh:message "s223: An `EnumerableProperty` must be associated with exactly one `EnumerationKind` using the relation `hasEnumerationKind`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasEnumerationKind ],
        [ rdfs:comment "Checks for valid enumeration value consistent with the stated `EnumerationKind`."^^xsd:string ;
            sh:path s223:hasValue ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Checks for valid enumeration value consistent with the stated `EnumerationKind`."^^xsd:string ;
                    sh:message "s223: {$this} has an enumeration value of {?value} which is not a valid {?kind}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?value ?kind
WHERE {
$this s223:hasValue ?value .
$this s223:hasEnumerationKind ?kind .
FILTER (NOT EXISTS {?value a/rdfs:subClassOf* ?kind}) .
}
"""^^xsd:string ] ] .

s223:ExternalReference a s223:Class,
        sh:NodeShape ;
    rdfs:label "ExternalReference"^^xsd:string ;
    s223:abstract true ;
    rdfs:comment "`ExternalReference` is an abstract class that represents a thing that contains API or protocol parameter values necessary to associate a `Property` with a value."^^xsd:string ;
    rdfs:subClassOf s223:Concept .

s223:Fluid-NaturalGas a s223:Class,
        s223:Fluid-NaturalGas,
        sh:NodeShape ;
    rdfs:label "Fluid-NaturalGas"^^xsd:string ;
    rdfs:comment "This class has enumerated subclasses of natural gas in various states."^^xsd:string ;
    rdfs:subClassOf s223:Mix-Fluid .

s223:HeatingCoil a s223:Class,
        sh:NodeShape ;
    rdfs:label "Heating coil"^^xsd:string ;
    rdfs:comment "A subclass of `Coil` that is used specifically for heating air. "^^xsd:string ;
    rdfs:subClassOf s223:Coil ;
    sh:property [ rdfs:comment "A heating coil must be related to the role '`Role-Heating`' using the relation '`hasRole`'."^^xsd:string ;
            sh:hasValue s223:Role-Heating ;
            sh:message "s223: A heating coil must be related to the role '`Role-Heating`' using the relation '`hasRole`'."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasRole ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Heating coils must always have the role `Role-Heating`"^^xsd:string ;
            sh:object s223:Role-Heating ;
            sh:predicate s223:hasRole ;
            sh:subject sh:this ] .

s223:Light-Infrared a s223:Class,
        s223:Light-Infrared,
        sh:NodeShape ;
    rdfs:label "Light-Infrared"^^xsd:string ;
    rdfs:comment "`Light-Infrared`"^^xsd:string ;
    rdfs:subClassOf s223:EM-Light .

s223:PowerAndSignal-PoE a s223:Class,
        s223:PowerAndSignal-PoE,
        sh:NodeShape ;
    rdfs:label "Power over Ethernet"^^xsd:string ;
    s223:composedOf [ a s223:Property ;
            rdfs:label "Unspecified"^^xsd:string ;
            s223:ofConstituent s223:Signal-Ethernet ],
        [ a s223:Property ;
            rdfs:label "Unspecified"^^xsd:string ;
            s223:ofConstituent s223:DC-PoE ] ;
    rdfs:comment "This class has enumerated subclasses of Power over Ethernet."^^xsd:string ;
    rdfs:subClassOf s223:Mix-PowerAndSignal ;
    sh:property [ rdfs:comment "One of the constituents of PoE must be PoE electrical power."^^xsd:string ;
            sh:path s223:composedOf ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Property ;
                    sh:node [ sh:property [ rdfs:comment "One of the constituents of PoE must be PoE electrical power."^^xsd:string ;
                                    sh:class s223:DC-PoE ;
                                    sh:path s223:ofConstituent ] ] ] ],
        [ rdfs:comment "There must be at least two Properties that characterize the constituents of Power over Ethernet."^^xsd:string ;
            sh:class s223:Property ;
            sh:minCount 2 ;
            sh:path s223:composedOf ],
        [ rdfs:comment "One of the constituents of PoE must be Ethernet."^^xsd:string ;
            sh:path s223:composedOf ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Property ;
                    sh:node [ sh:property [ rdfs:comment "One of the constituents of PoE must be Ethernet."^^xsd:string ;
                                    sh:class s223:Signal-Ethernet ;
                                    sh:path s223:ofConstituent ] ] ] ] .

s223:Radiator a s223:Class,
        sh:NodeShape ;
    rdfs:label "Radiator"^^xsd:string ;
    rdfs:comment """A radiator provides primarily convective heating to a room using electricity, steam or water 
  (e.g., electric baseboard heaters, heated floors, or traditional radiators)."""^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Radiator` shall have at least one bidirectional connection point using the medium Air."^^xsd:string ;
            sh:message "s223: A `Radiator` shall have at least one bidirectional connection point using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "Radiators must have the role `Role-Heating`."^^xsd:string ;
            sh:message "s223: Radiators must have the role `Role-Heating`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasRole ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Role-Heating ] ] .

s223:Role-HeatTransfer a s223:Class,
        s223:Role-HeatTransfer,
        sh:NodeShape ;
    rdfs:label "Heat Transfer"^^xsd:string ;
    rdfs:comment "Heat Transfer"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Voltage-0V a s223:Class,
        s223:Voltage-0V,
        sh:NodeShape ;
    rdfs:label "0V Voltage"^^xsd:string ;
    s223:hasValue 0.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "0V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-10000V a s223:Class,
        s223:Voltage-10000V,
        sh:NodeShape ;
    rdfs:label "10000V Voltage"^^xsd:string ;
    s223:hasValue 10000.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "10000V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-110V a s223:Class,
        s223:Voltage-110V,
        sh:NodeShape ;
    rdfs:label "110V Voltage"^^xsd:string ;
    s223:hasValue 110.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "110V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-120V a s223:Class,
        s223:Voltage-120V,
        sh:NodeShape ;
    rdfs:label "120V Voltage"^^xsd:string ;
    s223:hasValue 120.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "120V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-127V a s223:Class,
        s223:Voltage-127V,
        sh:NodeShape ;
    rdfs:label "127V Voltage"^^xsd:string ;
    s223:hasValue 127.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "127V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-139V a s223:Class,
        s223:Voltage-139V,
        sh:NodeShape ;
    rdfs:label "139V Voltage"^^xsd:string ;
    s223:hasValue 139.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "139V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-1730V a s223:Class,
        s223:Voltage-1730V,
        sh:NodeShape ;
    rdfs:label "1730V Voltage"^^xsd:string ;
    s223:hasValue 1730.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "1730V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-1900V a s223:Class,
        s223:Voltage-1900V,
        sh:NodeShape ;
    rdfs:label "1900V Voltage"^^xsd:string ;
    s223:hasValue 1900.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "1900V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-219V a s223:Class,
        s223:Voltage-219V,
        sh:NodeShape ;
    rdfs:label "219V Voltage"^^xsd:string ;
    s223:hasValue 219.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "219V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-220V a s223:Class,
        s223:Voltage-220V,
        sh:NodeShape ;
    rdfs:label "220V Voltage"^^xsd:string ;
    s223:hasValue 220.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "220V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-231V a s223:Class,
        s223:Voltage-231V,
        sh:NodeShape ;
    rdfs:label "231V Voltage"^^xsd:string ;
    s223:hasValue 231.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "231V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-2400V a s223:Class,
        s223:Voltage-2400V,
        sh:NodeShape ;
    rdfs:label "2400V Voltage"^^xsd:string ;
    s223:hasValue 2400.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "2400V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-277V a s223:Class,
        s223:Voltage-277V,
        sh:NodeShape ;
    rdfs:label "277V Voltage"^^xsd:string ;
    s223:hasValue 277.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "277V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-3000V a s223:Class,
        s223:Voltage-3000V,
        sh:NodeShape ;
    rdfs:label "3000V Voltage"^^xsd:string ;
    s223:hasValue 3000.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "3000V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-3300V a s223:Class,
        s223:Voltage-3300V,
        sh:NodeShape ;
    rdfs:label "3300V Voltage"^^xsd:string ;
    s223:hasValue 3300.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "3300V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-3460V a s223:Class,
        s223:Voltage-3460V,
        sh:NodeShape ;
    rdfs:label "3460V Voltage"^^xsd:string ;
    s223:hasValue 3460.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "3460V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-347V a s223:Class,
        s223:Voltage-347V,
        sh:NodeShape ;
    rdfs:label "347V Voltage"^^xsd:string ;
    s223:hasValue 347.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "347V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-3810V a s223:Class,
        s223:Voltage-3810V,
        sh:NodeShape ;
    rdfs:label "3810V Voltage"^^xsd:string ;
    s223:hasValue 3810.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "3810V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-400V a s223:Class,
        s223:Voltage-400V,
        sh:NodeShape ;
    rdfs:label "400V Voltage"^^xsd:string ;
    s223:hasValue 400.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "400V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-415V a s223:Class,
        s223:Voltage-415V,
        sh:NodeShape ;
    rdfs:label "415V Voltage"^^xsd:string ;
    s223:hasValue 415.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "415V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-4160V a s223:Class,
        s223:Voltage-4160V,
        sh:NodeShape ;
    rdfs:label "4160V Voltage"^^xsd:string ;
    s223:hasValue 4160.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "4160V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-480V a s223:Class,
        s223:Voltage-480V,
        sh:NodeShape ;
    rdfs:label "480V Voltage"^^xsd:string ;
    s223:hasValue 480.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "480V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-5770V a s223:Class,
        s223:Voltage-5770V,
        sh:NodeShape ;
    rdfs:label "5770V Voltage"^^xsd:string ;
    s223:hasValue 5770.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "5770V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-6000V a s223:Class,
        s223:Voltage-6000V,
        sh:NodeShape ;
    rdfs:label "6000V Voltage"^^xsd:string ;
    s223:hasValue 6000.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "6000V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-600V a s223:Class,
        s223:Voltage-600V,
        sh:NodeShape ;
    rdfs:label "600V Voltage"^^xsd:string ;
    s223:hasValue 600.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "600V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-6600V a s223:Class,
        s223:Voltage-6600V,
        sh:NodeShape ;
    rdfs:label "6600V Voltage"^^xsd:string ;
    s223:hasValue 6600.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "6600V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-PoE a s223:Class,
        s223:Voltage-PoE,
        sh:NodeShape ;
    rdfs:label "PoE Voltage"^^xsd:string ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "PoE Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:ZoneGroup a s223:Class,
        sh:NodeShape ;
    rdfs:label "Zone group"^^xsd:string ;
    rdfs:comment "A `ZoneGroup` is a logical grouping of one or more Zones (e.g., to define a supervisory building control strategy that overrides one or more system controls)."^^xsd:string ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ rdfs:comment "A `ZoneGroup` must be associated with at least one `Zone` using the relation `hasZone`."^^xsd:string ;
            sh:class s223:Zone ;
            sh:message "s223: A `ZoneGroup` must be associated with at least one `Zone` using the relation `hasZone`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasZone ],
        [ rdfs:comment "A `ZoneGroup` must be associated with exactly one `EnumerationKind-Domain` using the relation `hasDomain`."^^xsd:string ;
            sh:class s223:EnumerationKind-Domain ;
            sh:maxCount 1 ;
            sh:message "s223: A `ZoneGroup` must be associated with exactly one `EnumerationKind-Domain` using the relation `hasDomain`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasDomain ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Infer a `hasDomain` relation by checking any enclosed Zones to determine the domain."^^xsd:string ;
            sh:object [ sh:path ( s223:hasZone s223:hasDomain ) ] ;
            sh:predicate s223:hasDomain ;
            sh:subject sh:this ] .

s223:connectedThrough a rdf:Property ;
    rdfs:label "connected through"^^xsd:string ;
    rdfs:comment "The relation `connectedThrough` is used to associate a `Connectable` thing with a `Connection` without regard to the direction of flow. It is used to discover what connection links two connectable things."^^xsd:string .

s223:encloses a rdf:Property ;
    rdfs:label "encloses"^^xsd:string ;
    rdfs:comment "The relation `encloses` is used to associate a `PhysicalSpace` with its DomainSpaces. "^^xsd:string .

s223:executes a rdf:Property ;
    rdfs:label "executes"^^xsd:string ;
    rdfs:comment "The relation `executes` is used to specify that a `Controller` (see {s223:Controller}) is responsible for the execution of a `Function` (see {s223:Function}). "^^xsd:string .

s223:hasBoundaryConnectionPoint a rdf:Property ;
    rdfs:label "has Boundary Connection Point"^^xsd:string ;
    rdfs:comment "The `hasBoundaryConnectionPoint` relation means the `ConnectionPoint` represents the boundary of a `System` (see {s223:System}) defined by the modeler, such as a model fragment provided by the vendor of a collection of equipment intended for integration with another model. The presence of this relation is used to indicate that such a \"dangling connection point\" should not generate a validation error in a non-integrated context but should generate an error in a integrated context."^^xsd:string .

s223:hasFreezingPoint a rdf:Property ;
    rdfs:label "has freezing point"^^xsd:string ;
    rdfs:comment "The relation `hasFreezingPoint` is used to associate a freezing point with a glycol solution, but could be used with other Mediums as appropriate. "^^xsd:string .

s223:hasFrequency a rdf:Property ;
    rdfs:label "has frequency"^^xsd:string ;
    rdfs:comment "The relation `hasFrequency` is used to identify the frequency of an AC electricity enumeration kind. "^^xsd:string .

s223:hasInput a rdf:Property ;
    rdfs:label "has input"^^xsd:string ;
    rdfs:comment "The relation `hasInput` is used to relate a `Function` (see {s223:Function}) to a `Property` (see {s223:Property}) that is used as input."^^xsd:string .

s223:hasOptionalConnectionPoint a rdf:Property ;
    rdfs:label "has Optional Connection Point"^^xsd:string ;
    rdfs:comment "The `hasOptionalConnectionPoint` relation means the `ConnectionPoint` represents the boundary of a `System` (see {s223:System}) defined by the modeler, such as a model fragment provided by the vendor of a collection of equipment intended for integration with another model. The presence of this relation is used to indicate that such a \"dangling connection point\" should not generate a validation error in an integrated or non-integrated context."^^xsd:string .

s223:hasSetpoint a rdf:Property ;
    rdfs:label "has setpoint"^^xsd:string ;
    rdfs:comment "This relation binds a control setpoint to the `QuantifiableProperty` indicating the desired value which the control process is trying to maintain."^^xsd:string .

s223:hasThermodynamicPhase a rdf:Property ;
    rdfs:label "has thermodynamic phase"^^xsd:string ;
    rdfs:comment "The relation `hasThermodynamicPhase` is used to indicate the thermodynamic phase of the Medium inside a `Connection`."^^xsd:string .

s223:DCNegativeVoltage-12.0V a s223:Class,
        s223:DCNegativeVoltage-12.0V,
        sh:NodeShape ;
    rdfs:label "DCNegativeVoltage-12.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-12V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCNegativeVoltage-12.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCNegativeVoltage .

s223:DCNegativeVoltage-24.0V a s223:Class,
        s223:DCNegativeVoltage-24.0V,
        sh:NodeShape ;
    rdfs:label "DCNegativeVoltage-24.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-24V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCNegativeVoltage-24.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCNegativeVoltage .

s223:DCNegativeVoltage-6.0V a s223:Class,
        s223:DCNegativeVoltage-6.0V,
        sh:NodeShape ;
    rdfs:label "DCNegativeVoltage-6.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-6V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCNegativeVoltage-6.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCNegativeVoltage .

s223:DCPositiveVoltage-12.0V a s223:Class,
        s223:DCPositiveVoltage-12.0V,
        sh:NodeShape ;
    rdfs:label "DCPositiveVoltage-12.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-12V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCPositiveVoltage-12.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCPositiveVoltage .

s223:DCPositiveVoltage-24.0V a s223:Class,
        s223:DCPositiveVoltage-24.0V,
        sh:NodeShape ;
    rdfs:label "DCPositiveVoltage-24.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-24V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCPositiveVoltage-24.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCPositiveVoltage .

s223:DCPositiveVoltage-6.0V a s223:Class,
        s223:DCPositiveVoltage-6.0V,
        sh:NodeShape ;
    rdfs:label "DCPositiveVoltage-6.0V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-6V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCPositiveVoltage-6.0V"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCPositiveVoltage .

s223:Domain-HVAC a s223:Class,
        s223:Domain-HVAC,
        sh:NodeShape ;
    rdfs:label "Domain-HVAC"^^xsd:string ;
    rdfs:comment "The domain HVAC represents equipment used to provide space conditioning and ventilation within a building. Example equipment that might fall within an HVAC domain include fans, pumps, air-handling units, and variable air volume boxes. "^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Domain .

s223:ElectricEnergyConverter a s223:Class,
        sh:NodeShape ;
    rdfs:label "Electric energy converter"^^xsd:string ;
    rdfs:comment "An equipment that converts one form of electric power to another form of electric power."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "An `ElectricEnergyConverter` shall have at least two connection points that use the medium Electricity."^^xsd:string ;
            sh:message "s223: An `ElectricEnergyConverter` shall have at least two connection points that use the medium Electricity."^^xsd:string ;
            sh:minCount 2 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 2 ;
            sh:qualifiedValueShape [ sh:class s223:ConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:ElectricResistanceElement a s223:Class,
        sh:NodeShape ;
    rdfs:label "Electric Resistance Element"^^xsd:string ;
    rdfs:comment "Electric resistance elements provide electrical resistance heating, for example an electric heating coil within a Fan Coil Unit. It shall have one electricity `InletConnectionPoint`, plus fit one of the following two patterns: Pattern 1: An `ElectricResistanceElement` shall have exactly one Bidirectional `ConnectionPoint` using the medium Fluid. Pattern 2: An `ElectricResistanceElement` shall have one inlet and one outlet using the medium Fluid."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:message "s223: An `ElectricResistanceElement` shall have one electricity `InletConnectionPoint`, plus fit one of the following two patterns: Pattern 1: An `ElectricResistanceElement` shall have exactly one Bidirectional `ConnectionPoint` using the medium Fluid. Pattern 2: An `ElectricResistanceElement` shall have one inlet and one outlet using the medium Fluid."^^xsd:string ;
    sh:property [ rdfs:comment "An `ElectricResistanceElement` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:message "s223: An `ElectricResistanceElement` shall have at least one inlet using the medium Electricity."^^xsd:string ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Constituent-Electricity ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "An `ElectricResistanceElement` shall have the role `Role-Heating`."^^xsd:string ;
            sh:message "s223: An `ElectricResistanceElement` shall have the role `Role-Heating`."^^xsd:string ;
            sh:path s223:hasRole ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Role-Heating ] ] ;
    sh:xone ( [ sh:property [ rdfs:comment "Pattern 1: An `ElectricResistanceElement` shall have exactly one Bidirectional `ConnectionPoint` using the medium Fluid."^^xsd:string ;
                        sh:message "s223: Pattern 1: An `ElectricResistanceElement` requires exactly one `BidirectionalConnectionPoint` using the medium Fluid."^^xsd:string ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMaxCount 1 ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Mix-Fluid ;
                                                sh:path s223:hasMedium ] ] ] ;
                        sh:qualifiedValueShapesDisjoint true ] ] [ sh:property [ rdfs:comment "Pattern 2: An `ElectricResistanceElement` shall have one outlet using the medium Fluid."^^xsd:string ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMaxCount 1 ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Mix-Fluid ;
                                                sh:path s223:hasMedium ] ] ] ;
                        sh:qualifiedValueShapesDisjoint true ],
                    [ rdfs:comment "Pattern 2: An `ElectricResistanceElement` shall have one inlet using the medium Fluid."^^xsd:string ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMaxCount 1 ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Mix-Fluid ;
                                                sh:path s223:hasMedium ] ] ] ;
                        sh:qualifiedValueShapesDisjoint true ] ] ) .

s223:EnumerationKind-DayOfWeek a s223:Class,
        s223:EnumerationKind-DayOfWeek,
        sh:NodeShape ;
    rdfs:label "Day of Week"^^xsd:string ;
    ns2:subclauses ( s223:DayOfWeek-Weekday s223:DayOfWeek-Weekend ) ;
    rdfs:comment """
This class has enumerated subclasses of Monday, Tuesday, Wednesday, Thursday,
Friday, Saturday and Sunday. The Weekend and Weekday EnumerationKinds define
subsets of this `EnumerationKind` for Mon-Fri and Sat,Sun, respectively.

: Day of Week Enumerations

| Enumeration |
|:-----------|
| `DayOfWeek-Weekday` |
| `DayOfWeek-Weekend` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

s223:Fluid-Oil a s223:Class,
        s223:Fluid-Oil,
        sh:NodeShape ;
    rdfs:label "Fluid-Oil"^^xsd:string ;
    rdfs:comment "This class has enumerated subclasses of oil."^^xsd:string ;
    rdfs:subClassOf s223:Mix-Fluid .

s223:Junction a s223:Class,
        sh:NodeShape ;
    rdfs:label "Junction"^^xsd:string ;
    rdfs:comment """A `Junction` is a modeling construct used when a branching point within a `Connection` (see {s223:Connection}) is of significance, 
such as specifying the observation location of a `Sensor`, or when a modeler wants to expose a branch point within a containing piece of `Equipment`. 
When a `Junction` is used, what might have been modeled as a single, branched `Connection` 
is separated into three or more separate connections, all tied together with the `Junction` and its associated connection points. 

`Junction` is a subClassOf `Connectable`, which gives it the ability to have connection points, but unlike Equipment (and like Connection) 
it is not allowed to change the Medium that passes through it. This is why `Junction` is a sibling class to `Equipment` and not a subclass.
This constraint to maintain compatible mediums among a `Junction` and all of its associated `ConnectionPoint`s gives rise to multiple
validation test cases, where the specified medium might be a pure medium, or a mixture with constituents. See {s223:Substance-Medium} for
more details.
"""^^xsd:string ;
    rdfs:subClassOf s223:Connectable ;
    sh:property [ rdfs:comment "Incompatible Medium. Case1: A `Junction` with a pure medium and an associated `ConnectionPoint` with a pure medium."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 1: Two pure mediums."^^xsd:string ;
                    sh:message "s223: `Junction` {$this} with Medium {?m2} is incompatible with {?cp} with Medium {?m1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m2 ?cp ?m1
WHERE {
$this s223:cnx ?cp .
?cp a/rdfs:subClassOf* s223:ConnectionPoint .
?cp s223:hasMedium ?m1 .
$this s223:hasMedium ?m2 .
FILTER (?m1 != ?m2 ) .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {?m2 s223:composedOf ?c2}
FILTER (NOT EXISTS {?m2 rdfs:subClassOf* ?m1}) .
FILTER (NOT EXISTS {?m1 rdfs:subClassOf* ?m2}) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "Incompatible Medium. Case 7: Two `ConnectionPoint`s with mediums with constituents."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 7: Two `ConnectionPoint`s with mediums with constituents."^^xsd:string ;
                    sh:message "s223: {?cp1} with Medium {?m1} is incompatible with {?cp2} with Medium {?m2}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?cp1 ?m1 ?cp2 ?m2
WHERE {
$this s223:cnx ?cp1 .
?cp1 a/rdfs:subClassOf* s223:ConnectionPoint .
?cp1 s223:hasMedium ?m1 .
$this s223:cnx ?cp2 .
?cp2 a/rdfs:subClassOf* s223:ConnectionPoint .
?cp2 s223:hasMedium ?m2 .
    ?m1 s223:composedOf/s223:ofConstituent ?s1 .
    ?m2 s223:composedOf/s223:ofConstituent ?s2 .
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s11 .
    ?m2 s223:composedOf/s223:ofConstituent ?s12 .
    FILTER (?s11 = ?s12) .
  }
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s21 .
    ?m2 s223:composedOf/s223:ofConstituent ?s22 .
    {?s22 rdfs:subClassOf* ?s21} UNION {?s21 rdfs:subClassOf* ?s22} .
  }
}
"""^^xsd:string ] ],
        [ rdfs:comment "Incompatible Medium. Case 2: A `Junction` with constituents and an associated `ConnectionPoint` with a pure medium."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 2: A `Junction` with constituents and an associated `ConnectionPoint` with a pure medium."^^xsd:string ;
                    sh:message "s223: `Junction` {$this} with Medium {?m2} is incompatible with {?cp} with Medium {?m1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m2 ?cp ?m1
WHERE {
$this s223:cnx ?cp .
?cp a/rdfs:subClassOf* s223:ConnectionPoint .
?cp s223:hasMedium ?m1 .
$this s223:hasMedium ?m2 .
?m2 s223:composedOf/s223:ofConstituent ?s2 .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {
  ?m2 s223:composedOf/s223:ofConstituent ?s12 .
  {?s12 rdfs:subClassOf* ?m1} UNION {?m1 rdfs:subClassOf* ?s12} .
}
}
"""^^xsd:string ] ],
        [ rdfs:comment "Incompatible Medium. Case 3: `Junction` with a pure medium and an associated `ConnectionPoint` with constituents"^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 3: `Junction` with a pure medium and an associated `ConnectionPoint` with constituents."^^xsd:string ;
                    sh:message "s223: `Junction` {$this} with Medium {?m1} is incompatible with {?cp} with Medium {?m2}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m2 ?cp ?m1
WHERE {
$this s223:cnx ?cp .
?cp a/rdfs:subClassOf* s223:ConnectionPoint .
?cp s223:hasMedium ?m2 .
$this s223:hasMedium ?m1 .
?m2 s223:composedOf/s223:ofConstituent ?s2 .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {
  ?m2 s223:composedOf/s223:ofConstituent ?s12 .
  {?s12 rdfs:subClassOf* ?m1} UNION {?m1 rdfs:subClassOf* ?s12} .
}
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `Junction` must be associated with exactly one `Substance-Medium` using the relation `hasMedium`."^^xsd:string ;
            sh:class s223:Substance-Medium ;
            sh:maxCount 1 ;
            sh:message "s223: A `Junction` must be associated with exactly one `Substance-Medium` using the relation `hasMedium`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasMedium ],
        [ rdfs:comment "Incompatible Medium. Case4: `Junction` with constituents and an associated `ConnectionPoint` with constituents."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 4: `Junction` with constituents and an associated `ConnectionPoint` with constituents."^^xsd:string ;
                    sh:message "s223: `Junction` {$this} with Medium {?m2} is incompatible with {?cp} with Medium {?m1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m2 ?cp ?m1
WHERE {
$this s223:cnx ?cp .
?cp a/rdfs:subClassOf* s223:ConnectionPoint .
?cp s223:hasMedium ?m1 .
$this s223:hasMedium ?m2 .
    ?m1 s223:composedOf/s223:ofConstituent ?s1 .
    ?m2 s223:composedOf/s223:ofConstituent ?s2 .
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s11 .
    ?m2 s223:composedOf/s223:ofConstituent ?s12 .
    FILTER (?s11 = ?s12) .
  }
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s21 .
    ?m2 s223:composedOf/s223:ofConstituent ?s22 .
    {?s22 rdfs:subClassOf* ?s21} UNION {?s21 rdfs:subClassOf* ?s22} .
  }
}
"""^^xsd:string ] ],
        [ rdfs:comment "Incompatible Medium. Case 6: Two `ConnectionPoint`s, one with a medium with constituents and one a pure medium."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 6: Two `ConnectionPoint`s with a medium with constituents and a pure medium."^^xsd:string ;
                    sh:message "s223: {?cp1} with Medium {?m1} is incompatible with {?cp2} with Medium {?m2}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?cp1 ?m1 ?cp2 ?m2
WHERE {
$this s223:cnx ?cp1 .
?cp1 a/rdfs:subClassOf* s223:ConnectionPoint .
?cp1 s223:hasMedium ?m1 .
$this s223:cnx ?cp2 .
?cp2 a/rdfs:subClassOf* s223:ConnectionPoint .
?cp2 s223:hasMedium ?m2 .
?m2 s223:composedOf/s223:ofConstituent ?s2 .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {
  ?m2 s223:composedOf/s223:ofConstituent ?s12 .
  {?s12 rdfs:subClassOf* ?m1} UNION {?m1 rdfs:subClassOf* ?s12} .
}
}
"""^^xsd:string ] ],
        [ rdfs:comment "Incompatible Medium. Case5: Two `ConnectionPoint`s with pure mediums."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 5: Two `ConnectionPoint`s with pure mediums."^^xsd:string ;
                    sh:message "s223: {?cp1} with Medium {?m1} is incompatible with {?cp2} with Medium {?m2}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?cp1 ?m1 ?cp2 ?m2
WHERE {
$this s223:cnx ?cp1 .
?cp1 a/rdfs:subClassOf* s223:ConnectionPoint .
?cp1 s223:hasMedium ?m1 .
$this s223:cnx ?cp2 .
?cp2 a/rdfs:subClassOf* s223:ConnectionPoint .
FILTER (?cp1 != ?cp2 ) .
?cp2 s223:hasMedium ?m2 .
FILTER (?m1 != ?m2 ) .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {?m2 s223:composedOf ?c2}
FILTER (NOT EXISTS {?m2 rdfs:subClassOf* ?m1}) .
FILTER (NOT EXISTS {?m1 rdfs:subClassOf* ?m2}) .
}
"""^^xsd:string ] ] .

s223:LightSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Light sensor"^^xsd:string ;
    rdfs:comment "A `LightSensor` is a specialization of a `Sensor` that observes a `QuantifiableObservableProperty` that represents a measurement of some attribute of light, as specified by the `QuantityKind` of the `Property` being observed."^^xsd:string ;
    rdfs:subClassOf s223:Sensor .

s223:LineNeutralVoltage-24V a s223:Class,
        s223:LineNeutralVoltage-24V,
        sh:NodeShape ;
    rdfs:label "24V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-24V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "24V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:Mix-PowerAndSignal a s223:Class,
        s223:Mix-PowerAndSignal,
        sh:NodeShape ;
    rdfs:label "Mix-Power and signal"^^xsd:string ;
    rdfs:comment """
This is the parent class of substances that are used to transport 
the combination of electric power and data.

:PowerAndSignal Enumerations

| Enumeration |
|:-----------|
| `PowerAndSignal-PoE` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Medium-Mix .

s223:ObservableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Observable Property"^^xsd:string ;
    rdfs:comment """The term "observable" implies that reading the `ObservableProperty` value will return the result of a physical observation, usually by a `Sensor`.  
  In contrast, the term "actuatable" (see {s223:ActuatableProperty}) implies that writing to the `ActuatableProperty` value will directly trigger a physical actuation."""^^xsd:string ;
    rdfs:subClassOf s223:Property ;
    sh:property [ rdfs:comment "An `ObservableProperty` normally is referred to by a `Sensor` using the relation `observes`."^^xsd:string ;
            sh:class s223:Sensor ;
            sh:message "s223: An `ObservableProperty` normally is referred to by a `Sensor` using the relation `observes`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path [ sh:inversePath s223:observes ] ;
            sh:severity sh:Warning ] .

s223:OccupancySensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Occupancy sensor"^^xsd:string ;
    rdfs:comment "An `OccupancySensor` is a subclass of a `Sensor` that observes a `Property` that represents measurement of occupancy in a space."^^xsd:string ;
    rdfs:subClassOf s223:Sensor .

s223:PhysicalSpace a s223:Class,
        sh:NodeShape ;
    rdfs:label "Physical Space"^^xsd:string ;
    rdfs:comment "A `PhysicalSpace` is an architectural concept representing a room, a part of a room, a collection of rooms, or any other physical region in a building. PhysicalSpaces may be grouped to define larger PhysicalSpaces using the relation `contains` (see {s223:contains})."^^xsd:string ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ rdfs:comment "If the relation `encloses` is present it must associate the `PhysicalSpace` with a `DomainSpace`."^^xsd:string ;
            sh:class s223:DomainSpace ;
            sh:message "s223: If the relation `encloses` is present it must associate the `PhysicalSpace` with a `DomainSpace`."^^xsd:string ;
            sh:path s223:encloses ],
        [ rdfs:comment "If the relation `contains` is present it must associate the `PhysicalSpace` with a `PhysicalSpace`."^^xsd:string ;
            sh:class s223:PhysicalSpace ;
            sh:message "s223: If the relation `contains` is present it must associate the `PhysicalSpace` with a `PhysicalSpace`."^^xsd:string ;
            sh:path s223:contains ] .

s223:ThermodynamicPhase-Gas a s223:Class,
        s223:ThermodynamicPhase-Gas,
        sh:NodeShape ;
    rdfs:label "ThermodynamicPhase-Gas"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses of gas in various thermodynamic states.

: Gas Enumerations

| Enumeration |
|:-----------|
| `Gas-Superheated` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ThermodynamicPhase .

s223:ThermodynamicPhase-Liquid a s223:Class,
        s223:ThermodynamicPhase-Liquid,
        sh:NodeShape ;
    rdfs:label "ThermodynamicPhase-Liquid"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses of liquid in various thermodynamic states.

: Liquid Enumerations

| Enumeration |
|:-----------|
| `Liquid-SubCooled` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-ThermodynamicPhase .

s223:Voltage-208V a s223:Class,
        s223:Voltage-208V,
        sh:NodeShape ;
    rdfs:label "208V Voltage"^^xsd:string ;
    s223:hasValue 208.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "208V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-240V a s223:Class,
        s223:Voltage-240V,
        sh:NodeShape ;
    rdfs:label "240V Voltage"^^xsd:string ;
    s223:hasValue 240.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "240V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-2V a s223:Class,
        s223:Voltage-2V,
        sh:NodeShape ;
    rdfs:label "2V Voltage"^^xsd:string ;
    s223:hasValue 2.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "2V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-3V a s223:Class,
        s223:Voltage-3V,
        sh:NodeShape ;
    rdfs:label "3V Voltage"^^xsd:string ;
    s223:hasValue 3.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "3V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Zone a s223:Class,
        sh:NodeShape ;
    rdfs:label "Zone"^^xsd:string ;
    rdfs:comment "A `Zone` is a logical grouping of one or more DomainSpaces for a specific domain for some building service or control-related purpose. Zones may be grouped into ZoneGroups (see {s223:ZoneGroup})."^^xsd:string ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ rdfs:comment "The associated Domain of a `Zone` and the Domain of the DomainSpaces it `contains` must be the same."^^xsd:string ;
            sh:path s223:hasDomain ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "The associated Domain of a `Zone` and the Domain of the DomainSpaces it contains must be the same."^^xsd:string ;
                    sh:message "s223: `Zone` {$this} has a Domain of {?domain}, but it contains a `DomainSpace` {?ds} which has a Domain of {?dsdomain}. These should be the same."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT DISTINCT $this ?domain ?ds ?dsdomain
WHERE {
$this a s223:Zone .
$this s223:hasDomain ?domain .
$this s223:contains ?ds .
?ds s223:hasDomain ?dsdomain .
FILTER (?domain != ?dsdomain)
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `Zone` must be associated with exactly one `EnumerationKind-Domain` using the relation `hasDomain`."^^xsd:string ;
            sh:class s223:EnumerationKind-Domain ;
            sh:maxCount 1 ;
            sh:message "s223: A `Zone` must be associated with exactly one `EnumerationKind-Domain` using the relation `hasDomain`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasDomain ],
        [ rdfs:comment "A `Zone` must be associated with at least one `DomainSpace` using the relation `hasDomainSpace`."^^xsd:string ;
            sh:class s223:DomainSpace ;
            sh:message "s223: A `Zone` must be associated with at least one `DomainSpace` using the relation `hasDomainSpace`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasDomainSpace ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Infer a `hasDomain` relation by checking any enclosing `ZoneGroup` to determine the domain."^^xsd:string ;
            sh:object [ sh:path ( [ sh:inversePath s223:hasZone ] s223:hasDomain ) ] ;
            sh:predicate s223:hasDomain ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "Infer a `hasDomain` relation by checking any enclosed DomainSpaces to determine the domain."^^xsd:string ;
            sh:object [ sh:path ( s223:hasDomainSpace s223:hasDomain ) ] ;
            sh:predicate s223:hasDomain ;
            sh:subject sh:this ] .

s223:actuatedByProperty a rdf:Property ;
    rdfs:label "commanded by Property"^^xsd:string ;
    rdfs:comment """The relation `actuatedByProperty` binds an `Equipment` to the `ActuatableProperty` that it responds to. If the `Equipment` 
is an `Actuator` (a subclass of `Equipment`), `actuatedByProperty` is a required relation. An `Actuator` may also identify another piece of 
`Equipment` being actuated. (see {s223:actuates})."""^^xsd:string .

s223:connected a s223:SymmetricRelation,
        rdf:Property ;
    rdfs:label "connected"^^xsd:string ;
    rdfs:comment "The relation `connected` indicates that two connectable things are `connected` without regard to any directionality of a process flow.  "^^xsd:string .

s223:hasDomainSpace a rdf:Property ;
    rdfs:label "has domain space"^^xsd:string ;
    rdfs:comment "The relation `hasDomainSpace` is used to associate a `Zone` with its component DomainSpaces."^^xsd:string .

s223:hasInternalReference a rdf:Property ;
    rdfs:label "has internal reference"^^xsd:string ;
    rdfs:comment """The relation `hasInternalReference` is used to relate a `Property` to another candidate equivalent `Property`. For example, 
a `Property` that represents a `Zone` temperature could have one or more `hasInternalReference` relations to Properties that are measurements by 
different sensors."""^^xsd:string .

s223:hasOutput a rdf:Property ;
    rdfs:label "has output"^^xsd:string ;
    rdfs:comment "The relation `hasOutput` is used to relate a `Function` (see {s223:Function}) to a `Property` (see {s223:Property}) that is calculated by the `Function`."^^xsd:string .

s223:hasZone a rdf:Property ;
    rdfs:label "has zone"^^xsd:string ;
    rdfs:comment "The relation `hasZone` is used to associate a `ZoneGroup` with its component Zones."^^xsd:string .

s223:isConnectionPointOf a rdf:Property ;
    rdfs:label "is connection point of"^^xsd:string ;
    s223:inverseOf s223:hasConnectionPoint ;
    rdfs:comment "The relation `isConnectionPointOf` is part of a pair of relations that bind a `ConnectionPoint` to a `Connectable` thing. It is the inverse of the relation `hasConnectionPoint` (see {s223:hasConnectionPoint})."^^xsd:string .

s223:ofSubstance a rdf:Property ;
    rdfs:label "of substance"^^xsd:string ;
    rdfs:comment "The `ofSubstance` relation is used on a `Property` being observed by a sensor. It links the `Property` to a Substance it characterizes within a specific Medium. For instance, to denote the concentration of a Substance in a Medium, `ofSubstance` is used. Typically, there's also an `ofMedium` relation between the observed `Property` and the Medium. For example, to represent the concentration of CO2 in air, we use `ofSubstance` to relate to CO2 and `ofMedium` to relate to air. The term `ofSubstance` is broad enough to include situations where a sensor is used to detect constituents that should not be present in a medium, such as ammonia in air. Therefore, `ofSubstance` is used to indicate the substance of interest, while `ofConstituent` would indicate a constituent that is normally present in the composition of the mix."^^xsd:string .

s223:ActuatableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Actuatable Property"^^xsd:string ;
    rdfs:comment """The term "actuatable" implies that writing to the `ActuatableProperty` value will directly trigger a physical actuation by either an `Actuator` or `Equipment`. 
  In contrast, the term "observable" (see {s223:ObservableProperty}) implies that reading the `ObservableProperty` value will return the result of a physical observation."""^^xsd:string ;
    rdfs:subClassOf s223:Property ;
    sh:property [ rdfs:comment "An `ActuatableProperty` normally is referred to by `Equipment` using the relation `actuatedByProperty`."^^xsd:string ;
            sh:class s223:Equipment ;
            sh:message "s223: An `ActuatableProperty` normally is referred to by `Equipment` using the relation `actuatedByProperty`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path [ sh:inversePath s223:actuatedByProperty ] ;
            sh:severity sh:Warning ] .

s223:Binary-Logical a s223:Binary-Logical,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Binary Logical"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses of True and False used to describe the possible values of a logical property.

: Logical Enumerations

| Enumeration |
|:-----------|
| `Logical-True` |
| `Logical-False` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Binary .

s223:Coil a s223:Class,
        sh:NodeShape ;
    rdfs:label "Coil"^^xsd:string ;
    rdfs:comment """
    A `Coil` is a component that represents a cooling or heating element made of a pipe or tube 
    that may or may not be finned and formed into a helical or serpentine shape. The physical 
    characteristics of the coil are not captured in the model.

    A `Coil` must conform to exactly one of the following patterns:

    **Pattern 1:**
    - The `Coil` has exactly two inlet connection points using the medium `Mix-Fluid`, with exactly one being `Fluid-Air`.
    - The `Coil` has exactly two outlet connection points using the medium `Mix-Fluid`, with exactly one being `Fluid-Air`.

    **Pattern 2:**
    - The Coil has exactly one inlet connection point using the medium `Mix-Fluid`.
    - The Coil has exactly one outlet connection point using the medium `Mix-Fluid`.
    - The Coil has one or two bidirectional connection points using the medium `Mix-Fluid` or `Medium-ThermalContact`.

    **Pattern 3:**
    - The Coil has exactly three bidirectional connection points using the medium `Mix-Fluid` or `Medium-ThermalContact`.
  """^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:message "s223: A `Coil` shall fit one of the following patterns of `ConnectionPoint`s: 1: Two inlets and two outlets using the medium `Mix-Fluid`. 2: One inlet and one outlet using the medium `Mix-Fluid`, and one or two bidirectionals using the medium `Mix-Fluid` or `Medium-ThermalContact`. 3: Three bidirectionals using the medium `Mix-Fluid` or `Medium-ThermalContact`."^^xsd:string ;
    sh:xone ( [ sh:property [ rdfs:comment "Pattern 1: A `Coil` shall have two inlets using the medium Fluid."^^xsd:string ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMaxCount 2 ;
                        sh:qualifiedMinCount 2 ;
                        sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Mix-Fluid ;
                                                sh:path s223:hasMedium ] ] ] ],
                    [ rdfs:comment "Pattern 1: For one of the two inlets the Fluid is Air."^^xsd:string ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMaxCount 1 ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                                sh:path s223:hasMedium ] ] ] ],
                    [ rdfs:comment "Pattern 1: For one of the two outlets the Fluid is Air."^^xsd:string ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMaxCount 1 ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                                sh:path s223:hasMedium ] ] ] ],
                    [ rdfs:comment "Pattern 1: A `Coil` shall have two outlets using the medium Fluid."^^xsd:string ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMaxCount 2 ;
                        sh:qualifiedMinCount 2 ;
                        sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Mix-Fluid ;
                                                sh:path s223:hasMedium ] ] ] ] ] [ sh:property [ rdfs:comment "Pattern 2: A `Coil` shall have one outlet using the medium Fluid."^^xsd:string ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMaxCount 1 ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Mix-Fluid ;
                                                sh:path s223:hasMedium ] ] ] ],
                    [ rdfs:comment "Pattern 2: A `Coil` shall have one inlet using the medium Fluid."^^xsd:string ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMaxCount 1 ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                                sh:node [ sh:property [ sh:class s223:Mix-Fluid ;
                                                sh:path s223:hasMedium ] ] ] ],
                    [ rdfs:comment "Pattern 2: A `Coil` shall have one or two bidirectionals using the medium Fluid or ThermalContact."^^xsd:string ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMaxCount 2 ;
                        sh:qualifiedMinCount 1 ;
                        sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                                sh:node [ sh:property [ sh:or ( [ sh:class s223:Mix-Fluid ] [ sh:class s223:Medium-ThermalContact ] ) ;
                                                sh:path s223:hasMedium ] ] ] ;
                        sh:qualifiedValueShapesDisjoint true ] ] [ sh:property [ rdfs:comment "Pattern 3: A `Coil` shall have three bidirectionals using the medium Fluid or ThermalContact."^^xsd:string ;
                        sh:path s223:hasConnectionPoint ;
                        sh:qualifiedMaxCount 3 ;
                        sh:qualifiedMinCount 3 ;
                        sh:qualifiedValueShape [ sh:class s223:BidirectionalConnectionPoint ;
                                sh:node [ sh:property [ sh:or ( [ sh:class s223:Mix-Fluid ] [ sh:class s223:Medium-ThermalContact ] ) ;
                                                sh:path s223:hasMedium ] ] ] ;
                        sh:qualifiedValueShapesDisjoint true ] ] ) .

s223:DayOfWeek-Weekend a s223:Class,
        s223:DayOfWeek-Weekend,
        sh:NodeShape ;
    rdfs:label "Weekend"^^xsd:string ;
    rdfs:comment """
This class defines the `EnumerationKind` values of Saturday and Sunday.

: Weekend Enumerations

| Enumeration |
|:-----------|
| `Weekend-Saturday` |
| `Weekend-Sunday` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-DayOfWeek .

s223:Function a s223:Class,
        sh:NodeShape ;
    rdfs:label "Function"^^xsd:string ;
    rdfs:comment "A `Function` is used to model transfer and/or transformation of information (i.e. `Property`). It has relations to input Properties and output Properties. The actual algorithms that perform the transformations are described in CDL and are out of scope of the 223 standard."^^xsd:string ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ rdfs:comment "If the relation `hasOutput` is present it must associate a `Function` with a `Property`."^^xsd:string ;
            sh:class s223:Property ;
            sh:message "s223: If the relation `hasOutput` is present it must associate a `Function` with a `Property`."^^xsd:string ;
            sh:path s223:hasOutput ],
        [ rdfs:comment "If the relation `hasInput` is present it must associate a `Function` with a `Property`."^^xsd:string ;
            sh:class s223:Property ;
            sh:message "s223: If the relation `hasInput` is present it must associate a `Function` with a `Property`."^^xsd:string ;
            sh:path s223:hasInput ] .

s223:HeatPump a s223:Class,
        sh:NodeShape ;
    rdfs:label "Heat pump"^^xsd:string ;
    rdfs:comment "A device that can heat or cool by transferring thermal energy using a reversible refrigeration cycle."^^xsd:string ;
    rdfs:subClassOf s223:Equipment .

s223:LineNeutralVoltage-110V a s223:Class,
        s223:LineNeutralVoltage-110V,
        sh:NodeShape ;
    rdfs:label "110V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-110V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "110V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-127V a s223:Class,
        s223:LineNeutralVoltage-127V,
        sh:NodeShape ;
    rdfs:label "127V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-127V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "127V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-139V a s223:Class,
        s223:LineNeutralVoltage-139V,
        sh:NodeShape ;
    rdfs:label "139V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-139V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "139V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-1730V a s223:Class,
        s223:LineNeutralVoltage-1730V,
        sh:NodeShape ;
    rdfs:label "1730V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-1730V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "1730V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-1900V a s223:Class,
        s223:LineNeutralVoltage-1900V,
        sh:NodeShape ;
    rdfs:label "1900V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-1900V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "1900V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-208V a s223:Class,
        s223:LineNeutralVoltage-208V,
        sh:NodeShape ;
    rdfs:label "208V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-208V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "208V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-219V a s223:Class,
        s223:LineNeutralVoltage-219V,
        sh:NodeShape ;
    rdfs:label "219V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-219V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "219V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-231V a s223:Class,
        s223:LineNeutralVoltage-231V,
        sh:NodeShape ;
    rdfs:label "231V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-231V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "231V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-2400V a s223:Class,
        s223:LineNeutralVoltage-2400V,
        sh:NodeShape ;
    rdfs:label "2400V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-2400V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "2400V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-240V a s223:Class,
        s223:LineNeutralVoltage-240V,
        sh:NodeShape ;
    rdfs:label "240V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-240V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "240V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-277V a s223:Class,
        s223:LineNeutralVoltage-277V,
        sh:NodeShape ;
    rdfs:label "277V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-277V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "277V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-3460V a s223:Class,
        s223:LineNeutralVoltage-3460V,
        sh:NodeShape ;
    rdfs:label "3460V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-3460V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "3460V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-347V a s223:Class,
        s223:LineNeutralVoltage-347V,
        sh:NodeShape ;
    rdfs:label "347V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-347V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "347V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-3810V a s223:Class,
        s223:LineNeutralVoltage-3810V,
        sh:NodeShape ;
    rdfs:label "3810V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-3810V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "3810V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:LineNeutralVoltage-5770V a s223:Class,
        s223:LineNeutralVoltage-5770V,
        sh:NodeShape ;
    rdfs:label "5770V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-5770V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "5770V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:Medium-Mix a s223:Class,
        s223:Medium-Mix,
        sh:NodeShape ;
    rdfs:label "Medium-Mix"^^xsd:string ;
    ns2:subclauses ( s223:Mix-Fluid s223:Mix-PowerAndSignal ) ;
    rdfs:comment """
This is the parent class of substances that are composed of constituents,
see {s223:Mix-Fluid} and {s223:Mix-PowerAndSignal}.
The components of a `Medium-Mix` can be modeled using the relations `composedOf` and 
`ofConstituent`. See Figure X-Y and Figure X-Y.

![ ](figures/Figure_x-y_Substance_Portrait.svg)

Figure X-Y shows `GlycolSolution-30Percent`, itself a subclass of
`Water-GlycolSolution`, `Fluid-Water`, and `Mix-Fluid`, with a _Water Concentration_
property referencing 70% `Constituent-H20` by the relation `ofConstituent` and
a _Glycol Concentration_ property referencing 30% `Constituent-Glycol` also
by the relation `ofConstituent`.

Figure X-Y shows `PowerandSignal-PoE`, itself a subclass of `Mix-PowerAndSignal`,
composed of a _Power_ property referencing `Fluid-DC` and a _Communications_
property referencing `Signal-Ethernet`.

:Mix Enumerations

| Enumeration |
|:-----------|
| `Mix-Fluid` (see {s223:Mix-Fluid}) |
| `Mix-PowerAndSignal` (see {s223:Mix-PowerAndSignal}) |
"""^^xsd:string ;
    rdfs:subClassOf s223:Substance-Medium .

s223:Medium-ThermalContact a s223:Class,
        s223:Medium-ThermalContact,
        sh:NodeShape ;
    rdfs:label "Medium-ThermalContact"^^xsd:string ;
    rdfs:comment """
This class represents the transfer of thermodynamic energy at `ConnectionPoint`s or through `Connection`s
that does not involve electricity or moving a fluid such as air or water.
"""^^xsd:string ;
    rdfs:subClassOf s223:Substance-Medium .

s223:Signal-Modulated a s223:Class,
        s223:Signal-Modulated,
        sh:NodeShape ;
    rdfs:label "Signal-Modulated"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses of electric signals at various voltage ranges.

: Modulated Enumerations

| Enumeration |
|:-----------|
| `Modulated-0-10V` |
| `Modulated-4-20mA` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Electricity-Signal .

s223:TerminalUnit a s223:Class,
        sh:NodeShape ;
    rdfs:label "Terminal Unit"^^xsd:string ;
    rdfs:comment "An air terminal that modulates the volume of air delivered to a space."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `TerminalUnit` shall have at least one outlet `ConnectionPoint` using the medium Air."^^xsd:string ;
            sh:message "s223: A `TerminalUnit` shall have at least one outlet `ConnectionPoint` using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `TerminalUnit` shall have at least one inlet `ConnectionPoint` using the medium Air."^^xsd:string ;
            sh:message "s223: A `TerminalUnit` shall have at least one inlet `ConnectionPoint` using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:Voltage-12V a s223:Class,
        s223:Voltage-12V,
        sh:NodeShape ;
    rdfs:label "12V Voltage"^^xsd:string ;
    s223:hasValue 12.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "12V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-190V a s223:Class,
        s223:Voltage-190V,
        sh:NodeShape ;
    rdfs:label "190V Voltage"^^xsd:string ;
    s223:hasValue 190.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "190V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-48V a s223:Class,
        s223:Voltage-48V,
        sh:NodeShape ;
    rdfs:label "48V Voltage"^^xsd:string ;
    s223:hasValue 48.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "48V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-5V a s223:Class,
        s223:Voltage-5V,
        sh:NodeShape ;
    rdfs:label "5V Voltage"^^xsd:string ;
    s223:hasValue 5.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "5V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-6V a s223:Class,
        s223:Voltage-6V,
        sh:NodeShape ;
    rdfs:label "6V Voltage"^^xsd:string ;
    s223:hasValue 6.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "6V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:connectedFrom a rdf:Property ;
    rdfs:label "connected from"^^xsd:string ;
    s223:inverseOf s223:connectedTo ;
    rdfs:comment "The relation `connectedFrom` indicates that connectable things are `connected` with a specific flow direction. B is `connectedFrom` A, means a directionality beginning at A and ending at B.  The inverse direction is indicated by `connectedTo` (see {s223:connectedTo})."^^xsd:string ;
    rdfs:domain s223:Equipment .

s223:Constituent-EM a s223:Class,
        s223:Constituent-EM,
        sh:NodeShape ;
    rdfs:label "Electromagnetic Wave"^^xsd:string ;
    ns2:subclauses ( s223:EM-Light ) ;
    rdfs:comment """
This class has enumerated subclasses of electromagnetic energy at any frequency range.

: EM Enumerations

| Enumeration |
|:-----------|
| `EM-Light` |
| `EM-Microwave` |
| `EM-RF` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Medium-Constituent .

s223:DC-12V a s223:Class,
        s223:DC-12V,
        sh:NodeShape ;
    rdfs:label "s223:DC-12V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-12V ;
    rdfs:comment """
This class has enumerated instances of all polarities of 12 volt electricity.

: DC-12V Enumerations

| Enumeration |
|:-----------|
| `12V-12V-Neg` |
| `12V-12V-Pos` |
| `12V-6V-Neg-6V-Pos` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Electricity-DC .

s223:DC-24V a s223:Class,
        s223:DC-24V,
        sh:NodeShape ;
    rdfs:label "s223:DC-24V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-24V ;
    rdfs:comment """
This class has enumerated instances of all polarities of 24 volt electricity.

: DC-24V Enumerations

| Enumeration |
|:-----------|
| `24V-12V-Neg-12V-Pos` |
| `24V-24V-Neg` |
| `24V-24V-Pos` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Electricity-DC .

s223:DC-380V a s223:Class,
        s223:DC-380V,
        sh:NodeShape ;
    rdfs:label "s223:DC-380V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-380V ;
    rdfs:comment """
This class has enumerated instances of all polarities of 380 volt electricity.

: DC-380V Enumerations

| Enumeration |
|:-----------|
| `380V-190V-Neg-190V-Pos` |
| `380V-380V-Neg` |
| `380V-380V-Pos` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Electricity-DC .

s223:DC-48V a s223:Class,
        s223:DC-48V,
        sh:NodeShape ;
    rdfs:label "s223:DC-48V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-48V ;
    rdfs:comment """
This class has enumerated instances of all polarities of 48 volt electricity.

: DC-48V Enumerations

| Enumeration |
|:-----------|
| `48V-24V-Neg-24V-Pos` |
| `48V-48V-Neg` |
| `48V-48V-Pos` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Electricity-DC .

s223:DC-5V a s223:Class,
        s223:DC-5V,
        sh:NodeShape ;
    rdfs:label "s223:DC-5V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-5V ;
    rdfs:comment """
This class has enumerated instances of all polarities of 5 volt electricity.

: DC-5V Enumerations

| Enumeration |
|:-----------|
| `5V-2.5V-Neg-2.5V-Pos` |
| `5V-5V-Neg` |
| `5V-5V-Pos` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Electricity-DC .

s223:DC-6V a s223:Class,
        s223:DC-6V,
        sh:NodeShape ;
    rdfs:label "s223:DC-6V"^^xsd:string ;
    s223:hasVoltage s223:Voltage-6V ;
    rdfs:comment """
This class has enumerated instances of all polarities of 6 volt electricity.

: DC-6V Enumerations

| Enumeration |
|:-----------|
| `6V-3V-Neg-3V-Pos` |
| `6V-6V-Neg` |
| `6V-6V-Pos` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Electricity-DC .

s223:Damper a s223:Class,
        sh:NodeShape ;
    rdfs:label "Damper"^^xsd:string ;
    rdfs:comment "An element inserted into an air-distribution system or element of an air-distribution system permitting modification of the air resistance of the system and consequently changing the airflow rate or shutting off the airflow."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Damper` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:message "s223: A `Damper` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `Damper` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:message "s223: A `Damper` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:EnumeratedActuatableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Enumerated actuatable property"^^xsd:string ;
    rdfs:comment "An `EnumeratedActuatableProperty` is a `Property` with an enumerated (fixed) set of possible values that can be changed (actuated)."^^xsd:string ;
    rdfs:subClassOf s223:ActuatableProperty,
        s223:EnumerableProperty .

s223:EnumeratedObservableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Enumerated observable property"^^xsd:string ;
    rdfs:comment "An `EnumeratedObservableProperty` is a `Property` with an enumerated (fixed) set of possible values that cannot be changed (can only be observed)."^^xsd:string ;
    rdfs:subClassOf s223:EnumerableProperty,
        s223:ObservableProperty .

s223:EnumerationKind-Substance a s223:Class,
        s223:EnumerationKind-Substance,
        sh:NodeShape ;
    rdfs:label "Substance"^^xsd:string ;
    ns2:subclauses ( s223:Substance-Medium s223:Substance-Particulate ) ;
    rdfs:comment """
This class is the root of a taxonomy of things that are consumed, produced,
transported, sensed, or controlled.  It includes air, refrigerents, electrical power
and signaling, particulates, and fluids such as water and oil.

:Substance Enumerations

| Enumeration |
|:-----------|
| `Substance-Medium` (see {s223:Substance-Medium}) |
| `Substance-Particulate` (see {s223:Substance-Particulate}) |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind ;
    sh:property [ rdfs:comment "If a substance has a constituent, that constituent may not itself have constituents."^^xsd:string ;
            sh:path s223:composedOf ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "If a substance has a constituent, that constituent may not itself have constituents."^^xsd:string ;
                    sh:message "s223: This substance {$this} has a constituent {?constituent} that itself composed ofs {?nextConstituent}. Create new substance with only atomic constituents."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?constituent ?nextConstituent
WHERE {
$this s223:composedOf ?constituent .
?constituent s223:ofConstituent/s223:composedOf ?nextConstituent .
}
"""^^xsd:string ] ],
        [ rdfs:comment """If the relation `composedOf` is present, it must associate an `EnumerationKind-Substance` with one or more Properties that 
identify and characterize its constituents. The `Property` identifies the constituent using the relation `ofConstituent`. If appropriate, a 
`QuantifiableProperty` may be used to also specify the amount of the constituent using the relations `qudt:hasQuantityKind`, `qudt:hasUnit`, and `qudt:hasValue`.  
For example, see {s223:Water-GlycolSolution}."""^^xsd:string ;
            sh:class s223:Property ;
            sh:path s223:composedOf ] .

s223:Fan a s223:Class,
        sh:NodeShape ;
    rdfs:label "Fan"^^xsd:string ;
    rdfs:comment "A machine used to create flow within a gas such as air. "^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "A `Fan` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:message "s223: A `Fan` shall have at least one inlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:InletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ],
        [ rdfs:comment "A `Fan` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:message "s223: A `Fan` shall have at least one outlet using the medium Air."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasConnectionPoint ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:OutletConnectionPoint ;
                    sh:node [ sh:property [ sh:class s223:Fluid-Air ;
                                    sh:path s223:hasMedium ] ] ] ] .

s223:LineLineVoltage-10000V a s223:Class,
        s223:LineLineVoltage-10000V,
        sh:NodeShape ;
    rdfs:label "10000V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-10000V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "10000V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-190V a s223:Class,
        s223:LineLineVoltage-190V,
        sh:NodeShape ;
    rdfs:label "190V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-190V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "190V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-208V a s223:Class,
        s223:LineLineVoltage-208V,
        sh:NodeShape ;
    rdfs:label "208V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-208V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "208V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-220V a s223:Class,
        s223:LineLineVoltage-220V,
        sh:NodeShape ;
    rdfs:label "220V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-220V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "220V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-3000V a s223:Class,
        s223:LineLineVoltage-3000V,
        sh:NodeShape ;
    rdfs:label "3000V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-3000V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "3000V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-3300V a s223:Class,
        s223:LineLineVoltage-3300V,
        sh:NodeShape ;
    rdfs:label "3300V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-3300V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "3300V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-380V a s223:Class,
        s223:LineLineVoltage-380V,
        sh:NodeShape ;
    rdfs:label "380V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-380V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "380V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-400V a s223:Class,
        s223:LineLineVoltage-400V,
        sh:NodeShape ;
    rdfs:label "400V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-400V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "400V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-415V a s223:Class,
        s223:LineLineVoltage-415V,
        sh:NodeShape ;
    rdfs:label "415V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-415V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "415V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-4160V a s223:Class,
        s223:LineLineVoltage-4160V,
        sh:NodeShape ;
    rdfs:label "4160V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-4160V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "4160V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-480V a s223:Class,
        s223:LineLineVoltage-480V,
        sh:NodeShape ;
    rdfs:label "480V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-480V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "480V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-6000V a s223:Class,
        s223:LineLineVoltage-6000V,
        sh:NodeShape ;
    rdfs:label "6000V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-6000V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "6000V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-600V a s223:Class,
        s223:LineLineVoltage-600V,
        sh:NodeShape ;
    rdfs:label "600V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-600V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "600V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:LineLineVoltage-6600V a s223:Class,
        s223:LineLineVoltage-6600V,
        sh:NodeShape ;
    rdfs:label "6600V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-6600V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "6600V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:Occupancy-Motion a s223:Class,
        s223:Occupancy-Motion,
        sh:NodeShape ;
    rdfs:label "Occupancy Motion"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses indicating whether motion is detected or not.

: Motion Enumerations

| Enumeration |
|:-----------|
| `Motion-False` |
| `Motion-True` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Occupancy .

s223:Occupancy-Presence a s223:Class,
        s223:Occupancy-Presence,
        sh:NodeShape ;
    rdfs:label "Occupancy Presence"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses indicating whether physical presence is detected or not.

: Presence Enumerations

| Enumeration |
|:-----------|
| `Presence-False` |
| `Presence-True` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Occupancy .

s223:QuantifiableActuatableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Quantifiable Actuatable Property"^^xsd:string ;
    rdfs:comment "This class is for instances of `QuantifiableProperty` for which numerical values are specified to be modifiable by a user or a machine outside of the model, like a setpoint."^^xsd:string ;
    rdfs:subClassOf s223:ActuatableProperty,
        s223:QuantifiableProperty .

s223:QuantifiableObservableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Quantifiable Observable Property"^^xsd:string ;
    rdfs:comment "This class is for instances of `QuantifiableProperty` for which numerical values are observed, like a temperature reading or a voltage measure."^^xsd:string ;
    rdfs:subClassOf s223:ObservableProperty,
        s223:QuantifiableProperty ;
    sh:property [ rdfs:comment "A `QuantifiableObservableProperty` can be associated with zero or more `QuantifiableProperty`(s) indicating the desired value(s) which the control process is trying to maintain using the relation `hasSetpoint`."^^xsd:string ;
            sh:class s223:QuantifiableProperty ;
            sh:message "s223: A `QuantifiableObservableProperty` can be associated with zero or more `QuantifiableProperty`(s) indicating the desired value(s) which the control process is trying to maintain using the relation `hasSetpoint`."^^xsd:string ;
            sh:path s223:hasSetpoint ] .

s223:Voltage-24V a s223:Class,
        s223:Voltage-24V,
        sh:NodeShape ;
    rdfs:label "24V Voltage"^^xsd:string ;
    s223:hasValue 24.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "24V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-380V a s223:Class,
        s223:Voltage-380V,
        sh:NodeShape ;
    rdfs:label "380V Voltage"^^xsd:string ;
    s223:hasValue 380.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "380V Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage .

s223:Voltage-DCVoltage a s223:Class,
        s223:Voltage-DCVoltage,
        sh:NodeShape ;
    rdfs:label "Voltage-DCVoltage"^^xsd:string ;
    s223:hasVoltage s223:Numerical-Voltage ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    ns2:subclauses ( s223:DCVoltage-DCNegativeVoltage s223:DCVoltage-DCPositiveVoltage s223:DCVoltage-DCZeroVoltage ) ;
    rdfs:comment """
This class has enumerated instances of common positive and negative voltages, plus zero volts.

: DC Voltage Enumerations

| Enumeration |
|:-----------|
| `DCVoltage-DCNegativeVoltage` |
| `DCVoltage-DCPositiveVoltage` |
| `DCVoltage-DCZeroVoltage` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Voltage ;
    sh:property [ rdfs:comment "A DC-Voltage must have a voltage"^^xsd:string ;
            sh:class s223:Numerical-Voltage ;
            sh:minCount 1 ;
            sh:path s223:hasVoltage ] .

s223:Water-GlycolSolution a s223:Class,
        s223:Water-GlycolSolution,
        sh:NodeShape ;
    rdfs:label "Water-GlycolSolution"^^xsd:string ;
    s223:composedOf [ a s223:QuantifiableProperty ;
            rdfs:label "Unspecified"^^xsd:string ;
            s223:ofConstituent s223:Constituent-Glycol ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Unspecified"^^xsd:string ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ] ;
    s223:hasFreezingPoint [ a s223:QuantifiableProperty ;
            rdfs:label "Freezing point"^^xsd:string ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Temperature> ] ;
    ns2:subclauses ( s223:hasFreezingPoint ) ;
    rdfs:comment """
This class has enumerated subclasses of water-glycol solutions in various concentrations.

: Glycol Solution Enumerations

| Enumeration |
|:-----------|
| `GlycolSolution-15Percent` |
| `GlycolSolution-30Percent` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Fluid-Water ;
    sh:property [ rdfs:comment "If the relation `hasFreezingPoint` is used, the object must be a `QuantifiableProperty` with a `QuantityKind` of `Temperature`."^^xsd:string ;
            sh:class s223:QuantifiableProperty ;
            sh:message "The object must be a `QuantifiableProperty` with a `QuantityKind` of `Temperature`."^^xsd:string ;
            sh:node [ sh:property [ sh:hasValue <http://qudt.org/vocab/quantitykind/Temperature> ;
                            sh:path ns1:hasQuantityKind ] ] ;
            sh:path s223:hasFreezingPoint ],
        [ rdfs:comment "One of the constituents of a `Water-GlycolSolution` must be `Constituent-Glycol`."^^xsd:string ;
            sh:path s223:composedOf ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:QuantifiableProperty ;
                    sh:node [ sh:property [ rdfs:comment "One of the constituents of a `Water-GlycolSolution` must be `Constituent-Glycol`."^^xsd:string ;
                                    sh:hasValue s223:Constituent-Glycol ;
                                    sh:path s223:ofConstituent ],
                                [ rdfs:comment "The `QuantityKind` of the constituent must be `VolumeFraction`."^^xsd:string ;
                                    sh:hasValue <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
                                    sh:path ns1:hasQuantityKind ] ] ] ],
        [ rdfs:comment "One of the constituents of a `Water-GlycolSolution` must be `Constituent-H2O`."^^xsd:string ;
            sh:path s223:composedOf ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:QuantifiableProperty ;
                    sh:node [ sh:property [ rdfs:comment "One of the constituents of a `Water-GlycolSolution` must be `Constituent-H2O`."^^xsd:string ;
                                    sh:hasValue s223:Constituent-H2O ;
                                    sh:path s223:ofConstituent ],
                                [ rdfs:comment "The `QuantityKind` of the constituent must be `VolumeFraction`."^^xsd:string ;
                                    sh:hasValue <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
                                    sh:path ns1:hasQuantityKind ] ] ] ],
        [ rdfs:comment "There must be at least two QuantifiableProperties that characterize the constituents of a `Water-GlycolSolution`."^^xsd:string ;
            sh:class s223:QuantifiableProperty ;
            sh:minCount 2 ;
            sh:path s223:composedOf ] .

s223:hasObservationLocation a rdf:Property ;
    rdfs:label "has observation location"^^xsd:string ;
    rdfs:comment "The relation `hasObservationLocation` is used to associate a sensor to the topological location where it is observing the `Property` (see {s223:observes}). The observation location shall be a `Connectable` (see {s223:Connectable}), `Connection` (see {s223:Connection}), or `ConnectionPoint` (see {s223:ConnectionPoint})."^^xsd:string .

s223:hasReferenceLocation a rdf:Property ;
    rdfs:label "has reference location"^^xsd:string ;
    rdfs:comment "The relation `hasReferenceLocation` is used to associate a differential sensor to the topological location of the baseline (reference) `Property` (see {s223:observes})."^^xsd:string .

s223:hasValue a rdf:Property ;
    rdfs:label "hasValue"^^xsd:string ;
    rdfs:comment "`hasValue` is used to contain a fixed value that is part of a 223 model, rather than a computed, measured, or externally derived variable."^^xsd:string .

s223:Binary-OnOff a s223:Binary-OnOff,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "OnOff enumeration"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses of states of either on or off.

: On Off Enumerations

| Enumeration |
|:-----------|
| `OnOff-Off` |
| `OnOff-On` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Binary .

s223:DCPositiveVoltage-PoE a s223:Class,
        s223:DCPositiveVoltage-PoE,
        sh:NodeShape ;
    rdfs:label "DCPositiveVoltage-PoE"^^xsd:string ;
    s223:hasVoltage s223:Voltage-PoE ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCPositiveVoltage-PoE"^^xsd:string ;
    rdfs:subClassOf s223:DCVoltage-DCPositiveVoltage .

s223:EnumerationKind-Numerical a s223:Class,
        s223:EnumerationKind-Numerical,
        sh:NodeShape ;
    rdfs:label "EnumerationKind Numerical"^^xsd:string ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Unknown> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/UNKNOWN> ;
    ns2:subclauses ( s223:Numerical-Frequency s223:Numerical-LineLineVoltage s223:Numerical-LineNeutralVoltage s223:Numerical-NumberOfElectricalPhases s223:Numerical-Voltage s223:hasFrequency s223:hasVoltage ) ;
    rdfs:comment """
**Version 1**
Numerical enumeration kinds are used to support the definitions of the
Electricity medium. The enumerations instances in these classes have names that
are recognizable by humans but are just a string for a computer application. To
avoid the need to parse strings, each of these enumeration kinds have
`Property` instances associated with the enumeration that represent electrical
phase, voltage, and frequency. The purpose of these `Property` instances is to
enable a machine to query them and obtain the same information that a person
would associate with the string.

**Version 2**
Numerical enumeration kinds are used to support the definitions of the
Electricity medium. The enumerations instances in these classes have names that
are recognizable by humans but are just a string for a computer application. To
avoid the need to parse strings, each of these enumeration kinds have
properties associated with the enumeration that represent electrical
phase, voltage, and frequency. The purpose of these properties is to enable a
machine to query them and obtain the same information that a person would
associate with the string.
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind ;
    sh:property [ rdfs:comment "An `EnumerationKind-Numerical` can be associated with a decimal value using the relation `hasValue`."^^xsd:string ;
            sh:datatype xsd:decimal ;
            sh:path s223:hasValue ],
        [ rdfs:comment "An `EnumerationKind-Numerical` must be associated with at least one Unit using the relation `hasUnit`."^^xsd:string ;
            sh:class ns1:Unit ;
            sh:minCount 1 ;
            sh:path ns1:hasUnit ;
            sh:severity sh:Info ],
        [ rdfs:comment "An `EnumerationKind-Numerical` must be associated with at least one QuantityKind using the relation `hasQuantityKind`."^^xsd:string ;
            sh:class ns1:QuantityKind ;
            sh:minCount 1 ;
            sh:path ns1:hasQuantityKind ] .

s223:EnumerationKind-Occupancy a s223:Class,
        s223:EnumerationKind-Occupancy,
        sh:NodeShape ;
    rdfs:label "Occupancy status"^^xsd:string ;
    ns2:subclauses ( s223:Occupancy-Motion s223:Occupancy-Presence ) ;
    rdfs:comment """
This class has enumerated subclasses of occupancy status, i.e. the state of being used or occupied. Some Occupancy enumerations have subclasses for more specific use.

: Occupancy Enumerations

| Enumeration |
|:-----------|
| `Occupancy-Occupied` |
| `Occupancy-Unoccupied` |
| `Occupancy-Unknown` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

s223:EnumerationKind-ThermodynamicPhase a s223:Class,
        s223:EnumerationKind-ThermodynamicPhase,
        sh:NodeShape ;
    rdfs:label "EnumerationKind ThermodynamicPhase"^^xsd:string ;
    ns2:subclauses ( s223:ThermodynamicPhase-Gas s223:ThermodynamicPhase-Liquid s223:hasThermodynamicPhase ) ;
    rdfs:comment """
This class has enumerated subclasses of thermodynamic phase, i.e. states of matter.

: Thermodynamic Phase Enumerations

| Enumeration |
|:-----------|
| `ThermodynamicPhase-Gas` (see {s223:ThermodynamicPhase-Gas}) |
| `ThermodynamicPhase-Liquid` (see {s223:ThermodynamicPhase-Liquid}) |
| `ThermodynamicPhase-Solid` |
| `ThermodynamicPhase-Vapor` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

s223:Fluid-Refrigerant a s223:Class,
        s223:Fluid-Refrigerant,
        sh:NodeShape ;
    rdfs:label "Fluid-Refrigerant"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses of commonly used refrigerants.

: Refrigerant Enumerations

| Enumeration |
|:-----------|
| `Refrigerant-R-22` |
| `Refrigerant-R-410A` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Mix-Fluid .

s223:Numerical-Frequency a s223:Class,
        s223:Numerical-Frequency,
        sh:NodeShape ;
    rdfs:label "Dimensioned Frequency"^^xsd:string ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Frequency> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/HZ> ;
    rdfs:comment """
This class has enumerated instances of common electrical frequencies.

: Frequency Enumerations

| Enumeration |
|:-----------|
| `Frequency-50Hz` |
| `Frequency-60Hz` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Numerical ;
    sh:property [ rdfs:comment "A `Numerical-Frequency` must have a `QuantityKind` of `Frequency`"^^xsd:string ;
            sh:hasValue <http://qudt.org/vocab/quantitykind/Frequency> ;
            sh:path ns1:hasQuantityKind ],
        [ rdfs:comment "A `Numerical-Frequency` must have a `Unit` of `Hertz`"^^xsd:string ;
            sh:hasValue <http://qudt.org/vocab/unit/HZ> ;
            sh:path ns1:hasUnit ] .

s223:Numerical-NumberOfElectricalPhases a s223:Class,
        s223:Numerical-NumberOfElectricalPhases,
        sh:NodeShape ;
    rdfs:label "Dimensionless Number of Electrical Phases"^^xsd:string ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Dimensionless> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/NUM> ;
    rdfs:comment """
This class has enumerated instances of number of electrical phases. The
`s223:hasNumberOfElectricalPhases` relation points to one of the values of this
enumeration.

: Number Of Electrical Phases Enumerations

| Enumeration |
|:-----------|
| `NumberOfElectricalPhases-SinglePhase` |
| `NumberOfElectricalPhases-ThreePhase` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Numerical .

s223:Role-Cooling a s223:Class,
        s223:Role-Cooling,
        sh:NodeShape ;
    rdfs:label "Role-Cooling"^^xsd:string ;
    rdfs:comment "`Role-Cooling`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Substance-Particulate a s223:Class,
        s223:Substance-Particulate,
        sh:NodeShape ;
    rdfs:label "Particulate"^^xsd:string ;
    rdfs:comment """
This class represents solid matter suspended within a
medium, where they maintain their original physical and chemical properties.

![Particulate Concentration](figures/Figure_x-y_Particulate_Concentration.svg)

Figure X-Y shows an instance of a `Connection` with `hasMedium` referencing
`Fluid-Air` that has a property _Particulate Concentation_ of particles with a
diameter of 2.5 micrometres (0.0025 mm) or smaller in units of micrograms per
cubic meter.

![Carbon Monoxide Concentration](figures/Figure_x-y_Medium_Concentration.svg)

Figure X-Y shows an instance of a property _CO Concentration_ with `ofSubstance`
referencing carbon monoxide `Constituent-CO` and `ofMedium` referencing `Fluid-Air`
measured in parts-per-million.  This figure also shows that the value of this
property can be obtained by using the BACnet protocol via the external reference
to get the `present-value` of `analog-value,67` in the device with an instance
number `12345`.

: Particulate Enumerations

| Enumeration |
|:-----------|
| `Particulate-PM1.0` |
| `Particulate-PM10.0` |
| `Particulate-PM2.5` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Substance .

s223:connectsThrough a rdf:Property ;
    rdfs:label "connects through"^^xsd:string ;
    s223:inverseOf s223:connectsAt ;
    rdfs:comment "The relation `connectsThrough` binds a `ConnectionPoint` to a `Connection` without regard to the direction of flow."^^xsd:string .

s223:hasVoltage a rdf:Property ;
    rdfs:label "hasVoltage"^^xsd:string ;
    rdfs:comment "The relation `hasVoltage` is used to identify the voltage of an electricity enumeration kind. "^^xsd:string .

s223:ofConstituent a rdf:Property ;
    rdfs:label "of constituent"^^xsd:string ;
    rdfs:comment "The relation `ofConstituent` is used to associate a `Property` that characterizes a medium mix with one of the constituents of that mix. (ex. `Fluid-Water` `composedOf` `Property` `ofConstituent` `Constituent-H2O`."^^xsd:string .

s223:Constituent-Glycol a s223:Class,
        s223:Constituent-Glycol,
        sh:NodeShape ;
    rdfs:label "Constituent-Glycol"^^xsd:string ;
    rdfs:comment "`Constituent-Glycol`"^^xsd:string ;
    rdfs:subClassOf s223:Medium-Constituent .

s223:DayOfWeek-Weekday a s223:Class,
        s223:DayOfWeek-Weekday,
        sh:NodeShape ;
    rdfs:label "Weekday"^^xsd:string ;
    rdfs:comment """
This class defines the `EnumerationKind` values of Monday, Tuesday, Wednesday, Thursday, and Friday.

: Weekday Enumerations

| Enumeration |
|:-----------|
| `Weekday-Friday` |
| `Weekday-Monday` |
| `Weekday-Thursday` |
| `Weekday-Tuesday` |
| `Weekday-Wednesday` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-DayOfWeek .

s223:LineNeutralVoltage-120V a s223:Class,
        s223:LineNeutralVoltage-120V,
        sh:NodeShape ;
    rdfs:label "120V Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-120V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "120V Line-Neutral Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineNeutralVoltage .

s223:Role-Heating a s223:Class,
        s223:Role-Heating,
        sh:NodeShape ;
    rdfs:label "Role-Heating"^^xsd:string ;
    rdfs:comment "`Role-Heating`"^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Role .

s223:Valve a s223:Class,
        sh:NodeShape ;
    rdfs:label "Valve"^^xsd:string ;
    rdfs:comment "A device to regulate or stop the flow of fluid in a pipe or a duct by throttling."^^xsd:string ;
    rdfs:subClassOf s223:Equipment .

s223:connectedTo a rdf:Property ;
    rdfs:label "connected to"^^xsd:string ;
    s223:inverseOf s223:connectedFrom ;
    rdfs:comment "The relation `connectedTo` indicates that connectable things are `connected` with a specific flow direction. A is `connectedTo` B, means a directionality beginning at A and ending at B.  The inverse direction is indicated by `connectedFrom` (see {s223:connectedFrom})."^^xsd:string ;
    rdfs:domain s223:Equipment .

s223:connectsAt a rdf:Property ;
    rdfs:label "connects at"^^xsd:string ;
    s223:inverseOf s223:connectsThrough ;
    rdfs:comment "The relation `connectsAt` binds a `Connection` to a specific `ConnectionPoint`."^^xsd:string .

s223:pairedConnectionPoint a s223:SymmetricRelation ;
    rdfs:label "paired connection point"^^xsd:string ;
    rdfs:comment "The `pairedConnectionPoint` relation is a symmetric relation used to associate two connection points where an `InletConnectionPoint` shares the same medium with an `OutletConnectionPoint`."^^xsd:string .

s223:DC-PoE a s223:Class,
        s223:DC-PoE,
        sh:NodeShape ;
    rdfs:label "DC-PoE"^^xsd:string ;
    s223:hasVoltage s223:DCPositiveVoltage-PoE ;
    rdfs:comment """
This class has enumerated instances of PoE.

: PoE Enumerations

| Enumeration |
|:-----------|
| `PoE-802.3af-1` |
| `PoE-802.3at-2` |
| `PoE-802.3bt-3` |
| `PoE-802.3bt-4` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Electricity-DC .

s223:Electricity-Signal a s223:Class,
        s223:Electricity-Signal,
        sh:NodeShape ;
    rdfs:label "Electricity Signal"^^xsd:string ;
    ns2:subclauses ( s223:Signal-Modulated ) ;
    rdfs:comment """
This class has enumerated subclasses of common communication protocols.

: Signal Enumerations

| Enumeration |
|:-----------|
| `Signal-EIA485` |
| `Signal-Ethernet` |
| `Signal-IEC14908` |
| `Signal-Modulated` (see {s223:Signal-Modulated}) |
| `Signal-USB` |"""^^xsd:string ;
    rdfs:subClassOf s223:Constituent-Electricity .

s223:EnumerationKind-Binary a s223:Class,
        s223:EnumerationKind-Binary,
        sh:NodeShape ;
    rdfs:label "EnumerationKind Binary"^^xsd:string ;
    ns2:subclauses ( s223:Binary-Logical s223:Binary-OnOff s223:Binary-Position ) ;
    rdfs:comment """
This class has enumerated subclasses of binary values.

: Binary Enumerations

| Enumeration |
|:-----------|
| `Binary-Logical`  |
| `Binary-OnOff`  |
| `Binary-Position`  |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

s223:Medium-Constituent a s223:Class,
        s223:Medium-Constituent,
        sh:NodeShape ;
    rdfs:label "Medium-Constituent"^^xsd:string ;
    ns2:subclauses ( s223:Constituent-Electricity s223:Constituent-EM ) ;
    rdfs:comment """
This class has enumerated subclasses of substances that may be combined to
form a `Medium-Mix`. Constituents are distinguished from subclasses of
`Medium-Mix` in that constituents cannot use the `composedOf` relation to
reference a concentration of other constituents.

:Constituent Enumerations

| Enumeration |
|:-----------|
| `Constituent-CO` |
| `Constituent-CO2` |
| `Constituent-Glycol` |
| `Constituent-Electricity` (see {s223:Constituent-Electricity}) |
| `Constituent-EM` (see {s223:Constituent-EM}) |
| `Constituent-H2O` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Substance-Medium .

s223:composedOf a rdf:Property ;
    rdfs:label "composed of"^^xsd:string ;
    rdfs:comment "The relation `composedOf` is used to indicate what substances constitute a material. Allowable values are instances of `Property` that in turn identify constituents defined in `Medium-Constituent` (see {s223:Medium-Constituent}) via the relation `ofConstituent`."^^xsd:string .

s223:contains a rdf:Property ;
    rdfs:label "contains"^^xsd:string ;
    rdfs:comment "The relation `contains` is used to associate a `PhysicalSpace` with its component PhysicalSpaces or a piece of `Equipment` with its component pieces of `Equipment`."^^xsd:string .

s223:hasElectricalPhase a rdf:Property ;
    rdfs:label "has electrical phase"^^xsd:string ;
    rdfs:comment "The relation `hasElectricalPhase` is used to indicate the electrical phase identifier or the relevant electrical phases for a voltage difference for AC electricity inside a `Connection`."^^xsd:string .

s223:Connection a s223:Class,
        sh:NodeShape ;
    rdfs:label "Connection"^^xsd:string ;
    rdfs:comment """A `Connection` is the modeling construct used to represent the thing (e.g., pipe, duct, conductor, or free space) that is used to convey 
some Medium (e.g., water, air, electricity, light, wi-fi) between two connectable things. All connections have two or more connection points bound 
to either `Equipment` (see {s223:Equipment}), `DomainSpace` (see {s223:DomainSpace}), or `Junction` (see {s223:Junction}) See Figure 6-2. If the direction 
of flow is constrained, that constraint is indicated by using one or more `InletConnectionPoint`s (see {s223:InletConnectionPoint}) to represent the 
inflow points and `OutletConnectionPoint`s (see {s223:OutletConnectionPoint}) to represent the outflow points.
  
A `Connection` may contain branches or intersections. These may be modeled using `Junction`s if it is necessary to identify a specific intersection. 
(see {s223:Junction}).

The constraint to maintain compatible mediums among a `Connection` and all of its associated `ConnectionPoint`s gives rise to multiple
validation test cases, where the specified medium might be a pure medium, or a mixture with constituents. See {s223:Substance-Medium} for
more details.

![Graphical Depiction of Connection.](figures/Figure_5-3_Connection.svg)
"""^^xsd:string ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ rdfs:comment "A `Connection` must only have a `cnx` relation with a `ConnectionPoint`"^^xsd:string ;
            sh:path s223:cnx ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "A `Connection` must only have a `cnx` relation with a `ConnectionPoint`"^^xsd:string ;
                    sh:message "s223: {$this} cannot have a s223:cnx relation to {?something}, because {?something} is not a `ConnectionPoint`."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """SELECT $this ?something
WHERE {
$this s223:cnx ?something .
FILTER NOT EXISTS {?something a/rdfs:subClassOf* s223:ConnectionPoint} .
}"""^^xsd:string ] ],
        [ rdfs:comment "A `Connection` must be associated with exactly one `Substance-Medium` using the relation `hasMedium`."^^xsd:string ;
            sh:class s223:Substance-Medium ;
            sh:maxCount 1 ;
            sh:message "s223: A `Connection` must be associated with exactly one `Substance-Medium` using the relation `hasMedium`."^^xsd:string ;
            sh:minCount 1 ;
            sh:name "Connection medium"^^xsd:string ;
            sh:path s223:hasMedium ],
        [ rdfs:comment "A `Connection` must have two or more `cnx` relations to connection points"^^xsd:string ;
            sh:class s223:ConnectionPoint ;
            sh:message "s223: A `Connection` must have two or more `cnx` relations to connection points"^^xsd:string ;
            sh:path s223:cnx ],
        [ rdfs:comment "If the relation `hasThermodynamicPhase` is present it must associate the `Connection` with at most one `EnumerationKind-ThermodynamicPhase`."^^xsd:string ;
            sh:class s223:EnumerationKind-ThermodynamicPhase ;
            sh:maxCount 1 ;
            sh:message "s223: If the relation `hasThermodynamicPhase` is present it must associate the `Connection` with at most one `EnumerationKind-ThermodynamicPhase`."^^xsd:string ;
            sh:path s223:hasThermodynamicPhase ],
        [ rdfs:comment "If the relation `hasRole` is present it must associate the `Connection` with an `EnumerationKind-Role`."^^xsd:string ;
            sh:class s223:EnumerationKind-Role ;
            sh:message "s223: If the relation `hasRole` is present it must associate the `Connection` with an `EnumerationKind-Role`."^^xsd:string ;
            sh:path s223:hasRole ],
        [ rdfs:comment "Incompatible Medium. Case 4: A `Connection` with constituents and an associated `ConnectionPoint` with constituents."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 4: A `Connection` with constituents and an associated `ConnectionPoint` with constituents."^^xsd:string ;
                    sh:message "s223: `Connection` {$this} with medium {?m2} is incompatible with {?cp} with medium {?m1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m2 ?cp ?m1
WHERE {
$this s223:cnx ?cp .
?cp a/rdfs:subClassOf* s223:ConnectionPoint .
?cp s223:hasMedium ?m2 .
$this s223:hasMedium ?m1 .
    ?m1 s223:composedOf/s223:ofConstituent ?s1 .
    ?m2 s223:composedOf/s223:ofConstituent ?s2 .
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s11 .
    ?m2 s223:composedOf/s223:ofConstituent ?s12 .
    FILTER (?s11 = ?s12) .
  }
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s21 .
    ?m2 s223:composedOf/s223:ofConstituent ?s22 .
    {?s22 rdfs:subClassOf* ?s21} UNION {?s21 rdfs:subClassOf* ?s22} .
  }
}
"""^^xsd:string ] ],
        [ rdfs:comment "Incompatible Medium. Case 5: Two `ConnectionPoint`s with pure mediums."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 5: Two `ConnectionPoint`s with pure mediums."^^xsd:string ;
                    sh:message "s223: {?cp1} with medium {?m1} is incompatible with {?cp2} with medium {?m2}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?cp1 ?m1 ?cp2 ?m2
WHERE {
$this s223:cnx ?cp1 .
?cp1 a/rdfs:subClassOf* s223:ConnectionPoint .
?cp1 s223:hasMedium ?m1 .
$this s223:cnx ?cp2 .
?cp2 a/rdfs:subClassOf* s223:ConnectionPoint .
?cp2 s223:hasMedium ?m2 .
FILTER (?m1 != ?m2 ) .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {?m2 s223:composedOf ?c2}
FILTER (NOT EXISTS {?m2 rdfs:subClassOf* ?m1}) .
FILTER (NOT EXISTS {?m1 rdfs:subClassOf* ?m2}) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "Incompatible Medium. Case 2: A `Connection` with constituents and an associated `ConnectionPoint` with a pure medium."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 2: A `Connection` with constituents and an associated `ConnectionPoint` with a pure medium."^^xsd:string ;
                    sh:message "s223: `Connection` {$this} with medium {?m2} is incompatible with {?cp} with medium {?m1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m2 ?cp ?m1
WHERE {
$this s223:cnx ?cp .
?cp a/rdfs:subClassOf* s223:ConnectionPoint .
?cp s223:hasMedium ?m1 .
$this s223:hasMedium ?m2 .
?m2 s223:composedOf/s223:ofConstituent ?s2 .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {
  ?m2 s223:composedOf/s223:ofConstituent ?s12 .
  {?s12 rdfs:subClassOf* ?m1} UNION {?m1 rdfs:subClassOf* ?s12} .
}
}
"""^^xsd:string ] ],
        [ rdfs:comment "Incompatible Medium. Case 6: Two `ConnectionPoint`s, one with a medium with constituents and one with a pure medium."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 6: A medium with constituents and a pure medium."^^xsd:string ;
                    sh:message "s223: {?cp1} with medium {?m1} is incompatible with {?cp2} with medium {?m2}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?cp1 ?m1 ?cp2 ?m2
WHERE {
$this s223:cnx ?cp1 .
?cp1 a/rdfs:subClassOf* s223:ConnectionPoint .
?cp1 s223:hasMedium ?m1 .
$this s223:cnx ?cp2 .
?cp2 a/rdfs:subClassOf* s223:ConnectionPoint .
FILTER (?cp1 != ?cp2 ) .
?cp2 s223:hasMedium ?m2 .
?m2 s223:composedOf/s223:ofConstituent ?s2 .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {
  ?m2 s223:composedOf/s223:ofConstituent ?s12 .
  {?s12 rdfs:subClassOf* ?m1} UNION {?m1 rdfs:subClassOf* ?s12} .
}
}
"""^^xsd:string ] ],
        [ rdfs:comment "Incompatible Medium. Case 7: Two `ConnectionPoint`s with mediums with constituents."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 7: Two `ConnectionPoint`s with mediums with constituents."^^xsd:string ;
                    sh:message "s223: {?cp1} with medium {?m2} is incompatible with {?cp2} with medium {?m1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?cp1 ?m1 ?cp2 ?m2
WHERE {
$this s223:cnx ?cp1 .
?cp1 a/rdfs:subClassOf* s223:ConnectionPoint .
?cp1 s223:hasMedium ?m2 .
$this s223:cnx ?cp2 .
?cp2 a/rdfs:subClassOf* s223:ConnectionPoint .
FILTER (?cp1 != ?cp2 ) .
?cp2 s223:hasMedium ?m1 .
    ?m1 s223:composedOf/s223:ofConstituent ?s1 .
    ?m2 s223:composedOf/s223:ofConstituent ?s2 .
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s11 .
    ?m2 s223:composedOf/s223:ofConstituent ?s12 .
    FILTER (?s11 = ?s12) .
  }
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s21 .
    ?m2 s223:composedOf/s223:ofConstituent ?s22 .
    {?s22 rdfs:subClassOf* ?s21} UNION {?s21 rdfs:subClassOf* ?s22} .
  }
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `Connection` must have two or more `connectsAt` relations to connection points"^^xsd:string ;
            sh:class s223:ConnectionPoint ;
            sh:message "s223: A `Connection` must have two or more `connectsAt` relations to connection points"^^xsd:string ;
            sh:minCount 2 ;
            sh:path s223:connectsAt ;
            sh:severity sh:Warning ],
        [ rdfs:comment "Incompatible Medium. Case 1: A `Connection` with a pure medium and an associated `ConnectionPoint` with a pure medium."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 1: Two pure mediums."^^xsd:string ;
                    sh:message "s223: `Connection` {$this} with medium {?m2} is incompatible with {?cp} with medium {?m1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m2 ?cp ?m1
WHERE {
$this s223:cnx ?cp .
?cp a/rdfs:subClassOf* s223:ConnectionPoint .
?cp s223:hasMedium ?m1 .
$this s223:hasMedium ?m2 .
FILTER (?m1 != ?m2 ) .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {?m2 s223:composedOf ?c2}
FILTER (NOT EXISTS {?m2 rdfs:subClassOf* ?m1}) .
FILTER (NOT EXISTS {?m1 rdfs:subClassOf* ?m2}) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "If the relation `connectsFrom` is present it must associate the `Connection` with a `Connectable`."^^xsd:string ;
            sh:class s223:Connectable ;
            sh:message "s223: If the relation `connectsFrom` is present it must associate the `Connection` with a `Connectable`."^^xsd:string ;
            sh:name "ConnectionToUpstreamConnectableShape"^^xsd:string ;
            sh:path s223:connectsFrom ],
        [ rdfs:comment "Incompatible Medium. Case 3: `Connection` with a pure medium and an associated `ConnectionPoint` with constituents."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 3: `Connection` with a pure medium and an associated `ConnectionPoint` with constituents."^^xsd:string ;
                    sh:message "s223: `Connection` {$this} with medium {?m2} is incompatible with {?cp} with medium {?m1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m2 ?cp ?m1
WHERE {
$this s223:cnx ?cp .
?cp a/rdfs:subClassOf* s223:ConnectionPoint .
?cp s223:hasMedium ?m2 .
$this s223:hasMedium ?m1 .
?m2 s223:composedOf/s223:ofConstituent ?s2 .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {
  ?m2 s223:composedOf/s223:ofConstituent ?s12 .
  {?s12 rdfs:subClassOf* ?m1} UNION {?m1 rdfs:subClassOf* ?s12} .
}
}
"""^^xsd:string ] ],
        [ rdfs:comment "If the relation `connectsTo` is present it must associate the `Connection` with a `Connectable`."^^xsd:string ;
            sh:class s223:Connectable ;
            sh:message "s223: If the relation `connectsTo` is present it must associate the `Connection` with a `Connectable`."^^xsd:string ;
            sh:name "ConnectionToDownstreamConnectableShape"^^xsd:string ;
            sh:path s223:connectsTo ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Infer `cnx` relation using `connectsAt`"^^xsd:string ;
            sh:object [ sh:path s223:connectsAt ] ;
            sh:predicate s223:cnx ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "Infer `cnx` relation using `connectsThrough`"^^xsd:string ;
            sh:object [ sh:path [ sh:inversePath s223:connectsThrough ] ] ;
            sh:predicate s223:cnx ;
            sh:subject sh:this ],
        [ a sh:SPARQLRule ;
            rdfs:comment "Infer the `connectsTo` relation using `connectsAt`"^^xsd:string ;
            sh:construct """
CONSTRUCT {$this s223:connectsTo ?equipment .}
WHERE {
$this s223:connectsAt ?cp .
?cp a s223:InletConnectionPoint .
?cp s223:isConnectionPointOf ?equipment .
}
"""^^xsd:string ;
            sh:name "InferredConnectionToDownstreamEquipmentProperty"^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ],
        [ a sh:TripleRule ;
            rdfs:comment "Infer the `connectsAt` relation using `cnx`"^^xsd:string ;
            sh:object [ sh:path s223:cnx ] ;
            sh:predicate s223:connectsAt ;
            sh:subject sh:this ],
        [ a sh:SPARQLRule ;
            rdfs:comment "Infer the `connectsFrom` relation using `connectsAt`"^^xsd:string ;
            sh:construct """
CONSTRUCT {$this s223:connectsFrom ?equipment .}
WHERE {
$this s223:connectsAt ?cp .
?cp a s223:OutletConnectionPoint .
?cp s223:isConnectionPointOf ?equipment .
}
"""^^xsd:string ;
            sh:name "InferredConnectionToUpstreamEquipmentProperty"^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ] .

s223:EnumerationKind-ElectricalVoltagePhases a s223:Class,
        s223:EnumerationKind-ElectricalVoltagePhases,
        sh:NodeShape ;
    rdfs:label "Aspect-Electrical Voltage Phases"^^xsd:string ;
    rdfs:comment """
This class enumerates the relevant electrical phases for a voltage difference
for AC electricity inside a `Connection`.

: Electrical Voltage Phases Enumerations

| Enumeration |
|:-----------|
| `ElectricalVoltagePhases-ABLineLineVoltage` |
| `ElectricalVoltagePhases-ANLineNeutralVoltage` |
| `ElectricalVoltagePhases-BCLineLineVoltage` |
| `ElectricalVoltagePhases-BNLineNeutralVoltage` |
| `ElectricalVoltagePhases-CALineLineVoltage` |
| `ElectricalVoltagePhases-CNLineNeutralVoltage` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

s223:Substance-Medium a s223:Class,
        s223:Substance-Medium,
        sh:NodeShape ;
    rdfs:label "Medium"^^xsd:string ;
    ns2:subclauses ( s223:Medium-Constituent s223:Medium-Mix ) ;
    rdfs:comment """
This class is the subclass of substances that allows for the transfer of
matter, energy, or information.  It is used to qualify `Connection`s and
`ConnectionPoint`s with the relation `hasMedium` (see {s223:hasMedium}).

`Substance-Medium` is also the root of the medium hierarchy that is used to
ensure compatibility of different medium designations. For example,
`Fluid-Water` and `Water-ChilledWater` are alternative but compatible ways of
identifying the material flowing in a pipe, using different degrees of
specificity. `Water-ChilledWater` and `Water-HotWater` are not compatible.
Compatibility is determined by testing if one medium is a subclass of the
other. This gets a bit more complicated in the case of mixtures, where at least
one of the constituents of a mixture must be compatible with at least one of
the constituents of the other medium. 

Testing for medium compatibility is done in the context of entities that have a `hasMedium` relation, such as 

* `Connection` and its associated `ConnectionPoint`s. See {s223:Connection}.

* `Junction` and its associated `ConnectionPoint`s See {s223:Junction}.

* `Filter` and its associated `ConnectionPoint`s. See {s223:Filter}.

* Any `Concept` that has a `hasMedium` relation, compared with an associated `Property` with an `ofMedium` relation. See {s223:Concept}.

These tests are listed in the constraint tables for the respective classes listed above, identified as Case 1, Case 2, etc.

:Medium Enumerations

| Enumeration |
|:-----------|
| `Medium-Constituent` (see {s223:Medium-Constituent}) |
| `Medium-Mix` (see {s223:Medium-Mix}) |
| `Medium-ThermalContact` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Substance .

s223:EM-Light a s223:Class,
        s223:EM-Light,
        sh:NodeShape ;
    rdfs:label "EM-Light"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses of what are considered visible or near-visible light.

: Light Enumerations

| Enumeration |
|:-----------|
| `Light-Infrared` |
| `Light-Ultraviolet` |
| `Light-Visible` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Constituent-EM .

s223:EnumerationKind-ElectricalPhaseIdentifier a s223:Class,
        s223:EnumerationKind-ElectricalPhaseIdentifier,
        sh:NodeShape ;
    rdfs:label "Aspect-Electrical phase identifier"^^xsd:string ;
    ns2:subclauses ( s223:hasElectricalPhase ) ;
    rdfs:comment """
The value of the associated `Property` identifies the electrical phase of the `Connection`.

: Electrical Phase Identifier Enumerations

| Enumeration |
|:-----------|
| `ElectricalPhaseIdentifier-A` |
| `ElectricalPhaseIdentifier-AB` |
| `ElectricalPhaseIdentifier-ABC` |
| `ElectricalPhaseIdentifier-B` |
| `ElectricalPhaseIdentifier-BC` |
| `ElectricalPhaseIdentifier-C` |
| `ElectricalPhaseIdentifier-CA` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

s223:LineLineVoltage-240V a s223:Class,
        s223:LineLineVoltage-240V,
        sh:NodeShape ;
    rdfs:label "240V Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-240V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "240V Line-Line Voltage"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-LineLineVoltage .

s223:hasAspect a rdf:Property ;
    rdfs:label "has aspect"^^xsd:string ;
    rdfs:comment "`hasAspect` is used to establish the context of a `Property`. The value must be an instance of `EnumerationKind`. For example, if a `Property` has a Temperature value of 45.3, the `hasAspect` relation is used to state what that represents, such as a Temperature limit during working hours, etc. A `Property` can have any number of `hasAspect` relations, as needed to establish the context."^^xsd:string .

s223:hasEnumerationKind a rdf:Property ;
    rdfs:label "has enumeration kind"^^xsd:string ;
    rdfs:comment "The relation `hasEnumerationKind` is used to associate an `EnumerableProperty` with a class of enumeration values. This is used to, for example, identify what kind of substance is transported along a `Connection` or which day of the week a setpoint is active."^^xsd:string .

s223:mapsTo a rdf:Property ;
    rdfs:label "mapsTo"^^xsd:string ;
    rdfs:comment "The relation `mapsTo` is used to associate a `ConnectionPoint` of a `Connectable` to a corresponding `ConnectionPoint` of the one containing it (see {pub:equipment-containment}). The associated connection points must have the same direction (see {s223:EnumerationKind-Direction}) and compatiable medium (see {s223:Substance-Medium})."^^xsd:string .

s223:Binary-Position a s223:Binary-Position,
        s223:Class,
        sh:NodeShape ;
    rdfs:label "Position"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses of position such as closed or open.

: Position Enumerations

| Enumeration |
|:-----------|
| `Position-Closed` |
| `Position-Open` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Binary .

s223:DCVoltage-DCNegativeVoltage a s223:Class,
        s223:DCVoltage-DCNegativeVoltage,
        sh:NodeShape ;
    rdfs:label "s223:DCVoltage-DCNegativeVoltage"^^xsd:string ;
    s223:hasVoltage s223:Numerical-Voltage ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment """
: DC Negative Voltage Enumerations

| Enumeration |
|:-----------|
| `DCNegativeVoltage-12.0V` |
| `DCNegativeVoltage-190.0V` |
| `DCNegativeVoltage-2.5V` |
| `DCNegativeVoltage-24.0V` |
| `DCNegativeVoltage-3.0V` |
| `DCNegativeVoltage-380.0V` |
| `DCNegativeVoltage-48.0V` |
| `DCNegativeVoltage-5.0V` |
| `DCNegativeVoltage-6.0V` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Voltage-DCVoltage .

ns1:hasUnit rdfs:comment "A reference to the unit of measure of a `QuantifiableProperty` of interest."^^xsd:string .

s223:Connectable a s223:Class,
        sh:NodeShape ;
    rdfs:label "Connectable"^^xsd:string ;
    s223:abstract true ;
    rdfs:comment "`Connectable` is an abstract class representing a thing such as, `Equipment` (see {s223:Equipment}), `DomainSpace` (see {s223:DomainSpace}), or `Junction` (see {s223:Junction}) that can be `connected` via connection points and connections."^^xsd:string ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ rdfs:comment "If the relation `hasConnectionPoint` is present it must associate the `Connectable` with a `ConnectionPoint`."^^xsd:string ;
            sh:class s223:ConnectionPoint ;
            sh:message "s223: If the relation `hasConnectionPoint` is present it must associate the `Connectable` with a `ConnectionPoint`."^^xsd:string ;
            sh:name "EquipmentToConnectionPointShape"^^xsd:string ;
            sh:path s223:hasConnectionPoint ],
        [ rdfs:comment "If the relation `connected` is present it must associate the `Connectable` with a `Connectable`."^^xsd:string ;
            sh:class s223:Connectable ;
            sh:message "s223: If the relation `connected` is present it must associate the `Connectable` with a `Connectable`."^^xsd:string ;
            sh:name "SymmetricConnectableToConnectableShape"^^xsd:string ;
            sh:path s223:connected ],
        [ rdfs:comment "If a `Connectable` has s223:connected or s223:connectedTo (i.e. high-level connection specification), it must also have the supporting `cnx` relations (low-level connection specification)."^^xsd:string ;
            sh:path s223:cnx ;
            sh:severity sh:Warning ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "If a `Connectable` has s223:connected or s223:connectedTo (i.e. high-level connection specification), it must also have the supporting `cnx` relations (low-level connection specification)."^^xsd:string ;
                    sh:message "s223: {$this} is s223:connected (high-level) to {?otherC} but not connected at the cnx-level."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?otherC
WHERE {
$this s223:connected ?otherC .
FILTER NOT EXISTS {$this s223:cnx+ ?otherC}
}
"""^^xsd:string ] ],
        [ rdfs:comment "If the relation `connectedTo` is present it must associate the `Connectable` with a `Connectable`."^^xsd:string ;
            sh:class s223:Connectable ;
            sh:message "s223: If the relation `connectedTo` is present it must associate the `Connectable` with a `Connectable`."^^xsd:string ;
            sh:name "ConnectableToConnectableShape"^^xsd:string ;
            sh:path s223:connectedTo ],
        [ rdfs:comment "If the relation `cnx` is present it must associate the `Connectable` with a `ConnectionPoint`."^^xsd:string ;
            sh:class s223:ConnectionPoint ;
            sh:message "s223: If the relation `cnx` is present it must associate the `Connectable` with a `ConnectionPoint`."^^xsd:string ;
            sh:path s223:cnx ],
        [ rdfs:comment "If the relation `connectedFrom` is present it must associate the `Connectable` with a `Connectable`."^^xsd:string ;
            sh:class s223:Connectable ;
            sh:message "s223: If the relation `connectedFrom` is present it must associate the `Connectable` with a `Connectable`."^^xsd:string ;
            sh:path s223:connectedFrom ],
        [ rdfs:comment "If the relation `connectedThrough` is present it must associate the `Connectable` with a `Connection`."^^xsd:string ;
            sh:class s223:Connection ;
            sh:message "s223: If the relation `connectedThrough` is present it must associate the `Connectable` with a `Connection`."^^xsd:string ;
            sh:name "EquipmentToConnectionShape"^^xsd:string ;
            sh:path s223:connectedThrough ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Infer the `cnx` relationship using `hasConnectionPoint`."^^xsd:string ;
            sh:name "InferredEquipmentToConnectionPointCnxProperty"^^xsd:string ;
            sh:object [ sh:path s223:hasConnectionPoint ] ;
            sh:predicate s223:cnx ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "Infer the `hasConnectionPoint` relation using `cnx`"^^xsd:string ;
            sh:name "InferredEquipmentToConnectionPointProperty"^^xsd:string ;
            sh:object [ sh:path s223:cnx ] ;
            sh:predicate s223:hasConnectionPoint ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "Infer the `cnx` relation using `isConnectionPointOf`."^^xsd:string ;
            sh:name "InferredEquipmentToConnectionPointCnxPropertyFromInverse"^^xsd:string ;
            sh:object [ sh:path [ sh:inversePath s223:isConnectionPointOf ] ] ;
            sh:predicate s223:cnx ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "Infer the `connectedThrough` relation using `hasConnectionPoint` and `connectsThrough`"^^xsd:string ;
            sh:name "InferredEquipmentToConnectionProperty"^^xsd:string ;
            sh:object [ sh:path ( s223:hasConnectionPoint s223:connectsThrough ) ] ;
            sh:predicate s223:connectedThrough ;
            sh:subject sh:this ],
        [ a sh:SPARQLRule ;
            rdfs:comment "Infer the `connectedTo` relation using `connectsThrough` and `connectsTo`."^^xsd:string ;
            sh:construct """
CONSTRUCT {$this s223:connectedTo ?equipment .}
WHERE {
$this s223:hasConnectionPoint ?cp .
?cp a s223:OutletConnectionPoint .
?cp s223:connectsThrough/s223:connectsTo ?equipment .
}
"""^^xsd:string ;
            sh:name "InferredEquipmentToDownstreamEquipmentProperty"^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ],
        [ a sh:SPARQLRule ;
            rdfs:comment "Infer the `connectedFrom` relations using `connectsThrough` and `connectsFrom`."^^xsd:string ;
            sh:construct """
CONSTRUCT {$this s223:connectedFrom ?equipment .}
WHERE {
$this s223:hasConnectionPoint ?cp .
?cp a s223:InletConnectionPoint .
?cp s223:connectsThrough/s223:connectsFrom ?equipment .
}
"""^^xsd:string ;
            sh:name "InferredEquipmentToUpstreamEquipmentProperty"^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ],
        [ a sh:SPARQLRule ;
            rdfs:comment "Infer the `connected` relation for BiDirectional connections"^^xsd:string ;
            sh:construct """
CONSTRUCT {$this s223:connected ?d2 .}
WHERE {
$this s223:connectedThrough/^s223:connectedThrough ?d2 .
FILTER ($this != ?d2) .
FILTER NOT EXISTS {$this s223:contains* ?d2} .
FILTER NOT EXISTS {?d2 s223:contains* $this} .
}
"""^^xsd:string ;
            sh:name "InferredEquipmentToDownstreamEquipmentProperty"^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ],
        [ a sh:TripleRule ;
            rdfs:comment "Infer the `connected` relation using `connectedFrom`"^^xsd:string ;
            sh:name "InferredEquipmentToEquipmentPropertyfromconnectedFrom"^^xsd:string ;
            sh:object [ sh:path s223:connectedFrom ] ;
            sh:predicate s223:connected ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "Infer the `connected` relation using `connectedTo`"^^xsd:string ;
            sh:name "InferredEquipmentToEquipmentPropertyfromconnectedTo"^^xsd:string ;
            sh:object [ sh:path s223:connectedTo ] ;
            sh:predicate s223:connected ;
            sh:subject sh:this ] .

s223:DCVoltage-DCPositiveVoltage a s223:Class,
        s223:DCVoltage-DCPositiveVoltage,
        sh:NodeShape ;
    rdfs:label "s223:DCVoltage-DCPositiveVoltage"^^xsd:string ;
    s223:hasVoltage s223:Numerical-Voltage ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment """
This class has enumerated instances of common positive voltages.

: DC Positive Voltage Enumerations

| Enumeration |
|:-----------|
| `DCPositiveVoltage-12.0V` |
| `DCPositiveVoltage-190.0V` |
| `DCPositiveVoltage-2.5V` |
| `DCPositiveVoltage-24.0V` |
| `DCPositiveVoltage-3.0V` |
| `DCPositiveVoltage-380.0V` |
| `DCPositiveVoltage-48.0V` |
| `DCPositiveVoltage-5.0V` |
| `DCPositiveVoltage-6.0V` |
| `DCPositiveVoltage-PoE` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Voltage-DCVoltage .

s223:Electricity-DC a s223:Class,
        s223:Electricity-DC,
        sh:NodeShape ;
    rdfs:label "Electricity DC"^^xsd:string ;
    s223:hasVoltage s223:Numerical-Voltage ;
    ns2:subclauses ( s223:DC-12V s223:DC-24V s223:DC-380V s223:DC-48V s223:DC-5V s223:DC-6V s223:DC-PoE ) ;
    rdfs:comment """
This class has enumerated instances of all DC forms of electricity.

: DC Enumerations

| Enumeration |
|:-----------|
| `DC-12V` |
| `DC-24V` |
| `DC-380V` |
| `DC-48V` |
| `DC-5V` |
| `DC-6V` |
| `DC-PoE` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Constituent-Electricity ;
    sh:property [ rdfs:comment "An electricity DC medium must have one or two reference voltages."^^xsd:string ;
            sh:class s223:Numerical-Voltage ;
            sh:maxCount 2 ;
            sh:minCount 1 ;
            sh:path s223:hasVoltage ] .

s223:Sensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Sensor"^^xsd:string ;
    rdfs:comment "A `Sensor` observes an `ObservableProperty` (see {s223:ObservableProperty}) which may be quantifiable (see {s223:QuantifiableObservableProperty}), such as a temperature, flowrate, or concentration, or enumerable (see {s223:EnumeratedObservableProperty}), such as an alarm state or occupancy state."^^xsd:string ;
    rdfs:subClassOf s223:Equipment ;
    sh:property [ rdfs:comment "s223: If the observed `Property` has isDeltaQuantity true, the `Sensor` must have a `hasReferenceLocation` relation."^^xsd:string ;
            sh:path s223:observes ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "s223: If the observed `Property` has isDeltaQuantity true, the `Sensor` must have a `hasReferenceLocation` relation."^^xsd:string ;
                    sh:message "s223: `Sensor` {$this} has `Property` {?x} with isDeltaQuantity true, but the `Sensor` lacks a reference location."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
          SELECT $this ?x
          WHERE {
$this s223:observes/qudt:isDeltaQuantity true .
$this s223:observes ?x .
?x a/rdfs:subClassOf* s223:QuantifiableProperty .
FILTER NOT EXISTS {$this s223:hasReferenceLocation ?y}
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `Sensor` must be associated with exactly one `ObservableProperty` using the relation `observes`."^^xsd:string ;
            sh:class s223:ObservableProperty ;
            sh:maxCount 1 ;
            sh:message "s223: A `Sensor` must be associated with exactly one `ObservableProperty` using the relation `observes`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:observes ],
        [ rdfs:comment "s223: If the `hasReferenceLocation` relation exists, the observed `Property` must have isDeltaQuantity true."^^xsd:string ;
            sh:path s223:observes ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "s223: If the `hasReferenceLocation` relation exists, the observed `Property` must have isDeltaQuantity true."^^xsd:string ;
                    sh:message "s223: `Sensor` {$this} has a reference location, but its `Property` lacks isDeltaQuantity true."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
          SELECT $this
          WHERE {
$this s223:hasReferenceLocation ?y .
$this s223:observes ?x .
?x a/rdfs:subClassOf* s223:QuantifiableProperty .
FILTER NOT EXISTS {$this s223:observes/qudt:isDeltaQuantity true}
}
"""^^xsd:string ] ],
        [ rdfs:comment "If a `Sensor` measures a differential property, it must be associated with exactly 1 of `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasReferenceLocation`."^^xsd:string ;
            sh:maxCount 1 ;
            sh:message "s223: If a `Sensor` measures a differential property, it must be associated with exactly 1 of `Connectable`, `Connection`, or `ConnectionPoint` using the relation `hasReferenceLocation`."^^xsd:string ;
            sh:path s223:hasReferenceLocation ],
        [ rdfs:comment "A `Sensor` must be associated with exactly one location using the relation `hasObservationLocation`."^^xsd:string ;
            sh:maxCount 1 ;
            sh:message "s223: A `Sensor` must be associated with exactly one location using the relation `hasObservationLocation`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path s223:hasObservationLocation ],
        [ rdfs:comment "If the relation `hasMeasurementResolution` is present it must associate a `Sensor` with a `QuantifiableProperty`."^^xsd:string ;
            sh:class s223:QuantifiableProperty ;
            sh:message "s223: If the relation `hasMeasurementResolution` is present it must associate a `Sensor` with a `QuantifiableProperty`."^^xsd:string ;
            sh:path s223:hasMeasurementResolution ] ;
    sh:rule [ a sh:SPARQLRule ;
            rdfs:comment "Infer the `hasObservationLocation` relation for a `Sensor` from the `Property` that it is observing, only if that `Property` is associated with a single entity."^^xsd:string ;
            sh:construct """
CONSTRUCT {$this s223:hasObservationLocation ?something .}
WHERE {
{
SELECT ?prop (COUNT (DISTINCT ?measurementLocation) AS ?count) $this
WHERE {
FILTER (NOT EXISTS {$this s223:hasObservationLocation ?anything}) .
$this s223:observes ?prop .
?measurementLocation s223:hasProperty ?prop .
}
GROUP BY ?prop $this
}
FILTER (?count = 1) .
?something s223:hasProperty ?prop .
{?something a/rdfs:subClassOf* s223:Connectable}
UNION
{?something a/rdfs:subClassOf* s223:Connection}
UNION
{?something a/rdfs:subClassOf* s223:ConnectionPoint}
}
"""^^xsd:string ;
            sh:name "InferredMeasurementLocation"^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ] .

s223:cnx a s223:SymmetricRelation ;
    rdfs:label "cnx"^^xsd:string ;
    rdfs:comment "The `cnx` relation is a symmetric relation used to associate adjacent entities in a connection path (comprised of Equipment-ConnectionPoint-Connection-ConnectionPoint-Equipment sequences)."^^xsd:string .

s223:Concept a s223:Class,
        sh:NodeShape ;
    rdfs:label "Concept"^^xsd:string ;
    s223:abstract true ;
    rdfs:comment """All classes defined in the 223 standard are subclasses of `s223:Concept`.
  See {s223:Substance-Medium} for more details on ensuring compatibility of mediums listed in the 
  constraint table.  
  """^^xsd:string ;
    rdfs:subClassOf rdfs:Resource ;
    sh:property [ rdfs:comment "Incompatible Medium. Case2: An entity with a pure medium and an associated property with constituents."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 2: A pure medium and an associated property with constituents."^^xsd:string ;
                    sh:message "s223: {$this} `hasMedium` of {?m1}, but is associated with property {?prop} that has `ofMedium` of {?m2}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m1 ?prop ?m2
WHERE {
$this s223:hasMedium ?m1 .
$this ?p ?prop .
?prop a/rdfs:subClassOf* s223:Property .
?prop s223:ofMedium ?m2 .
?m2 s223:composedOf/s223:ofConstituent ?s2 .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {
  ?m2 s223:composedOf/s223:ofConstituent ?s12 .
  {?s12 rdfs:subClassOf* ?m1} UNION {?m1 rdfs:subClassOf* ?s12} .
}
}
"""^^xsd:string ] ],
        [ rdfs:comment "Ensure that any instance that is declared to be an instance of an abstract class must also be declared an instance of at least one subClass of that abstract class."^^xsd:string ;
            sh:path s223:abstract ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Ensure that any instance that is declared to be an instance of an abstract class must also be declared an instance of at least one subClass of that abstract class"^^xsd:string ;
                    sh:message "s223: {$this} cannot be declared an instance of only abstract class {?class}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT DISTINCT $this ?class
WHERE {
?class s223:abstract true .
$this a ?class .
OPTIONAL {
?otherClass rdfs:subClassOf+ ?class .
$this a ?otherClass .
FILTER (?class != ?otherClass) .
}
FILTER (!bound (?otherClass)) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `Concept` must be associated with at least one label using the relation label."^^xsd:string ;
            sh:message "s223: A `Concept` must be associated with at least one label using the relation label."^^xsd:string ;
            sh:minCount 1 ;
            sh:path rdfs:label ;
            sh:severity sh:Warning ],
        [ rdfs:comment "Incompatible Medium. Case1: An entity with a pure medium and an associated property with a pure medium."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 1: Two pure mediums."^^xsd:string ;
                    sh:message "s223: {$this} `hasMedium` of {?m1}, but is associated with property {?prop} that has `ofMedium` of {?m2}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m1 ?prop ?m2
WHERE {
$this s223:hasMedium ?m1 .
$this ?p ?prop .
?prop a/rdfs:subClassOf* s223:Property .
?prop s223:ofMedium ?m2 .
FILTER (?m1 != ?m2 ) .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {?m2 s223:composedOf ?c2}
FILTER (NOT EXISTS {?m2 rdfs:subClassOf* ?m1}) .
FILTER (NOT EXISTS {?m1 rdfs:subClassOf* ?m2}) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "If the relation `hasProperty` is present, it must associate the concept with a `Property`."^^xsd:string ;
            sh:class s223:Property ;
            sh:message "s223: If the relation `hasProperty` is present, it must associate the concept with a `Property`."^^xsd:string ;
            sh:path s223:hasProperty ],
        [ rdfs:comment "Incompatible Medium. Case3: An entity with constituents and an associated property with a pure medium."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 3: A medium with constituents and an associated property with a pure medium."^^xsd:string ;
                    sh:message "s223: {$this} `hasMedium` of {?m2}, but is associated with property {?prop} that has `ofMedium` of {?m1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m1 ?prop ?m2
WHERE {
$this s223:hasMedium ?m2 .
$this ?p ?prop .
?prop a/rdfs:subClassOf* s223:Property .
?prop s223:ofMedium ?m1 .
?m2 s223:composedOf/s223:ofConstituent ?s2 .
FILTER NOT EXISTS {?m1 s223:composedOf ?c1} .
FILTER NOT EXISTS {
  ?m2 s223:composedOf/s223:ofConstituent ?s12 .
  {?s12 rdfs:subClassOf* ?m1} UNION {?m1 rdfs:subClassOf* ?s12} .
}
}
"""^^xsd:string ] ],
        [ rdfs:comment "Incompatible Medium. Case4: An entity with constituents and an associated property with constituents."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Incompatible Medium. Case 4: A medium with constituents and an associated property with constituents."^^xsd:string ;
                    sh:message "s223: {$this} `hasMedium` of {?m1}, but is associated with property {?prop} that has `ofMedium` of {?m2}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?m1 ?prop ?m2
WHERE {
$this s223:hasMedium ?m1 .
$this ?p ?prop .
?prop a/rdfs:subClassOf* s223:Property .
?prop s223:ofMedium ?m2 .
    ?m1 s223:composedOf/s223:ofConstituent ?s1 .
    ?m2 s223:composedOf/s223:ofConstituent ?s2 .
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s11 .
    ?m2 s223:composedOf/s223:ofConstituent ?s12 .
    FILTER (?s11 = ?s12) .
  }
  FILTER NOT EXISTS {
    ?m1 s223:composedOf/s223:ofConstituent ?s21 .
    ?m2 s223:composedOf/s223:ofConstituent ?s22 .
    {?s22 rdfs:subClassOf* ?s21} UNION {?s21 rdfs:subClassOf* ?s22} .
  }
}
"""^^xsd:string ] ] ;
    sh:rule [ a sh:SPARQLRule ;
            rdfs:comment "Add an rdfs:label if it is missing."^^xsd:string ;
            sh:construct """
CONSTRUCT {$this rdfs:label ?newLabel .}
WHERE {
FILTER (NOT EXISTS {$this rdfs:label ?something}) .
BIND(REPLACE(STR($this), "^.*/([^/]*)$", "$1") AS ?localNameWithoutHash)
BIND(REPLACE(?localNameWithoutHash, "^.*#(.*)$", "$1") AS ?localName)
BIND(REPLACE(?localName, "-", " ", "i") AS ?newLabel)
}
"""^^xsd:string ;
            sh:name "AddLabelFromLocalName"^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ] .

s223:DCVoltage-DCZeroVoltage a s223:Class,
        s223:DCVoltage-DCZeroVoltage,
        sh:NodeShape ;
    rdfs:label "DCVoltage-DCZero voltage"^^xsd:string ;
    s223:hasVoltage s223:Voltage-0V ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment "DCVoltage-DCZero voltage"^^xsd:string ;
    rdfs:subClassOf s223:Voltage-DCVoltage .

s223:EnumerationKind-Domain a s223:Class,
        s223:EnumerationKind-Domain,
        sh:NodeShape ;
    rdfs:label "EnumerationKind Domain"^^xsd:string ;
    rdfs:comment """
A Domain represents a categorization of building services or specialization
used to characterize equipment or spaces in a building. Example domains include
HVAC, Lighting, and Plumbing.

: Domain Enumerations

| Enumeration |
|:-----------|
| `Domain-ConveyanceSystems` |
| `Domain-Electrical` |
| `Domain-Fire` |
| `Domain-HVAC` |
| `Domain-Lighting` |
| `Domain-Networking` |
| `Domain-Occupancy` |
| `Domain-PhysicalSecurity` |
| `Domain-Plumbing` |
| `Domain-Refrigeration` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

s223:hasDomain a rdf:Property ;
    rdfs:label "has domain"^^xsd:string ;
    rdfs:comment """The relation `hasDomain` is used to associate a `Zone` or `DomainSpace` with an `EnumerationKind-Domain` (e.g., `Domain-HVAC`, `Domain-Lighting`).
"""^^xsd:string .

s223:Constituent-H2O a s223:Class,
        s223:Constituent-H2O,
        sh:NodeShape ;
    rdfs:label "Constituent-H2O"^^xsd:string ;
    rdfs:comment "`Constituent-H2O`"^^xsd:string ;
    rdfs:subClassOf s223:Medium-Constituent .

s223:hasRole a rdf:Property ;
    rdfs:label "hasRole"^^xsd:string ;
    rdfs:comment "The relation `hasRole` is used to indicate the role of an `Equipment`, `Connection`, `ConnectionPoint`, or `System` within a building (e.g., a heating coil will be associated with `Role-Heating`). Possible values are defined in `EnumerationKind-Role` (see {s223:EnumerationKind-Role})."^^xsd:string .

s223:hasProperty a rdf:Property ;
    rdfs:label "has Property"^^xsd:string ;
    rdfs:comment "The relation `hasProperty` is used to associate any `Concept` with a `Property`."^^xsd:string .

s223:Mix-Fluid a s223:Class,
        s223:Mix-Fluid,
        sh:NodeShape ;
    rdfs:label "Mix-Fluid"^^xsd:string ;
    ns2:subclauses ( s223:Fluid-Refrigerant s223:Fluid-Water ) ;
    rdfs:comment """
This is the parent class of substances that are used to transport liquids or gases.

:Fluid Enumerations

| Enumeration |
|:-----------|
| `Fluid-Air` |
| `Fluid-NaturalGas` |
| `Fluid-Oil`  |
| `Fluid-Refrigerant` (see {s223:Fluid-Refrigerant}) |
| `Fluid-Water` (see {s223:Fluid-Water}) |
"""^^xsd:string ;
    rdfs:subClassOf s223:Medium-Mix .

s223:Numerical-LineLineVoltage a s223:Class,
        s223:Numerical-LineLineVoltage,
        sh:NodeShape ;
    rdfs:label "Dimensioned Line-Line Voltage"^^xsd:string ;
    s223:hasVoltage s223:Numerical-Voltage ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment """
This class has enumerated instances of common line-line voltages.

: Line-Line Voltage Enumerations

| Enumeration |
|:-----------|
| `LineLineVoltage-10000V` |
| `LineLineVoltage-190V` |
| `LineLineVoltage-208V` |
| `LineLineVoltage-220V` |
| `LineLineVoltage-240V` |
| `LineLineVoltage-3000V` |
| `LineLineVoltage-3300V` |
| `LineLineVoltage-380V` |
| `LineLineVoltage-400V` |
| `LineLineVoltage-415V` |
| `LineLineVoltage-4160V` |
| `LineLineVoltage-480V` |
| `LineLineVoltage-6000V` |
| `LineLineVoltage-600V` |
| `LineLineVoltage-6600V` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Numerical ;
    sh:property [ rdfs:comment "An AC-Numerical-LineLineVoltage must have a voltage"^^xsd:string ;
            sh:class s223:Numerical-Voltage ;
            sh:minCount 1 ;
            sh:path s223:hasVoltage ] .

s223:observes a rdf:Property ;
    rdfs:label "observes"^^xsd:string ;
    rdfs:comment "The relation `observes` binds a sensor to one `ObservableProperty` (see {s223:ObservableProperty}) which is used by the sensor to generate a measurement value (ex. a temperature) or a simple observation of a stimulus causing a reaction (a current binary switch that closes a dry contact when a fan is powered on)."^^xsd:string .

s223:BidirectionalConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Bidirectional Connection Point"^^xsd:string ;
    rdfs:comment "A `BidirectionalConnectionPoint` is a `ConnectionPoint` for which a Medium is expected to flow either into or out of the associated `Connectable`."^^xsd:string ;
    rdfs:subClassOf s223:ConnectionPoint ;
    sh:property [ rdfs:comment "If the relation `mapsTo` is present it must associate the `BidirectionalConnectionPoint` with a `BidirectionalConnectionPoint`."^^xsd:string ;
            sh:class s223:BidirectionalConnectionPoint ;
            sh:message "s223: If the relation `mapsTo` is present it must associate the `BidirectionalConnectionPoint` with a `BidirectionalConnectionPoint`."^^xsd:string ;
            sh:path s223:mapsTo ],
        [ rdfs:comment "If the relation `pairedConnectionPoint` is present it must associate the `BidirectionalConnectionPoint` with a `ConnectionPoint`."^^xsd:string ;
            sh:class s223:ConnectionPoint ;
            sh:message "s223: If the relation `pairedConnectionPoint` is present it must associate the `BidirectionalConnectionPoint` with a `ConnectionPoint`."^^xsd:string ;
            sh:path s223:pairedConnectionPoint ] .

s223:EnumerationKind-Aspect a s223:Class,
        s223:EnumerationKind-Aspect,
        sh:NodeShape ;
    rdfs:label "EnumerationKind Aspect"^^xsd:string ;
    ns2:subclauses ( <pub:EquipmentInformation> <pub:EquipmentOperation> <pub:OperationalLimits> <pub:ControlParameters> <pub:DeltaQuantities> ) ;
    rdfs:comment """
Aspect enumerations provide context to the meaning of a property value 
that would otherwise not be apparent just from the class or qudt:QuantityKind 
involved. The table lists the values for `EnumerationKind-Aspect` 
and provides a description of the intended meaning.  
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

s223:EnumerationKind a s223:Class,
        s223:EnumerationKind,
        sh:NodeShape ;
    rdfs:label "Enumeration kind"^^xsd:string ;
    rdfs:comment """This is the encapsulating class for all EnumerationKinds. 
  EnumerationKinds define the (closed) set of permissible values for a given purpose. 
  For example, the DayOfWeek `EnumerationKind` enumerates the days of the week and allows no other values.

EnumerationKinds are arranged in a class hierarchy tree, with the root class named `EnumerationKind`. Each subclass is named 
starting with its immediate superclass, followed by a hyphen and a name that is unique among the sibling classes. 
Each class is also an instance of itself. This unusual modeling pattern was used to achieve:

- The ability to set an EnumerationKind value that is more general, or not yet fully specified 
at the time of modeling, such as s223:Electricity-AC without having to state exactly what voltage or frequency it is.

- The ability to use the sh:class SHACL predicate at any level in the EnumerationKind hierarchy 
to constrain a value in the s223 specification, even if it is a more general one such as s223:Electricity-AC in the above example.

Certain validation constraints exist in the standard that evaluate compatibility of EnumerationKinds. 
Two values are deemed compatible if they are the same, if one is a direct ancestor (or descendant) of the other, 
or if they are mixtures sharing at least one constituent."""^^xsd:string ;
    rdfs:subClassOf s223:Concept .

s223:Numerical-LineNeutralVoltage a s223:Class,
        s223:Numerical-LineNeutralVoltage,
        sh:NodeShape ;
    rdfs:label "Dimensioned Line-Neutral Voltage"^^xsd:string ;
    s223:hasVoltage s223:Numerical-Voltage ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    rdfs:comment """
This class has enumerated instances of common line-neutral voltages.

: Line Neutral Voltage Enumerations

| Enumeration |
|:-----------|
| `LineNeutralVoltage-110V` |
| `LineNeutralVoltage-120V` |
| `LineNeutralVoltage-127V` |
| `LineNeutralVoltage-139V` |
| `LineNeutralVoltage-1730V` |
| `LineNeutralVoltage-1900V` |
| `LineNeutralVoltage-208V` |
| `LineNeutralVoltage-219V` |
| `LineNeutralVoltage-231V` |
| `LineNeutralVoltage-2400V` |
| `LineNeutralVoltage-240V` |
| `LineNeutralVoltage-24V` |
| `LineNeutralVoltage-277V` |
| `LineNeutralVoltage-3460V` |
| `LineNeutralVoltage-347V` |
| `LineNeutralVoltage-3810V` |
| `LineNeutralVoltage-5770V` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Numerical ;
    sh:property [ rdfs:comment "An AC-Numerical-LineNeutralVoltage must have a voltage"^^xsd:string ;
            sh:class s223:Numerical-Voltage ;
            sh:minCount 1 ;
            sh:path s223:hasVoltage ] .

s223:Property a s223:Class,
        sh:NodeShape ;
    rdfs:label "Property"^^xsd:string ;
    rdfs:comment """An attribute, quality, or characteristic of a feature of interest.

The `Property` class is the parent of all variations of a `Property`, which are:
`ActuatableProperty` - subclass of `Property` that can be modified by user or machine outside of the model (typically command);
`ObservableProperty` - subclass of `Property` that are observed (typically measures);
`EnumerableProperty` - subclass of `Property` defined by `EnumerationKind`;
`QuantifiableProperty` - subclass of `Property` defined by numerical values.

And their subclass combinations :
`QuantifiableActuatableProperty`,
`QuantifiableObservableProperty`,
`EnumeratedObservableProperty`,
`EnumeratedActuatableProperty`.

A `QuantifiableProperty` (or subClass thereof) must always be associated with a `Unit` and a `QuantityKind`, either explicitly from the `Property`, 
or through the associated Value. If the `Unit` is defined, the SHACL reasoner (if invoked) will figure out and assert the most general `QuantityKind`.

Enumerable properties must be associated with an `EnumerationKind`. Different flavors of properties are shown in Figure 12-1.

![Different flavors of Properties](figures/Figure_12-1_Flavors_of_Properties.svg)

A `Property` instance that is not an instance of one of the subclasses is unconstrained
with respect to its value.
"""^^xsd:string ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ rdfs:comment "If the relation `hasExternalReference` is present it must associate the `Property` with an `ExternalReference`."^^xsd:string ;
            sh:class s223:ExternalReference ;
            sh:message "s223: If the relation `hasExternalReference` is present it must associate the `Property` with an `ExternalReference`."^^xsd:string ;
            sh:path s223:hasExternalReference ],
        [ rdfs:comment "A `Property` can be associated with at most one `EnumerationKind-Substance` using the relation `ofSubstance`."^^xsd:string ;
            sh:class s223:EnumerationKind-Substance ;
            sh:maxCount 1 ;
            sh:message "s223: A `Property` can be associated with at most one `EnumerationKind-Substance` using the relation `ofSubstance`."^^xsd:string ;
            sh:path s223:ofSubstance ],
        [ rdfs:comment "A `Property` must not have both a `hasExternalReference` and a `hasValue` relation."^^xsd:string ;
            sh:path s223:hasValue ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "A `Property` must not have both a `hasExternalReference` and a `hasValue` relation."^^xsd:string ;
                    sh:message "s223: {$this} cannot have both a `hasExternalReference` and a `hasValue` relation."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this
WHERE {
$this s223:hasExternalReference ?ext .
$this s223:hasValue ?val .
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `Property` must not have both a `hasInternalReference` and a `hasValue` relation."^^xsd:string ;
            sh:path s223:hasInternalReference ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "A `Property` must not have both a `hasInternalReference` and a `hasValue` relation."^^xsd:string ;
                    sh:message "s223: {$this} cannot have both a `hasInternalReference` and a `hasValue` relation."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this
WHERE {
$this s223:hasInternalReference ?int .
$this s223:hasValue ?val .
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `Property` must not have both a `hasInternalReference` and a `hasExternalReference` relation."^^xsd:string ;
            sh:path s223:hasInternalReference ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "A `Property` must not have both a `hasInternalReference` and a `hasExternalReference` relation."^^xsd:string ;
                    sh:message "s223: {$this} cannot have both a `hasInternalReference` and a `hasExternalReference` relation."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this
WHERE {
$this s223:hasInternalReference ?int .
$this s223:hasExternalReference ?ext .
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `Property` can use at most one relation `hasValue` if it is required to provide a static value in the model. It is not meant for real-time value (see {s223:hasExternalReference})."^^xsd:string ;
            sh:maxCount 1 ;
            sh:message "s223: A `Property` can use at most one relation `hasValue` if it is required to provide a static value in the model. It is not meant for real-time value (see {s223:hasExternalReference})."^^xsd:string ;
            sh:path s223:hasValue ],
        [ rdfs:comment "A `Property` can be associated with at most one `Substance-Medium` using the relation `ofMedium`."^^xsd:string ;
            sh:class s223:Substance-Medium ;
            sh:maxCount 1 ;
            sh:message "s223: A `Property` can be associated with at most one `Substance-Medium` using the relation `ofMedium`."^^xsd:string ;
            sh:path s223:ofMedium ],
        [ rdfs:comment "If a `Property` has an `ofSubstance` relation, it should also have an `ofMedium` relation."^^xsd:string ;
            sh:path s223:ofSubstance ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "If a `Property` has an `ofSubstance` relation, it should also have an `ofMedium` relation."^^xsd:string ;
                    sh:message "s223: Since Property {$this} has an `ofSubstance` relation, it should also have an `ofMedium` relation."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this
WHERE {
$this s223:ofSubstance ?substance .
FILTER NOT EXISTS {$this s223:ofMedium ?medium} .
}
"""^^xsd:string ] ],
        [ rdfs:comment "If the relation `hasAspect` is present, it must associate the `Property` with an `EnumerationKind`."^^xsd:string ;
            sh:class s223:EnumerationKind ;
            sh:message "s223: If the relation `hasAspect` is present, it must associate the `Property` with an `EnumerationKind`."^^xsd:string ;
            sh:path s223:hasAspect ],
        [ rdfs:comment "A `Property` can be associated with at most one `Function` using the inverse relation `hasOutput`."^^xsd:string ;
            sh:class s223:Function ;
            sh:maxCount 1 ;
            sh:message "s223: A `Property` can be associated with at most one `Function` using the inverse relation `hasOutput`."^^xsd:string ;
            sh:path [ sh:inversePath s223:hasOutput ] ],
        [ rdfs:comment "A `Property` must not be observed (set) by more than one entity."^^xsd:string ;
            sh:maxCount 1 ;
            sh:message "s223: A `Property` must not be observed (set) by more than one entity."^^xsd:string ;
            sh:path [ sh:inversePath s223:observes ] ],
        [ rdfs:comment "If the relation `hasInternalReference` is present it must associate the `Property` with at most one other`Property`."^^xsd:string ;
            sh:class s223:Property ;
            sh:maxCount 1 ;
            sh:message "s223: If the relation `hasInternalReference` is present it must associate the `Property` with at most one other `Property`."^^xsd:string ;
            sh:path s223:hasInternalReference ],
        [ rdfs:comment ""^^xsd:string ;
            sh:path s223:ofConstituent ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "If an incoming relation `composedOf` exists, then the `Property` must have a declared substance using the relation `ofConstituent`."^^xsd:string ;
                    sh:message "s223: `Property` {$this} is referred to by {?something} with s223:composedOf, but the `Property` has no value for s223:ofConstituent."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?something
WHERE {
?something s223:composedOf $this .
FILTER NOT EXISTS {$this s223:ofConstituent ?someSubstance} .
}
"""^^xsd:string ] ] ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "A `Property` cannot be declared an instance of both an `ActuatableProperty` and an `ObservableProperty`."^^xsd:string ;
            sh:message "s223: {$this} cannot be declared an instance of both an `ActuatableProperty` and an `ObservableProperty`."^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
SELECT $this
WHERE {
$this a/rdfs:subClassOf* s223:ActuatableProperty .
$this a/rdfs:subClassOf* s223:ObservableProperty .
}
"""^^xsd:string ] .

s223:ConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "ConnectionPoint"^^xsd:string ;
    s223:abstract true ;
    rdfs:comment """
A `ConnectionPoint` is an abstract modeling construct used to represent the fact that one connectable thing can be `connected` to another connectable thing using a `Connection`. It is the abstract representation of the flange, wire terminal, or other physical feature where a connection is made. `Equipment`, DomainSpaces and Junctions can have one or more connection points (see {s223:Connectable}).

A `ConnectionPoint` is constrained to relate to a specific medium such as air, water, or electricity which determines what other things can be connected to it. For example, constraining a ConnectionPoint to be for air means it cannot be used for an electrical connection.

A `ConnectionPoint` belongs to exactly one connectable thing (see {s223:Connectable}).

Connection points are represented graphically in this standard by a triangle with the point indicating a direction of flow, or a diamond in the case of a bidirectional flow as shown in Figure 6-1. 

![Graphical Representation of a ConnectionPoint.](figures/Figure_5-2_Graphical_Depiciton_of_Connection_Points.svg)

 """^^xsd:string ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ rdfs:comment "Ensure that the Medium identified by a `ConnectionPoint` via the s223:hasMedium relation is compatible with the Medium identified by the entity identified by the `mapsTo`+ relation."^^xsd:string ;
            sh:name "Test for compatible declared Medium"^^xsd:string ;
            sh:path s223:hasMedium ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Ensure that the Medium identified by a `ConnectionPoint` via the s223:hasMedium relation is compatible with the Medium identified by the entity identified by the `mapsTo`+ relation."^^xsd:string ;
                    sh:message "s223: {$this} declares a medium of {?a}, but the medium of {?b} is declared by {?target} pointed to by the `mapsTo`+ relation."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT DISTINCT $this ?a ?b ?target
WHERE {
$this s223:hasMedium ?a .
$this s223:mapsTo+ ?target .
?target s223:hasMedium ?b .
?a a/rdfs:subClassOf* s223:Substance-Medium .
?b a/rdfs:subClassOf* s223:Substance-Medium .
FILTER (?a != ?b ) .
FILTER (NOT EXISTS {?b a/rdfs:subClassOf* ?a}) .
FILTER (NOT EXISTS {?a a/rdfs:subClassOf* ?b}) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `ConnectionPoint` must not have both a `mapsTo` and a `connectsThrough` relation."^^xsd:string ;
            sh:path s223:mapsTo ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "A `ConnectionPoint` must not have both a `mapsTo` and a `connectsThrough` relation."^^xsd:string ;
                    sh:message "s223: {$this} cannot have both a `mapsTo` {?uppercp} and a `connectsThrough` {?connection}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?uppercp ?connection
WHERE {
$this s223:mapsTo ?uppercp .
$this s223:connectsThrough ?connection .
?connection a/rdfs:subClassOf* s223:Connection .
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `ConnectionPoint` can be associated with at most one other `ConnectionPoint` using the relation `mapsTo`"^^xsd:string ;
            sh:class s223:ConnectionPoint ;
            sh:maxCount 1 ;
            sh:message "s223: A `ConnectionPoint` can be associated with at most one other `ConnectionPoint` using the relation `mapsTo`"^^xsd:string ;
            sh:path s223:mapsTo ],
        [ rdfs:comment "If a `ConnectionPoint` `mapsTo` another `ConnectionPoint`, the respective `Equipment` should have a `contains` relation."^^xsd:string ;
            sh:path s223:mapsTo ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "If a `ConnectionPoint` `mapsTo` another `ConnectionPoint`, the respective `Equipment` should have a `contains` relation."^^xsd:string ;
                    sh:message "s223: {?otherEquipment} should contain {?equipment} because `ConnectionPoint` {$this} has a `mapsTo` relation."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?equipment ?otherEquipment
WHERE {
$this s223:mapsTo ?otherCP .
?equipment s223:hasConnectionPoint $this .
?otherEquipment s223:hasConnectionPoint ?otherCP .
FILTER NOT EXISTS {?otherEquipment s223:contains ?equipment}
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `ConnectionPoint` can be associated with at most one other `ConnectionPoint` using the inverse of relation `mapsTo`"^^xsd:string ;
            sh:class s223:ConnectionPoint ;
            sh:maxCount 1 ;
            sh:message "s223: A `ConnectionPoint` can be associated with at most one other `ConnectionPoint` using the inverse of relation `mapsTo`"^^xsd:string ;
            sh:path [ sh:inversePath s223:mapsTo ] ],
        [ rdfs:comment "If a `ConnectionPoint` lacks a `connectsThrough` and `mapsTo` relation, but is associated with a `Junction` or `Equipment` that is contained by an `Equipment`, then suggest that the `ConnectionPoint` might need a `mapsTo` relation to a `ConnectionPoint` of the containing `Equipment`."^^xsd:string ;
            sh:path s223:mapsTo ;
            sh:severity sh:Info ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "If a `ConnectionPoint` lacks a `connectsThrough` and `mapsTo` relation, but is associated with a `Junction` or `Equipment` that is contained by an `Equipment`, then suggest that the `ConnectionPoint` might need a `mapsTo` relation to a `ConnectionPoint` of the containing `Equipment`."^^xsd:string ;
                    sh:message "s223: `ConnectionPoint` {$this} could be missing a `mapsTo` relation to a `ConnectionPoint` of {?containerEquipment} because it is associated with a `Junction` or `Equipment` that is contained by {?containerEquipment}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
    SELECT $this ?containerEquipment
    WHERE {
        FILTER NOT EXISTS {$this s223:connectsThrough ?anything1} .
        FILTER NOT EXISTS {$this s223:mapsTo ?anything2} .
        FILTER NOT EXISTS {?anything3 s223:hasBoundaryConnectionPoint $this} .
        $this s223:isConnectionPointOf ?equipment .
        ?containerEquipment s223:contains ?equipment .
        }
        """^^xsd:string ] ],
        [ rdfs:comment "A `ConnectionPoint` must be associated with at most one `Connection` using the `cnx` relation"^^xsd:string ;
            sh:message "s223: A `ConnectionPoint` must be associated with at most one `Connection` using the `cnx` relation"^^xsd:string ;
            sh:path s223:cnx ;
            sh:qualifiedMaxCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Connection ] ;
            sh:qualifiedValueShapesDisjoint true ],
        [ rdfs:comment "If the relation `hasElectricalPhase` is present it must associate the `ConnectionPoint` with an ElectricalPhaseIdentifier or ElectricalVoltagePhases."^^xsd:string ;
            sh:message "s223: If the relation `hasElectricalPhase` is present it must associate the `ConnectionPoint` with an ElectricalPhaseIdentifier or ElectricalVoltagePhases."^^xsd:string ;
            sh:or ( [ sh:class s223:EnumerationKind-ElectricalPhaseIdentifier ] [ sh:class s223:EnumerationKind-ElectricalVoltagePhases ] ) ;
            sh:path s223:hasElectricalPhase ],
        [ rdfs:comment "A `ConnectionPoint` must be associated with exactly one `Substance-Medium` using the relation `hasMedium`."^^xsd:string ;
            sh:class s223:Substance-Medium ;
            sh:maxCount 1 ;
            sh:message "s223: A `ConnectionPoint` must be associated with exactly one `Substance-Medium` using the relation `hasMedium`."^^xsd:string ;
            sh:minCount 1 ;
            sh:name "ConnectionPoint medium"^^xsd:string ;
            sh:path s223:hasMedium ],
        [ rdfs:comment "If a `ConnectionPoint` lacks a `connectsThrough` and `mapsTo` relation, and is not associated with a `Junction` or `Equipment` that is contained by an `Equipment`, then suggest that the `ConnectionPoint` probably needs an association with a `Connection`."^^xsd:string ;
            sh:path s223:connectsThrough ;
            sh:severity sh:Info ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "If a `ConnectionPoint` lacks a `connectsThrough` and `mapsTo` relation, and is not associated with a `Junction` or `Equipment` that is contained by an `Equipment`, then suggest that the `ConnectionPoint` probably needs an association with a `Connection`."^^xsd:string ;
                    sh:message "s223: `ConnectionPoint` {$this} probably needs an association with a `Connection`, or use of `hasOptionalConnectionPoint` or `hasBoundaryConnectionPoint` qualifiers."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
    SELECT $this 
    WHERE {
        FILTER NOT EXISTS {?sys1 s223:hasBoundaryConnectionPoint $this} .
        FILTER NOT EXISTS {?sys2 s223:hasOptionalConnectionPoint $this} .
        FILTER NOT EXISTS {$this s223:connectsThrough ?anything1} .
        FILTER NOT EXISTS {$this s223:mapsTo ?anything2} .
        $this s223:isConnectionPointOf ?equipment .
        FILTER NOT EXISTS {?containerEquipment s223:contains ?equipment} .
        }
        """^^xsd:string ] ],
        [ rdfs:comment "If the relation `hasRole` is present it must associate the `ConnectionPoint` with an `EnumerationKind-Role`."^^xsd:string ;
            sh:class s223:EnumerationKind-Role ;
            sh:message "s223: If the relation `hasRole` is present it must associate the `ConnectionPoint` with an `EnumerationKind-Role`."^^xsd:string ;
            sh:path s223:hasRole ],
        [ rdfs:comment "A `ConnectionPoint` must be associated with at most one `Connection` using the relation `connectsThrough`."^^xsd:string ;
            sh:class s223:Connection ;
            sh:maxCount 1 ;
            sh:message "s223: This `ConnectionPoint` must be associated with at most one `Connection`."^^xsd:string ;
            sh:name "ConnectionPointToConnectionShape"^^xsd:string ;
            sh:path s223:connectsThrough ;
            sh:severity sh:Info ],
        [ rdfs:comment "A `ConnectionPoint` must be associated with at most one `Connectable` using the `cnx` relation."^^xsd:string ;
            sh:message "s223: A `ConnectionPoint` must be associated with at most one `Connectable` using the `cnx` relation."^^xsd:string ;
            sh:path s223:cnx ;
            sh:qualifiedMaxCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:Connectable ] ;
            sh:qualifiedValueShapesDisjoint true ],
        [ rdfs:comment "A `ConnectionPoint` must be associated with exactly one `Connectable` using the relation `isConnectionPointOf`."^^xsd:string ;
            sh:class s223:Connectable ;
            sh:maxCount 1 ;
            sh:message "s223: A `ConnectionPoint` must be associated with exactly one `Connectable` using the relation `isConnectionPointOf`."^^xsd:string ;
            sh:minCount 1 ;
            sh:name "ConnectionPointToEquipmentShape"^^xsd:string ;
            sh:path s223:isConnectionPointOf ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Infer the `hasElectricalPhase` value from any connected `Conductor`."^^xsd:string ;
            sh:object [ sh:path ( s223:connectsThrough s223:hasElectricalPhase ) ] ;
            sh:predicate s223:hasElectricalPhase ;
            sh:subject sh:this ] .

s223:Signal-Ethernet a s223:Class,
        s223:Signal-Ethernet,
        sh:NodeShape ;
    rdfs:label "Signal Ethernet"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses of common Ethernet protocols.

: Signal Enumerations

| Enumeration |
|:-----------|
| `Ethernet-Cat1` |
| `Ethernet-Cat2` |
| `Ethernet-Cat3` |
| `Ethernet-Cat4` |
| `Ethernet-Cat5` |
| `Ethernet-Cat5e` |
| `Ethernet-Cat6` |
| `Ethernet-Cat6a` |
| `Ethernet-Cat7` |
| `Ethernet-Cat7a` |
| `Ethernet-Cat8` |
| `Ethernet-FiberOM1` |
| `Ethernet-FiberOM2` |
| `Ethernet-FiberOM3` |
| `Ethernet-FiberOM4` |
| `Ethernet-FiberOM5` |
| `Ethernet-FiberOS1` |
| `Ethernet-FiberOS2` |"""^^xsd:string ;
    rdfs:subClassOf s223:Electricity-Signal .

ns1:hasQuantityKind rdfs:comment "A reference to the `QuantityKind` of a `QuantifiableProperty` of interest, e.g. quantitykind:Temperature."^^xsd:string .

s223:Fluid-Water a s223:Class,
        s223:Fluid-Water,
        sh:NodeShape ;
    rdfs:label "Fluid-Water"^^xsd:string ;
    s223:composedOf [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ],
        [ a s223:QuantifiableProperty ;
            rdfs:label "Water conc"^^xsd:string ;
            s223:ofConstituent s223:Constituent-H2O ;
            ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/VolumeFraction> ;
            ns1:hasUnit <http://qudt.org/vocab/unit/PERCENT> ] ;
    ns2:subclauses ( s223:Water-GlycolSolution ),
        ( s223:Water-GlycolSolution ) ;
    rdfs:comment """
This class has enumerated subclasses of water and aqueous solutions in various states.

:Water Enumerations

| Enumeration |
|:-----------|
| `Water-ChilledWater` |
| `Water-GlycolSolution` (see {s223:Water-GlycolSolution}) |
| `Water-HotWater` |
| `Water-Steam` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Mix-Fluid .

s223:Constituent-Electricity a s223:Class,
        s223:Constituent-Electricity,
        sh:NodeShape ;
    rdfs:label "Electricity"^^xsd:string ;
    ns2:subclauses ( s223:Electricity-AC s223:Electricity-DC s223:Electricity-Signal ),
        ( s223:Electricity-AC s223:Electricity-DC s223:Electricity-Signal ) ;
    rdfs:comment """
This class has enumerated subclasses of all forms of electricity, including AC and DC.

:Electricity Enumerations

| Enumeration |
|:-----------|
| `Electricity-AC` (see {s223:Electricity-AC})|
| `Electricity-DC` (see {s223:Electricity-DC})|
| `Electricity-Earth`  |
| `Constituent-Neutral` |
| `Constituent-Signal` (see {s223:Electricity-Signal}) |
"""^^xsd:string ;
    rdfs:subClassOf s223:Medium-Constituent .

s223:EnumerationKind-Role a s223:Class,
        s223:EnumerationKind-Role,
        sh:NodeShape ;
    rdfs:label "Role"^^xsd:string ;
    rdfs:comment """
This class has enumerated subclasses of roles played by entities, such as cooling, generator, 
relief, return. The use of these enumeration kinds are to indicate the **capability** of an entity to play a given 
role, rather than as an indication of the role or mode being active at any given point in time. In other words, 
some reversible piece of equipment might play a role of `Role-Cooling` at one time, and `Role-Heating` at another. 
Such an entity would be described by two triples to indicate these two allowable roles. To determine what role 
is active at a particular time is not determinable within the scope of 223, but rather through a Property with 
an ExternalReference to telemetry or control data.

: Role Enumerations

| Enumeration |
|:-----------|
| `Role-Condenser` |
| `Role-Cooling` |
| `Role-Dehumidifying` |
| `Role-Discharge` |
| `Role-Economizer` |
| `Role-Evaporator` |
| `Role-Exhaust` |
| `Role-Expansion` |
| `Role-Generator` |
| `Role-HeatRecovery` |
| `Role-Heating` |
| `Role-Load` |
| `Role-Primary` |
| `Role-Recirculating` |
| `Role-Relief` |
| `Role-Return` |
| `Role-Secondary` |
| `Role-Supply` |
| `Role-Ventilating` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind .

s223:Frequency-50Hz a s223:Class,
        s223:Frequency-50Hz,
        sh:NodeShape ;
    rdfs:label "50 Hertz"^^xsd:string ;
    s223:hasValue 50.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Frequency> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/HZ> ;
    rdfs:comment "50 Hertz"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Frequency .

s223:Fluid-Air a s223:Class,
        s223:Fluid-Air,
        sh:NodeShape ;
    rdfs:label "Fluid-Air"^^xsd:string ;
    rdfs:comment "This class has enumerated subclasses of Air in various states."^^xsd:string ;
    rdfs:subClassOf s223:Mix-Fluid .

s223:NumberOfElectricalPhases-ThreePhase a s223:Class,
        s223:NumberOfElectricalPhases-ThreePhase,
        sh:NodeShape ;
    rdfs:label "Three Phase AC Electricity"^^xsd:string ;
    s223:hasValue 3.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Dimensionless> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/NUM> ;
    rdfs:comment "Three Phase AC Electricity"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-NumberOfElectricalPhases .

s223:QuantifiableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Quantifiable Property"^^xsd:string ;
    rdfs:comment "This class is for quantifiable values that describe an object (`System`, `Equipment`, etc.) that are typically static (`hasValue`). That is, they are neither measured nor specified in the course of operations."^^xsd:string ;
    rdfs:subClassOf s223:Property ;
    sh:property [ rdfs:comment "A `QuantifiableProperty` can be associated with a`QuantifiableProperty` using the relation `hasThreshold`."^^xsd:string ;
            sh:class s223:QuantifiableProperty ;
            sh:message "s223: A `QuantifiableProperty` can be associated with a`QuantifiableProperty` using the relation `hasThreshold`."^^xsd:string ;
            sh:path s223:hasThreshold ],
        [ rdfs:comment "A `QuantifiableProperty` should use `s223:hasValue` instead of `qudt:value`."^^xsd:string ;
            sh:maxCount 0 ;
            sh:message "s223: A `QuantifiableProperty` should use `s223:hasValue` instead of `qudt:value`."^^xsd:string ;
            sh:path ns1:value ],
        [ rdfs:comment "A `QuantifiableProperty` can be associated with at most one `Unit` using the relation `hasUnit`."^^xsd:string ;
            sh:class ns1:Unit ;
            sh:maxCount 1 ;
            sh:message "s223: A `QuantifiableProperty` can be associated with at most one `Unit` using the relation `hasUnit`."^^xsd:string ;
            sh:path ns1:hasUnit ],
        [ rdfs:comment "This `QuantifiableProperty` and the `Deadband` associated with it have non-commensurate `QuantityKind`s."^^xsd:string ;
            sh:path ns1:hasQuantityKind ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "This `QuantifiableProperty` and the `Deadband` associated with it have non-commensurate `QuantityKind`s."^^xsd:string ;
                    sh:message "s223: {$this} uses `QuantityKind` {?pqk} with DimensionVector {?pdv}, while `Deadband` {?deadband} uses `QuantityKind` {?dqk} with DimensionVector {?ddv}. These are non-commensurate"^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?deadband ?pqk ?dqk ?pdv ?ddv
WHERE {
$this qudt:hasQuantityKind ?pqk .
$this s223:hasDeadband ?deadband .
?deadband qudt:hasQuantityKind ?dqk .
?pqk qudt:hasDimensionVector ?pdv .
?dqk qudt:hasDimensionVector ?ddv .
FILTER (?pqk != ?dqk) .
FILTER (?pdv != ?ddv) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `QuantifiableProperty` should use `s223:hasValue` instead of `qudt:value`."^^xsd:string ;
            sh:maxCount 0 ;
            sh:message "s223: A `QuantifiableProperty` should use `s223:hasValue` instead of `qudt:value`."^^xsd:string ;
            sh:path ns1:value ],
        [ rdfs:comment "This `QuantifiableProperty` uses a different `Unit` than the `Deadband` associated with it."^^xsd:string ;
            sh:path ns1:hasUnit ;
            sh:severity sh:Info ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "This `QuantifiableProperty` uses a different `Unit` than the `Deadband` associated with it."^^xsd:string ;
                    sh:message "s223: {$this} uses `Unit` {?punit}, while `Deadband` {?deadband} uses `Unit` {?dunit}. Be careful."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?deadband ?punit ?dunit
WHERE {
$this qudt:hasUnit ?punit .
$this s223:hasDeadband ?deadband .
?deadband qudt:hasUnit ?dunit .
?punit qudt:hasDimensionVector ?pdv .
?dunit qudt:hasDimensionVector ?ddv .
FILTER (?punit != ?dunit) .
FILTER (?pdv = ?ddv) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "This `QuantifiableProperty` cannot have a value without a `Unit`."^^xsd:string ;
            sh:path s223:hasValue ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "This `QuantifiableProperty` cannot have a value without a `Unit`."^^xsd:string ;
                    sh:message "s223: {$this} referenced by {?subject} has a value of {?v} but does not specify a `Unit`."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?v ?subject
WHERE {
$this s223:hasValue ?v .
FILTER NOT EXISTS {$this qudt:hasUnit ?u} .
?subject ?p $this .
}
"""^^xsd:string ] ],
        [ rdfs:comment """Normally, a `QuantifiableProperty` is associated with a static decimal value using `hasValue`, along with a single 
`Unit` and `QuantityKind`. However, in some cases, a `QuantifiableProperty` may instead be associated with a `QuantityValue` using the relation 
`quantityValue`. This allows the `QuantityValue` to express multiple equivalent combinations of `Unit` and value."""^^xsd:string ;
            sh:class ns1:QuantityValue ;
            sh:message """Normally, a `QuantifiableProperty` is associated with a static decimal value using `hasValue`, along with a single 
`Unit` and `QuantityKind`. However, in some cases, a `QuantifiableProperty` may instead be associated with a `QuantityValue` using the relation 
`quantityValue`. This allows the `QuantityValue` to express multiple equivalent combinations of `Unit` and value."""^^xsd:string ;
            sh:path ns1:quantityValue ],
        [ rdfs:comment "This `QuantifiableProperty` and the associated `Deadband` use non-commensurate `Unit`s."^^xsd:string ;
            sh:path ns1:hasUnit ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "This `QuantifiableProperty` and the associated `Deadband` use non-commensurate `Unit`s."^^xsd:string ;
                    sh:message "s223: {$this} uses `Unit` {?punit}, while `Deadband` {?deadband} uses `Unit` {?dunit}. These are non-commensurate."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?deadband ?punit ?dunit
WHERE {
$this qudt:hasUnit ?punit .
$this s223:hasDeadband ?deadband .
?deadband qudt:hasUnit ?dunit .
?punit qudt:hasDimensionVector ?pdv .
?dunit qudt:hasDimensionVector ?ddv .
FILTER (?punit != ?dunit) .
FILTER (?pdv != ?ddv) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `QuantifiableProperty` can be associated with a `QuantifiableProperty` using the relation `hasDeadband`."^^xsd:string ;
            sh:class s223:QuantifiableProperty ;
            sh:message "s223: A `QuantifiableProperty` can be associated with a `QuantifiableProperty` using the relation `hasDeadband`."^^xsd:string ;
            sh:path s223:hasDeadband ],
        [ rdfs:comment "This `QuantifiableProperty` and the Setpoint associated with it have non-commensurate `QuantityKind`s."^^xsd:string ;
            sh:path ns1:hasQuantityKind ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "This `QuantifiableProperty` and the Setpoint associated with it have non-commensurate `QuantityKind`s."^^xsd:string ;
                    sh:message "s223: {$this} uses `QuantityKind` {?pqk} with DimensionVector {?pdv}, while Setpoint {?setpoint} uses `QuantityKind` {?sqk} with DimensionVector {?sdv}. These are non-commensurate"^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?setpoint ?pqk ?sqk ?pdv ?sdv
WHERE {
$this qudt:hasQuantityKind ?pqk .
$this s223:hasSetpoint ?setpoint .
?setpoint qudt:hasQuantityKind ?sqk .
?pqk qudt:hasDimensionVector ?pdv .
?sqk qudt:hasDimensionVector ?sdv .
FILTER (?pqk != ?sqk) .
FILTER (?pdv != ?sdv) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "This `QuantifiableProperty` uses a different `Unit` than the threshold associated with it."^^xsd:string ;
            sh:path ns1:hasUnit ;
            sh:severity sh:Info ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "This `QuantifiableProperty` uses a different `Unit` than the threshold associated with it."^^xsd:string ;
                    sh:message "s223: {$this} uses `Unit` {?punit}, while threshold {?threshold} uses `Unit` {?tunit}. Be careful."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?threshold ?punit ?tunit
WHERE {
$this qudt:hasUnit ?punit .
$this s223:hasThreshold ?threshold .
?threshold qudt:hasUnit ?tunit .
?punit qudt:hasDimensionVector ?pdv .
?tunit qudt:hasDimensionVector ?tdv .
FILTER (?punit != ?tunit) .
FILTER (?pdv = ?tdv) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "This `QuantifiableProperty` and the threshold associated with it have non-commensurate `QuantityKind`s."^^xsd:string ;
            sh:path ns1:hasQuantityKind ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "This `QuantifiableProperty` and the threshold associated with it have non-commensurate `QuantityKind`s."^^xsd:string ;
                    sh:message "s223: {$this} uses `QuantityKind` {?pqk} with DimensionVector {?pdv}, while threshold {?threshold} uses `QuantityKind` {?tqk} with DimensionVector {?tdv}. These are non-commensurate"^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?threshold ?pqk ?sqk ?pdv ?sdv
WHERE {
$this qudt:hasQuantityKind ?pqk .
$this s223:hasThreshold ?threshold .
?threshold qudt:hasQuantityKind ?tqk .
?pqk qudt:hasDimensionVector ?pdv .
?tqk qudt:hasDimensionVector ?tdv .
FILTER (?pqk != ?tqk) .
FILTER (?pdv != ?tdv) .
}
"""^^xsd:string ] ],
        [ rdfs:comment """A `QuantifiableProperty` can be associated with an optional Boolean flag using the relation isDeltaQuantity. 
If the relation isDeltaQuantity has a value of true, the associated value should be interpreted as a difference reading, such as a 
temperature difference. This is needed to distinguish between a temperature reading and a temperature difference reading, which
affects unit conversion calculations."""^^xsd:string ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:message """A `QuantifiableProperty` can be associated with an optional Boolean flag using the relation isDeltaQuantity. 
If the relation isDeltaQuantity has a value of true, the associated value should be interpreted as a difference reading, such as a 
temperature difference. This is needed to distinguish between a temperature reading and a temperature difference reading, which
affects unit conversion calculations."""^^xsd:string ;
            sh:path ns1:isDeltaQuantity ],
        [ rdfs:comment "This `QuantifiableProperty` and the associated setpoint use non-commensurate `Unit`s."^^xsd:string ;
            sh:path ns1:hasUnit ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "This `QuantifiableProperty` and the associated setpoint use non-commensurate `Unit`s."^^xsd:string ;
                    sh:message "s223: {$this} uses `Unit` {?punit}, while setpoint {?setpoint} uses `Unit` {?sunit}. These are non-commensurate."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?setpoint ?punit ?sunit
WHERE {
$this qudt:hasUnit ?punit .
$this s223:hasSetpoint ?setpoint .
?setpoint qudt:hasUnit ?sunit .
?punit qudt:hasDimensionVector ?pdv .
?sunit qudt:hasDimensionVector ?sdv .
FILTER (?punit != ?sunit) .
FILTER (?pdv != ?sdv) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "A `QuantifiableProperty` can be associated with a `QuantifiableProperty` using the relation `hasSetpoint`."^^xsd:string ;
            sh:class s223:QuantifiableProperty ;
            sh:message "s223: A `QuantifiableProperty` can be associated with a `QuantifiableProperty` using the relation `hasSetpoint`."^^xsd:string ;
            sh:path s223:hasSetpoint ],
        [ rdfs:comment "A `QuantifiableProperty` must be associated with a `QuantityKind` using the relation `hasQuantityKind`."^^xsd:string ;
            sh:class ns1:QuantityKind ;
            sh:maxCount 1 ;
            sh:message "s223: A `QuantifiableProperty` must be associated with a `QuantityKind` using the relation `hasQuantityKind`."^^xsd:string ;
            sh:minCount 1 ;
            sh:path ns1:hasQuantityKind ],
        [ rdfs:comment "This `QuantifiableProperty` and the associated threshold use non-commensurate `Unit`s."^^xsd:string ;
            sh:path ns1:hasUnit ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "This `QuantifiableProperty` and the associated threshold use non-commensurate `Unit`s."^^xsd:string ;
                    sh:message "s223: {$this} uses `Unit` {?punit}, while threshold {?threshold} uses `Unit` {?tunit}. These are non-commensurate."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?threshold ?punit ?tunit
WHERE {
$this qudt:hasUnit ?punit .
$this s223:hasThreshold ?threshold .
?threshold qudt:hasUnit ?tunit .
?punit qudt:hasDimensionVector ?pdv .
?tunit qudt:hasDimensionVector ?tdv .
FILTER (?punit != ?tunit) .
FILTER (?pdv != ?tdv) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "This `QuantifiableProperty` uses a different `Unit` than the setpoint associated with it."^^xsd:string ;
            sh:path ns1:hasUnit ;
            sh:severity sh:Info ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "This `QuantifiableProperty` uses a different `Unit` than the setpoint associated with it."^^xsd:string ;
                    sh:message "s223: {$this} uses `Unit` {?punit}, while setpoint {?setpoint} uses `Unit` {?sunit}. Be careful."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?setpoint ?punit ?sunit
WHERE {
$this qudt:hasUnit ?punit .
$this s223:hasSetpoint ?setpoint .
?setpoint qudt:hasUnit ?sunit .
?punit qudt:hasDimensionVector ?pdv .
?sunit qudt:hasDimensionVector ?sdv .
FILTER (?punit != ?sunit) .
FILTER (?pdv = ?sdv) .
}
"""^^xsd:string ] ] ;
    sh:rule [ a sh:SPARQLRule ;
            rdfs:comment "Infer the `hasAspect s223:Aspect-Setpoint` for properties referred to by `hasSetpoint`"^^xsd:string ;
            sh:construct """
CONSTRUCT {?y s223:hasAspect  s223:Aspect-Setpoint}
WHERE {
?prop s223:hasSetpoint ?y .
FILTER NOT EXISTS {?y s223:hasAspect s223:Aspect-Setpoint}
}
"""^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ],
        [ a sh:SPARQLRule ;
            rdfs:comment "Infer the `hasAspect s223:Aspect-Deadband` for properties referred to by `hasDeadband`"^^xsd:string ;
            sh:construct """
CONSTRUCT {?y s223:hasAspect  s223:Aspect-Deadband}
WHERE {
?prop s223:hasDeadband ?y .
FILTER NOT EXISTS {?y s223:hasAspect s223:Aspect-Deadband}
}
"""^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ],
        [ a sh:SPARQLRule ;
            rdfs:comment "Infer the `hasQuantityKind` relation if it is unambiguous."^^xsd:string ;
            sh:construct """
CONSTRUCT {
$this qudt:hasQuantityKind ?uniqueqk
}
WHERE {
{
SELECT $this (COUNT (DISTINCT (?qk)) AS ?count)
WHERE {
FILTER (NOT EXISTS {$this qudt:hasQuantityKind ?something}) .
$this qudt:hasUnit/qudt:hasQuantityKind ?qk .
}
GROUP BY $this
}
FILTER (?count = 1)
$this qudt:hasUnit/qudt:hasQuantityKind ?uniqueqk .
}
"""^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ],
        [ a sh:SPARQLRule ;
            rdfs:comment "Infer the `hasAspect s223:Aspect-Threshold` for properties referred to by `hasThreshold`"^^xsd:string ;
            sh:construct """
CONSTRUCT {?y s223:hasAspect  s223:Aspect-Threshold}
WHERE {
?prop s223:hasThreshold ?y .
FILTER NOT EXISTS {?y s223:hasAspect s223:Aspect-Threshold}
}
"""^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ] ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Checks for consistent dimension vectors for a `QuantityKind` and the `Unit`"^^xsd:string ;
            sh:message "s223: Inconsistent dimensionalities among the `Property`'s `Unit` and `Property`'s `QuantityKind`"^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
            sh:select """
SELECT $this
   WHERE 
{
      $this qudt:hasQuantityKind/qudt:hasDimensionVector ?qkdv1 .
      $this qudt:hasUnit/qudt:hasDimensionVector ?qkdv2 .
FILTER (?qkdv1 != ?qkdv2) .
}
"""^^xsd:string ] .

s223:OutletConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Outlet Connection Point"^^xsd:string ;
    rdfs:comment "An `OutletConnectionPoint` is a `ConnectionPoint` for which a Medium is expected to flow out of the associated `Connectable`."^^xsd:string ;
    rdfs:subClassOf s223:ConnectionPoint ;
    sh:property [ rdfs:comment "If the relation `pairedConnectionPoint` is present it must associate the `OutletConnectionPoint` with an `InletConnectionPoint` or `BidirectionalConnectionPoint`."^^xsd:string ;
            sh:message "s223: If the relation `pairedConnectionPoint` is present it must associate the `OutletConnectionPoint` with an `InletConnectionPoint` or `BidirectionalConnectionPoint`."^^xsd:string ;
            sh:or ( [ sh:class s223:InletConnectionPoint ] [ sh:class s223:BidirectionalConnectionPoint ] ) ;
            sh:path s223:pairedConnectionPoint ],
        [ rdfs:comment "If the relation `mapsTo` is present it must associate the `OutletConnectionPoint` with an `OutletConnectionPoint`."^^xsd:string ;
            sh:class s223:OutletConnectionPoint ;
            sh:message "s223: If the relation `mapsTo` is present it must associate the `OutletConnectionPoint` with an `OutletConnectionPoint`."^^xsd:string ;
            sh:path s223:mapsTo ],
        [ rdfs:comment "Ensure an `OutletConnectionPoint` has a `mapsTo` relation to its containing `Equipment` if it has an external `Connection`"^^xsd:string ;
            sh:path s223:mapsTo ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Ensure an `OutletConnectionPoint` has a `mapsTo` relation to its containing `Equipment` if it has an external `Connection`"^^xsd:string ;
                    sh:message "s223: {$this} must have a `mapsTo` an `OutletConnectionPoint` of {?parentEquipment} and not an external `Connection` to {?destinationEquipment}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?parentEquipment ?destinationEquipment
WHERE {
?equipment s223:hasConnectionPoint $this .
?parentEquipment s223:contains ?equipment .
$this s223:connectsThrough/s223:connectsTo ?destinationEquipment .
FILTER NOT EXISTS {?parentEquipment s223:contains ?destinationEquipment} .
FILTER NOT EXISTS {$this s223:mapsTo ?anything} .
}
"""^^xsd:string ] ] .

s223:InletConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Inlet Connection Point"^^xsd:string ;
    rdfs:comment "An `InletConnectionPoint` is a `ConnectionPoint` for which a Medium is expected to flow into the associated `Connectable`."^^xsd:string ;
    rdfs:subClassOf s223:ConnectionPoint ;
    sh:property [ rdfs:comment "If the relation `mapsTo` is present it must associate the `InletConnectionPoint` with an `InletConnectionPoint`."^^xsd:string ;
            sh:class s223:InletConnectionPoint ;
            sh:message "s223: If the relation `mapsTo` is present it must associate the `InletConnectionPoint` with an `InletConnectionPoint`."^^xsd:string ;
            sh:path s223:mapsTo ],
        [ rdfs:comment "Ensure an `InletConnectionPoint` has a `mapsTo` relation to its containing `Equipment` if it has an external `Connection`"^^xsd:string ;
            sh:path s223:mapsTo ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Ensure an `InletConnectionPoint` has a `mapsTo` relation to its containing `Equipment` if it has an external `Connection`"^^xsd:string ;
                    sh:message "s223: {$this} must have a `mapsTo` an `InletConnectionPoint` of {?parentEquipment} and not an external `Connection` from {?sourceEquipment}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?parentEquipment ?sourceEquipment
WHERE {
?equipment s223:hasConnectionPoint $this .
?parentEquipment s223:contains ?equipment .
$this s223:connectsThrough/s223:connectsFrom ?sourceEquipment .
FILTER NOT EXISTS {?parentEquipment s223:contains ?sourceEquipment} .
FILTER NOT EXISTS {$this s223:mapsTo ?anything} .
}
"""^^xsd:string ] ],
        [ rdfs:comment "If the relation `pairedConnectionPoint` is present it must associate the `InletConnectionPoint` with an `OutletConnectionPoint` or `BidirectionalConnectionPoint`."^^xsd:string ;
            sh:message "s223: If the relation `pairedConnectionPoint` is present it must associate the `InletConnectionPoint` with an `OutletConnectionPoint` or `BidirectionalConnectionPoint`."^^xsd:string ;
            sh:or ( [ sh:class s223:OutletConnectionPoint ] [ sh:class s223:BidirectionalConnectionPoint ] ) ;
            sh:path s223:pairedConnectionPoint ] .

s223:NumberOfElectricalPhases-SinglePhase a s223:Class,
        s223:NumberOfElectricalPhases-SinglePhase,
        sh:NodeShape ;
    rdfs:label "Single Phase AC Electricity"^^xsd:string ;
    s223:hasValue 1.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Dimensionless> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/NUM> ;
    rdfs:comment "Single Phase AC Electricity"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-NumberOfElectricalPhases .

s223:Equipment a s223:Class,
        sh:NodeShape ;
    rdfs:label "Equipment"^^xsd:string ;
    rdfs:comment """
`Equipment` is the modeling construct used to represent a device designed to accomplish a specific task, 
or a complex device that contains component pieces of `Equipment`. This is distinct from a `System`, which is a logical grouping or collection of `Equipment`. 
`Equipment` can have `ConnectionPoint`s and participate 
in the flow of one or more kinds of Medium. Examples of possible equipment include a `Pump`, `Fan`, HeatExchanger, `Luminaire`, 
`TemperatureSensor`, or `FlowSensor`.

In common usage terms like equipment and system have a variety of ambituous and possibly conflicting interpretations. A semantic model
is an attempt to eliminate such ambiguities and conflicts. If the thing being modeled has a need for `ConnectionPoint`s it must be modeled as Equipment and not a System.
Thus, a complex example like a chlled water plant is modeled as Equipment because it has connection points for distributing chilled water. The same chilled water plant 
may be part of a logical grouping of pumps, valves, filters, and other things modeled as a chilled water System.

The graphical depiction of Equipment used in this standard is a rounded cornered rectangle as show in Figure 5-1.

![Graphical Depiction of Equipment.](figures/Figure_5-1Graphical_Depiciton_of_Equipment.svg)
  """^^xsd:string ;
    rdfs:subClassOf s223:Connectable ;
    sh:property [ rdfs:comment "Disallow contained equipment from having external outgoing connections."^^xsd:string ;
            sh:path s223:connectedTo ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Disallow contained equipment from having external outgoing connections."^^xsd:string ;
                    sh:message "s223: {$this} should not have a connection to external equipment {?otherDev} because {?container} contains {$this}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?container ?otherDev
WHERE {
$this s223:connectedTo ?otherDev .
$this ^s223:contains ?container .
?container a/rdfs:subClassOf* s223:Equipment .
FILTER NOT EXISTS {?container s223:contains ?otherDev .}
}
"""^^xsd:string ] ],
        [ rdfs:comment "If the relation `hasRole` is present it must associate the `Equipment` with a `EnumerationKind-Role`."^^xsd:string ;
            sh:class s223:EnumerationKind-Role ;
            sh:message "s223: If the relation `hasRole` is present it must associate the `Equipment` with a `EnumerationKind-Role`."^^xsd:string ;
            sh:path s223:hasRole ],
        [ rdfs:comment "Warning about a subClass of `Equipment` of type A containing something that is in the same subClass branch."^^xsd:string ;
            sh:path s223:contains ;
            sh:severity sh:Warning ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Warning about a subClass of `Equipment` of type A containing something that is in the same subClass branch."^^xsd:string ;
                    sh:message "s223: {$this}, of type {?type1}, contains {?subEquip} of type {?type2}, that could result in double-counting items in the class hierarchy of {?type1}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?subEquip ?type1 ?type2
WHERE {
  FILTER NOT EXISTS {$this a s223:Equipment} .
$this s223:contains+ ?subEquip .
  FILTER NOT EXISTS {?subEquip a s223:Equipment} .
$this a ?type1 .
?subEquip a ?type2 .
{
?type2 rdfs:subClassOf* ?type1 .
}
UNION
{
?type1 rdfs:subClassOf* ?type2 .
}
}
"""^^xsd:string ] ],
        [ rdfs:comment "If the relation `hasPhysicalLocation` is present it must associate the `Equipment` with a `PhysicalSpace`."^^xsd:string ;
            sh:class s223:PhysicalSpace ;
            sh:message "s223: If the relation `hasPhysicalLocation` is present it must associate the `Equipment` with a `PhysicalSpace`."^^xsd:string ;
            sh:path s223:hasPhysicalLocation ],
        [ a sh:PropertyShape ;
            rdfs:comment "If the relation `contains` is present it must associate the `Equipment` with either `Equipment` or `Junction`."^^xsd:string ;
            sh:message "s223: If the relation `contains` is present it must associate the `Equipment` with either `Equipment` or `Junction`."^^xsd:string ;
            sh:name "device contains shape"^^xsd:string ;
            sh:or ( [ sh:class s223:Equipment ] [ sh:class s223:Junction ] ) ;
            sh:path s223:contains ],
        [ rdfs:comment """If the relation `actuatedByProperty` is present it must associate the `Equipment` with a `ActuatableProperty`.
Note that any `Equipment` may use this relation, not just `Actuator`."""^^xsd:string ;
            sh:class s223:ActuatableProperty ;
            sh:message """If the relation `actuatedByProperty` is present it must associate the `Equipment` with a `ActuatableProperty`.
Note that any `Equipment` may use this relation, not just `Actuator`."""^^xsd:string ;
            sh:path s223:actuatedByProperty ],
        [ rdfs:comment "Disallow contained equipment from having external incoming connections."^^xsd:string ;
            sh:path s223:connectedFrom ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment "Disallow contained equipment from having external incoming connections."^^xsd:string ;
                    sh:message "s223: {$this} should not have a connection from external equipment {?otherDev} because {?container} contains {$this}."^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this ?container ?otherDev
WHERE {
$this s223:connectedFrom ?otherDev .
$this ^s223:contains ?container .
?container a/rdfs:subClassOf* s223:Equipment .
FILTER NOT EXISTS {?container s223:contains ?otherDev .}
}
"""^^xsd:string ] ],
        [ rdfs:comment "If the relation `executes` is present it must associate the `Equipment` with a `Function`."^^xsd:string ;
            sh:class s223:Function ;
            sh:message "s223: If the relation `executes` is present it must associate the `Equipment` with a `Function`."^^xsd:string ;
            sh:path s223:executes ] ;
    sh:rule [ a sh:SPARQLRule ;
            rdfs:comment "For equipment contained within another piece of equipment use the `mapsTo` relation to infer a Medium from the containing equipment."^^xsd:string ;
            sh:construct """
CONSTRUCT {
    ?childCp s223:hasMedium ?medium .
}
WHERE {
  $this s223:hasConnectionPoint ?cp .
  ?childCp s223:mapsTo ?cp .
  ?cp s223:connectsThrough ?connection .
  ?cp s223:hasMedium ?medium .
  FILTER NOT EXISTS {?childCp s223:hasMedium ?something} .
}
"""^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ],
        [ a sh:SPARQLRule ;
            rdfs:comment "For equipment containing another piece of equipment, use the `mapsTo` relation to infer a Medium from the contained equipment."^^xsd:string ;
            sh:construct """
CONSTRUCT {
    ?parentCp s223:hasMedium ?medium .
}
WHERE {
  $this s223:hasConnectionPoint ?cp .
  ?cp s223:mapsTo ?parentCp .
  ?cp s223:connectsThrough ?connection .
  ?cp s223:hasMedium ?medium .
  FILTER NOT EXISTS {?parentCp s223:hasMedium ?something} .
}
"""^^xsd:string ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ] .

s223:Numerical-Voltage a s223:Class,
        s223:Numerical-Voltage,
        sh:NodeShape ;
    rdfs:label "Dimensioned Voltage"^^xsd:string ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Voltage> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/V> ;
    ns2:subclauses ( s223:Voltage-DCVoltage ) ;
    rdfs:comment """
This class has enumerated instances of common voltages.

: Voltage Enumerations

| Enumeration |
|:-----------|
| `Voltage-0V` |
| `Voltage-10000V` |
| `Voltage-110V` |
| `Voltage-120V` |
| `Voltage-127V` |
| `Voltage-12V` |
| `Voltage-139V` |
| `Voltage-1730V` |
| `Voltage-1900V` |
| `Voltage-190V` |
| `Voltage-208V` |
| `Voltage-219V` |
| `Voltage-220V` |
| `Voltage-231V` |
| `Voltage-2400V` |
| `Voltage-240V` |
| `Voltage-24V` |
| `Voltage-277V` |
| `Voltage-2V` |
| `Voltage-3000V` |
| `Voltage-3300V` |
| `Voltage-3460V` |
| `Voltage-347V` |
| `Voltage-380V` |
| `Voltage-3810V` |
| `Voltage-3V` |
| `Voltage-400V` |
| `Voltage-415V` |
| `Voltage-4160V` |
| `Voltage-480V` |
| `Voltage-48V` |
| `Voltage-5770V` |
| `Voltage-5V` |
| `Voltage-6000V` |
| `Voltage-600V` |
| `Voltage-6600V` |
| `Voltage-6V` |
| `Voltage-PoE` |
"""^^xsd:string ;
    rdfs:subClassOf s223:EnumerationKind-Numerical ;
    sh:property [ rdfs:comment "A `Numerical-Voltage` must have a `QuantityKind` of `Voltage`"^^xsd:string ;
            sh:hasValue <http://qudt.org/vocab/quantitykind/Voltage> ;
            sh:path ns1:hasQuantityKind ],
        [ rdfs:comment "A `Numerical-Voltage` must have a `Unit` of `Volts`"^^xsd:string ;
            sh:hasValue <http://qudt.org/vocab/unit/V> ;
            sh:path ns1:hasUnit ] .

s223:Frequency-60Hz a s223:Class,
        s223:Frequency-60Hz,
        sh:NodeShape ;
    rdfs:label "60 Hertz"^^xsd:string ;
    s223:hasValue 60.0 ;
    ns1:hasQuantityKind <http://qudt.org/vocab/quantitykind/Frequency> ;
    ns1:hasUnit <http://qudt.org/vocab/unit/HZ> ;
    rdfs:comment "60 Hertz"^^xsd:string ;
    rdfs:subClassOf s223:Numerical-Frequency .

rdf:Property a sh:NodeShape ;
    sh:property [ rdfs:comment "Every `Property` must have a label"^^xsd:string ;
            sh:path rdfs:label ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    sh:message "s223: {$this} must have an rdfs:label"^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this
WHERE {
BIND(REPLACE(STR($this), "^(.*)(/|#)([^#/]*)$", "$1") AS ?prop) .
FILTER (?prop = "http://data.ashrae.org/standard223") .
FILTER (NOT EXISTS {$this rdfs:label ?something}) .
}
"""^^xsd:string ] ],
        [ rdfs:comment "Every `Property` must have a comment"^^xsd:string ;
            sh:path rdfs:comment ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    sh:message "s223: {$this} must have an rdfs:comment"^^xsd:string ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/model/all> ;
                    sh:select """
SELECT $this
WHERE {
BIND(REPLACE(STR($this), "^(.*)(/|#)([^#/]*)$", "$1") AS ?prop) .
FILTER (?prop = "http://data.ashrae.org/standard223") .
FILTER (NOT EXISTS {$this rdfs:comment ?something}) .
}
"""^^xsd:string ] ] .

<http://data.ashrae.org/standard223/1.0/model/all> a owl:Ontology ;
    owl:imports <http://qudt.org/3.0.0/vocab/constant>,
        <http://qudt.org/3.0.0/vocab/currency>,
        <http://qudt.org/3.0.0/vocab/unit>,
        <http://qudt.org/3.1.0/vocab/constant>,
        <http://qudt.org/3.1.0/vocab/unit>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer",
        "Created with TopBraid Composer"^^xsd:string ;
    sh:declare [ sh:namespace "http://qudt.org/vocab/quantitykind/"^^xsd:anyURI ;
            sh:prefix "qudtqk"^^xsd:string ],
        [ sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
            sh:prefix "rdf"^^xsd:string ],
        [ sh:namespace "http://www.w3.org/ns/shacl#"^^xsd:anyURI ;
            sh:prefix "sh"^^xsd:string ],
        [ sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
            sh:prefix "qudt"^^xsd:string ],
        [ sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
            sh:prefix "rdfs"^^xsd:string ],
        [ sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
            sh:prefix "qudt"^^xsd:string ],
        [ sh:namespace "http://qudt.org/vocab/quantitykind/"^^xsd:anyURI ;
            sh:prefix "quantitykind"^^xsd:string ],
        [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223"^^xsd:string ],
        [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223"^^xsd:string ],
        [ sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
            sh:prefix "qudt"^^xsd:string ],
        [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223"^^xsd:string ],
        [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223"^^xsd:string ],
        [ sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
            sh:prefix "rdf"^^xsd:string ],
        [ sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
            sh:prefix "rdfs"^^xsd:string ],
        [ sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
            sh:prefix "rdfs"^^xsd:string ],
        [ sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
            sh:prefix "qudt"^^xsd:string ],
        [ sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
            sh:prefix "rdfs"^^xsd:string ],
        [ sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
            sh:prefix "rdfs"^^xsd:string ],
        [ sh:namespace "http://qudt.org/vocab/unit/"^^xsd:anyURI ;
            sh:prefix "unit"^^xsd:string ],
        [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223"^^xsd:string ],
        [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223"^^xsd:string ],
        [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223"^^xsd:string ],
        [ sh:namespace "http://www.w3.org/ns/shacl#"^^xsd:anyURI ;
            sh:prefix "sh"^^xsd:string ],
        [ sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
            sh:prefix "rdf"^^xsd:string ],
        [ sh:namespace "http://www.w3.org/ns/shacl#"^^xsd:anyURI ;
            sh:prefix "sh"^^xsd:string ],
        [ sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
            sh:prefix "qudt"^^xsd:string ],
        [ sh:namespace "http://data.ashrae.org/standard223/1.0/vocab/role#"^^xsd:anyURI ;
            sh:prefix "role"^^xsd:string ] .

s223:Electricity-AC a s223:Aspect-Effectiveness,
        s223:Class,
        s223:Electricity-AC,
        sh:NodeShape ;
    rdfs:label "Electricity AC"^^xsd:string ;
    s223:hasFrequency s223:Numerical-Frequency ;
    s223:hasNumberOfElectricalPhases s223:Numerical-NumberOfElectricalPhases ;
    s223:hasVoltage s223:Numerical-Voltage ;
    rdfs:comment """
This class has enumerated instances of all AC forms of electricity.

: AC Enumerations

| Enumeration |
|:-----------|
| `AC-10000VLL-1Ph-60Hz` |
| `AC-10000VLL-3Ph-60Hz` |
| `AC-10000VLL-5770VLN-1Ph-60Hz` |
| `AC-10000VLL-5770VLN-3Ph-60Hz` |
| `AC-110VLN-1Ph-50Hz` |
| `AC-120VLN-1Ph-60Hz` |
| `AC-127VLN-1Ph-50Hz` |
| `AC-139VLN-1Ph-50Hz` |
| `AC-1730VLN-1Ph-60Hz` |
| `AC-1900VLN-1Ph-60Hz` |
| `AC-190VLL-110VLN-1Ph-50Hz` |
| `AC-190VLL-110VLN-3Ph-50Hz` |
| `AC-190VLL-1Ph-50Hz` |
| `AC-190VLL-3Ph-50Hz` |
| `AC-208VLL-120VLN-1Ph-60Hz` |
| `AC-208VLL-120VLN-3Ph-60Hz` |
| `AC-208VLL-1Ph-60Hz` |
| `AC-208VLL-3Ph-60Hz` |
| `AC-219VLN-1Ph-60Hz` |
| `AC-220VLL-127VLN-1Ph-50Hz` |
| `AC-220VLL-127VLN-3Ph-50Hz` |
| `AC-220VLL-1Ph-50Hz` |
| `AC-220VLL-3Ph-50Hz` |
| `AC-231VLN-1Ph-50Hz` |
| `AC-2400VLN-1Ph-60Hz` |
| `AC-240VLL-120VLN-1Ph-60Hz` |
| `AC-240VLL-139VLN-1Ph-50Hz` |
| `AC-240VLL-139VLN-3Ph-50Hz` |
| `AC-240VLL-1Ph-50Hz` |
| `AC-240VLL-1Ph-60Hz` |
| `AC-240VLL-208VLN-120VLN-1Ph-60Hz` |
| `AC-240VLL-208VLN-120VLN-3Ph-60Hz` |
| `AC-240VLL-3Ph-50Hz` |
| `AC-240VLL-3Ph-60Hz` |
| `AC-240VLN-1Ph-50Hz` |
| `AC-24VLN-1Ph-50Hz` |
| `AC-24VLN-1Ph-60Hz` |
| `AC-277VLN-1Ph-60Hz` |
| `AC-3000VLL-1730VLN-1Ph-60Hz` |
| `AC-3000VLL-1730VLN-3Ph-60Hz` |
| `AC-3000VLL-1Ph-60Hz` |
| `AC-3000VLL-3Ph-60Hz` |
| `AC-3300VLL-1900VLN-1Ph-60Hz` |
| `AC-3300VLL-1900VLN-3Ph-60Hz` |
| `AC-3300VLL-1Ph-60Hz` |
| `AC-3300VLL-3Ph-60Hz` |
| `AC-3460VLN-1Ph-60Hz` |
| `AC-347VLN-1Ph-60Hz` |
| `AC-380VLL-1Ph-60Hz` |
| `AC-380VLL-219VLN-1Ph-60Hz` |
| `AC-380VLL-219VLN-3Ph-60Hz` |
| `AC-380VLL-3Ph-60Hz` |
| `AC-3810VLN-1Ph-60Hz` |
| `AC-400VLL-1Ph-50Hz` |
| `AC-400VLL-231VLN-1Ph-50Hz` |
| `AC-400VLL-231VLN-3Ph-50Hz` |
| `AC-400VLL-3Ph-50Hz` |
| `AC-415VLL-1Ph-50Hz` |
| `AC-415VLL-240VLN-1Ph-50Hz` |
| `AC-415VLL-240VLN-3Ph-50Hz` |
| `AC-415VLL-3Ph-50Hz` |
| `AC-4160VLL-1Ph-60Hz` |
| `AC-4160VLL-2400VLN-1Ph-60Hz` |
| `AC-4160VLL-2400VLN-3Ph-60Hz` |
| `AC-4160VLL-3Ph-60Hz` |
| `AC-480VLL-1Ph-60Hz` |
| `AC-480VLL-277VLN-1Ph-60Hz` |
| `AC-480VLL-277VLN-3Ph-60Hz` |
| `AC-480VLL-3Ph-60Hz` |
| `AC-5770VLN-1Ph-60Hz` |
| `AC-6000VLL-1Ph-60Hz` |
| `AC-6000VLL-3460VLN-1Ph-60Hz` |
| `AC-6000VLL-3460VLN-3Ph-60Hz` |
| `AC-6000VLL-3Ph-60Hz` |
| `AC-600VLL-1Ph-60Hz` |
| `AC-600VLL-347VLN-1Ph-60Hz` |
| `AC-600VLL-347VLN-3Ph-60Hz` |
| `AC-600VLL-3Ph-60Hz` |
| `AC-6600VLL-1Ph-60Hz` |
| `AC-6600VLL-3810VLN-1Ph-60Hz` |
| `AC-6600VLL-3810VLN-3Ph-60Hz` |
| `AC-6600VLL-3Ph-60Hz` |
"""^^xsd:string ;
    rdfs:subClassOf s223:Constituent-Electricity ;
    sh:property [ rdfs:comment "An electricity AC medium must have a frequency"^^xsd:string ;
            sh:class s223:Numerical-Frequency ;
            sh:minCount 1 ;
            sh:path s223:hasFrequency ],
        [ rdfs:comment "An electricity AC medium must have a number of electrical phases."^^xsd:string ;
            sh:class s223:Numerical-NumberOfElectricalPhases ;
            sh:minCount 1 ;
            sh:path s223:hasNumberOfElectricalPhases ],
        [ rdfs:comment "An electricity AC medium must have a voltage."^^xsd:string ;
            sh:minCount 1 ;
            sh:or ( [ sh:class s223:Numerical-LineLineVoltage ] [ sh:class s223:Numerical-LineNeutralVoltage ] [ sh:class s223:Numerical-Voltage ] ) ;
            sh:path s223:hasVoltage ] .

s223:hasConnectionPoint a rdf:Property ;
    rdfs:label "has connection point"^^xsd:string ;
    s223:inverseOf s223:isConnectionPointOf ;
    rdfs:comment "The relation `hasConnectionPoint` is part of a pair of relations that bind a `Connectable` thing to a `ConnectionPoint`. It is the inverse of the relation `isConnectionPointOf` (see {s223:isConnectionPointOf})."^^xsd:string .

s223:hasMedium a rdf:Property ;
    rdfs:label "has Medium"^^xsd:string ;
    rdfs:comment "The relation `hasMedium` is used to indicate what medium is flowing through the connection (e.g., air, water, electricity). The possible values are defined in `Substance-Medium` (see {s223:Substance-Medium})."^^xsd:string .

[] sh:minCount 1 .

